{"version":3,"sources":["../../core/Simulation/simulation.worker.js","ui-components/Tour/images/bifurcation.gif","ui-components/Tour/images/context-menu.gif","ui-components/Tour/images/simulation.gif","ui-components/Tour/images/wire.gif","../../core/Diagram/states/common.js","../../core/Simulation/utils.js","../../core/Link/LinkModel.js","../../core/Port/PortModel.js","../../core/Simulation/AudioEngine.js","../../core/Simulation/serialize.js","../../core/Simulation/SimulationEngine.js","../../core/BaseModel.js","../../core/Component.jsx","../../core/Diagram/DroppableLayer.jsx","../../core/Diagram/Diagram.jsx","../../core/Link/LinkWidget.jsx","../../core/Link/LinkFactory.jsx","../../core/Port/PortFactory.js","../../core/Diagram/actions/ClipboardAction.js","../../core/Diagram/actions/DeleteAction.js","../../core/Diagram/actions/DuplicateAction.js","../../core/Diagram/actions/UndoRedoAction.js","../../core/Diagram/actions/ZoomAction.js","../../core/Diagram/Command/commandHandlers.js","../../core/Diagram/Command/Command.js","../../core/Diagram/Command/CommandManager.js","../../core/Diagram/states/handleLinkDrag.js","../../core/Diagram/states/BifurcateLinkState.js","../../core/Diagram/states/DragCanvasState.js","../../core/Diagram/states/DragNewLinkState.js","../../core/Diagram/states/MoveItemsState.js","../../core/Diagram/states/SelectionBoxState.js","../../core/Diagram/states/SelectingState.js","../../core/Diagram/states/States.js","../../core/Diagram/DiagramEngine.js","../../core/Port/Port.jsx","../../components/portExtendUtils.js","../../components/And/AndWidget.jsx","../../components/And/AndIcon.jsx","../../components/And/AndRegister.js","../../components/And/AndModel.js","../../components/Buffer/BufferWidget.jsx","../../components/Buffer/BufferIcon.jsx","../../components/Buffer/BufferRegister.js","../../components/Buffer/BufferModel.js","../../components/Button/ButtonWidget.jsx","../../components/Button/ButtonIcon.jsx","../../components/Button/ButtonRegister.js","../../components/Button/ButtonModel.js","../../components/Buzzer/BuzzerWidget.jsx","../../components/Buzzer/BuzzerIcon.jsx","../../components/Buzzer/BuzzerRegister.js","../../components/Buzzer/BuzzerModel.js","../../components/Clock/ClockWidget.jsx","../../components/Clock/ClockIcon.jsx","../../components/Clock/ClockRegister.js","../../components/Clock/ClockModel.js","../../components/Demux/DemuxWidget.jsx","../../components/Demux/DemuxIcon.jsx","../../components/Demux/DemuxRegister.js","../../components/Demux/DemuxModel.js","../../components/Ground/GroundWidget.jsx","../../components/Ground/GroundIcon.jsx","../../components/Ground/GroundRegister.js","../../components/Ground/GroundModel.js","../../components/Input/InputWidget.jsx","../../components/Input/InputIcon.jsx","../../components/Input/InputRegister.js","../../components/Input/InputModel.js","../../components/Joiner/JoinerWidget.jsx","../../components/Joiner/JoinerIcon.jsx","../../components/Joiner/JoinerRegister.js","../../components/Joiner/JoinerModel.js","../../components/Led/LedWidget.jsx","../../components/Led/LedIcon.jsx","../../components/Led/LedRegister.js","../../components/Led/LedModel.js","../../components/Mux/MuxWidget.jsx","../../components/Mux/MuxIcon.jsx","../../components/Mux/MuxRegister.js","../../components/Mux/MuxModel.js","../../components/Nand/NandWidget.jsx","../../components/Nand/NandIcon.jsx","../../components/Nand/NandRegister.js","../../components/Nand/NandModel.js","../../components/Nor/NorWidget.jsx","../../components/Nor/NorIcon.jsx","../../components/Nor/NorRegister.js","../../components/Nor/NorModel.js","../../components/Not/NotWidget.jsx","../../components/Not/NotIcon.jsx","../../components/Not/NotRegister.js","../../components/Not/NotModel.js","../../components/Or/OrWidget.jsx","../../components/Or/OrIcon.jsx","../../components/Or/OrRegister.js","../../components/Or/OrModel.js","../../components/Output/OutputWidget.jsx","../../components/Output/OutputIcon.jsx","../../components/Output/OutputRegister.js","../../components/Output/OutputModel.js","../../components/Power/PowerWidget.jsx","../../components/Power/PowerIcon.jsx","../../components/Power/PowerRegister.js","../../components/Power/PowerModel.js","../../components/Splitter/SplitterWidget.jsx","../../components/Splitter/SplitterIcon.jsx","../../components/Splitter/SplitterRegister.js","../../components/Splitter/SplitterModel.js","../../components/Ssd/SsdWidget.jsx","../../components/Ssd/SsdIcon.jsx","../../components/Ssd/SsdRegister.js","../../components/Ssd/SsdModel.js","../../components/Switch/SwitchWidget.jsx","../../components/Switch/SwitchIcon.jsx","../../components/Switch/SwitchRegister.js","../../components/Switch/SwitchModel.js","../../components/Xnor/XnorWidget.jsx","../../components/Xnor/XnorIcon.jsx","../../components/Xnor/XnorRegister.js","../../components/Xnor/XnorModel.js","../../components/Xor/XorWidget.jsx","../../components/Xor/XorIcon.jsx","../../components/index.js","../../components/Xor/XorRegister.js","../../components/Xor/XorModel.js","ui-components/Buttons/ComponentSelectButton.jsx","ui-components/Buttons/DiagramStateButtons.jsx","ui-components/Icons/ArrowLeft.jsx","ui-components/Icons/Chevron.jsx","ui-components/Icons/Close.jsx","ui-components/Icons/Copy.jsx","ui-components/Icons/Cut.jsx","ui-components/Icons/Delete.jsx","ui-components/Icons/Duplicate.jsx","ui-components/Icons/Paste.jsx","ui-components/Icons/Pause.jsx","ui-components/Icons/Play.jsx","ui-components/Icons/Redo.jsx","ui-components/Icons/Settings.jsx","ui-components/Icons/Stop.jsx","ui-components/Icons/Undo.jsx","ui-components/Icons/ZoomIn.jsx","ui-components/Icons/ZoomOut.jsx","ui-components/Buttons/SimulationControlButtons.jsx","ui-components/Modal/Modal.jsx","ui-components/Modal/ModalContentLayout.jsx","ui-components/ComponentSelect/ComponentConfigurationInput.jsx","ui-components/ComponentSelect/DraggableComponent.jsx","ui-components/ComponentSelect/ComponentConfiguration.jsx","ui-components/ComponentSelect/ComponentEdit.jsx","ui-components/ComponentSelect/ComponentGroup.jsx","ui-components/ComponentSelect/ComponentSearch.jsx","ui-components/ComponentSelect/ComponentSelect.jsx","ui-components/Key/Key.jsx","ui-components/ContextMenus/ContextMenuIconContainer.jsx","ui-components/ContextMenus/ContextMenuShortcutContainer.jsx","ui-components/ContextMenus/ComponentContextMenu.jsx","ui-components/ContextMenus/DiagramContextMenu.jsx","ui-components/ContextMenus/ContextMenus.jsx","ui-components/Help/HelpAbout.jsx","ui-components/Help/HelpKeyboardShortcuts.jsx","ui-components/Snackbar/Snackbar.jsx","ui-components/Tour/tourCircuit.js","ui-components/Tour/Tour.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_public_path__","snap","position","gridSize","Point","Math","round","x","y","samePosition","p1","p2","sameX","points","map","p","every","i","arr","sameY","sameAxis","closestPointToLink","P","link","distance","A","B","hypot","closestPointOnSegment","Q","segment","v","u","t","closest","point","distanceToA","distanceToB","hasMiddlePoint","getFirstPosition","getLastPosition","firstSegment","getMiddlePosition","lastSegment","isPointOverSegment","max","min","isPointOverLink","getSecondPosition","isPointOverFirstLinkSegment","isPointOverSecondLinkSegment","getLandingLink","engine","getLastPoint","getPosition","Object","values","getModel","getLinkLayers","getLinks","find","target","getID","getIncompatibleWidthsErrorMessage","source","getBits","MAX_VALUE","1","2","4","8","16","isValueValid","value","dataBits","LinkModel","options","type","bifurcations","bifurcationSource","bifurcationTarget","bits","label","LabelModel","newLabel","DefaultLabelModel","setLabel","this","getBifurcationSource","getBifurcationTarget","bifurcation","push","filter","b","result","forEach","getAllBifurcations","flat","Infinity","selected","setSelected","getSourcePort","getTargetPort","remove","removeBifurcation","event","registerModel","data","requestAnimationFrame","PointModel","then","addBifurcation","setBifurcationSource","setBifurcationTarget","repaintCanvas","pointModel","index","getPoints","length","getFirstPoint","getSecondPoint","getMiddlePoint","getSecondLastPoint","first","middle","last","includes","Error","isSelected","RDLinkModel","PortModel","maximumLinks","input","keys","getMaximumLinks","port","isNewLinkAllowed","setBits","links","getMainLink","getColor","RDPortModel","AudioEngine","context","AudioContext","destination","audios","id","frequency","waveform","gainNode","createGain","gain","oscillator","createOscillator","connect","start","getGainNode","e","disconnect","getOscillator","payload","command","create","play","pause","setFrequency","setWaveform","getAudio","audio","stop","serializeComponents","components","component","getType","configurations","ports","name","getName","isInput","properties","instance","key","reduce","obj","getPortInfo","componentId","getParent","getLinkId","serialize","diagram","models","Class","Model","methods","getOwnPropertyNames","prototype","methodName","toString","getActiveLinkLayer","getModels","getBifurcations","isBifurcation","getActiveNodeLayer","worker","SimulationWorker","SimulationEngine","onSimulationMessage","appendDiff","audioEngine","handlePayload","cleanUp","addEventListener","state","clearDiff","postMessage","undefined","Promise","resolve","waitForEnd","removeEventListener","diff","getPort","BaseModel","initialize","arg","setAsInput","setAsOutput","addInputPort","isOutput","addOutputPort","fromEntries","entries","getPorts","args","clone","setPosition","getX","getY","from","emitted","emit","NodeModel","Component","description","group","model","widget","icon","Widget","Icon","storeRef","initialConfig","AbstractReactFactory","DroppableLayer","styled","div","attrs","disabled","props","onDragOver","preventDefault","onDrop","JSON","parse","dataTransfer","getData","handleComponentDrop","FullscreenCanvas","CanvasWidget","Diagram","test","isLocked","getEngine","LinkWidget","refPaths","updateRenderedPaths","clearRenderedPaths","setRenderedPaths","ref","current","to","tuple","path","factory","React","createRef","cloneElement","generateLinkSegment","loose","color","r","getPointRadius","fill","stroke","strokeWidth","cx","cy","bifurcationOrigin","lastSourcePoint","renderPoint","bifurcationTargetPosition","some","data-default-link-test","getOptions","testName","generatePathPoints","renderSegment","generateLinePath","renderBifurcationSourcePoint","renderBifurcationTargetPoint","renderLooseLinkPoint","Path","LinkFactory","diagramEngine","getLineWidth","d","DefaultLinkFactory","PortFactory","AbstractModelFactory","ClipboardAction","areShortcutsAllowed","InputType","KEY_DOWN","fire","matchesInput","code","handleCut","handleCopy","handlePaste","ctrlKey","getSelectedComponents","getSelectedEntities","entity","copies","fireEvent","nodes","node","getAllLinks","localStorage","setItem","stringify","clipboard","getItem","clearSelection","serialized","modelInstance","getChildModelFactoryBank","getFactory","generateModel","deserialize","addNode","Action","DeleteAction","handleAction","entities","nodesLinks","DuplicateAction","clones","UndoRedoAction","shiftKey","handleUndo","handleRedo","commands","undo","redo","ZOOM_LEVELS","ZoomAction","MOUSE_WHEEL","stopPropagation","getLayers","layer","allowRepaint","nextZoomLevelIndex","zoomDirection","sign","deltaY","currentZoomLevelIndex","indexOf","getZoomLevel","oldZoomFactor","setZoomLevel","zoomFactor","boundingRect","getCanvas","getBoundingClientRect","clientWidth","width","clientHeight","height","widthDiff","heightDiff","clientX","left","clientY","top","xFactor","getOffsetX","yFactor","getOffsetY","setOffset","commandHandlers","editComponentConfiguration","adjustLink","nodeList","sourcePort","n","setSourcePort","addLink","targetPort","setTargetPort","componentsAdded","add","execute","componentEdited","after","before","linkAdded","linkChanged","handleLinkChanged","getLink","setPoints","oldTarget","entitiesRemoved","sort","l1","l2","entitiesMoved","handleEntitiesMoved","getNode","Command","CommandManager","clear","stack","nextLinkPosition","initialRelative","sourcePosition","zoomLevelPercentage","engineOffsetX","engineOffsetY","getRelativePoint","initialXRelative","initialYRelative","linkNextX","virtualDisplacementX","linkNextY","virtualDisplacementY","handleLinkDrag","next","hasStartedMoving","removePoint","moveDirection","addPoint","generatePoint","BifurcateLinkState","showSnackbar","sourceEdited","sourceBefore","getLinkPoints","registerAction","MOUSE_DOWN","getMouseElement","snapPointToSourceLink","getRelativeMousePoint","eject","getLinkFactories","MOUSE_UP","isNearbySourcePosition","reportPosition","adjustBifurcationOverlayingSource","landing","mergeWithBifurcation","sourcePoints","closestCorner","getClosestCornerToPosition","closestPath","getClosestPathToPosition","snappedPosition","axis","sourcePoint","getPathPoints","pathPosition","getPathDirections","abs","secondLast","getSecondLastPosition","bifurcationToMerge","newMiddle","newLast","isStraight","adjustBifurcationPoints","newSource","call","AbstractDisplacementState","DragCanvasState","prev","initialCanvasX","initialCanvasY","nativeEvent","which","displacementX","displacementY","DragNewLinkState","createLinkModel","isNearbySourcePort","canLinkToPort","reverse","getFactoryForLink","tolerance","sourcePortSize","sourcePortPosition","MoveItemsState","getNodesPositions","getLinksPoints","adjustLinkPoints","linkDirections","adjustLinkBifurcations","lastDisplacement","element","getActionEventBus","getModelForEvent","getLinkDirections","nodesBefore","linksBefore","previous","initialPositions","entry","getBifurcatedLinks","getLinksFromNode","acc","getLinkDirection","currentDisplacement","BasePositionModel","moveEntity","adjustNodeLinks","item","initial","getGridPosition","adjustFirstAndLastPoints","closestToFirst","closestToLast","SelectionBoxState","SelectionLayerModel","addLayer","rel","right","bottom","setBox","getBoxDimensions","relative","initialX","initialY","rect","Rectangle","getSelectionEntities","getBoundingBox","allowSelection","bounds","containsPoint","getTopLeft","getBottomRight","SelectingState","transitionWithEvent","State","States","childStates","dragCanvas","dragNewLink","bifurcateLink","dragItems","DiagramEngine","initializeEngine","createEngine","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","registerListener","getStateMachine","pushState","getPortFactories","registerFactory","registerComponents","initializeModel","DiagramModel","setGridSize","setLocked","eventDidFire","function","adjustGridOffset","adjustGridZoom","realignGrid","setModel","getNodeFactories","load","circuit","deserializeModel","locked","repaint","offsetX","offsetY","zoom","document","body","style","setProperty","c","getSnappedRelativeMousePoint","handleComponentEdit","configurationsBefore","portsBefore","hasNewPort","newPort","hasRemovedPort","oldPort","portBefore","getSelectedNodes","fireAction","duplicateSelected","cutSelected","copySelected","pasteSelected","deleteSelected","zoomIn","zoomOut","synchronizeLink","setValue","synchronizeComponent","output","clearAllValues","clearLinkValues","clearPortValues","getNodes","Circle","Port","className","data-name","data-nodeid","PortWidget","distributePorts","numPorts","isNumberOfPortsEven","closestEven","startAt","floor","Array","splice","PortExtensionBar","size","place","PortExtension","portPositions","lastPortPosition","Wrapper","PositionedPort","Shape","viewBox","transform","AndWidget","inputPorts","getInputPorts","AndIcon","default","validate","INPUT_PORTS_NUMBER","Number","DATA_BITS","out","curr","BufferWidget","BufferIcon","in","Button","button","ButtonWidget","buttonRef","useRef","handleReleaseAway","contains","onRelease","useEffect","onMouseDown","onClick","onMouseUp","ButtonIcon","as","Body","isActive","Hole","children","BuzerWidget","BuzzerIcon","frequencyHz","FREQUENCY_HZ","WAVEFORM","createAudio","getValue","Decoration","periodMs","animateTransition","transformOrigin","transition","ClockWidget","ClockIcon","step","emitInterval","highCount","lowCount","setInterval","getNextOutput","HIGH_DURATION","LOW_DURATION","clearInterval","outputNumber","strokeLinecap","DemuxWidget","outputPorts","getOutputPorts","DemuxIcon","OUTPUT_NUMBER","log2","_","selection","strokeLinejoin","GroundWidget","GroundIcon","SHAPE_SIZES","PinContainer","Pin","InputWidget","getBitAt","InputIcon","mask","getOutput","bitHeight","JoinerWidget","JoinerIcon","LedWidget","LedIcon","activeWhen","ACTIVE_WHEN","colors","on","ON_COLOR","off","OFF_COLOR","inputNumber","MuxWidget","MuxIcon","INPUT_NUMBER","NandWidget","NandIcon","PortExtensionConnector","NorWidget","NorIcon","NotWidget","NotIcon","OrWidget","OrIcon","format","span","ErrorMessage","OutputWidget","OUTPUT_FORMAT","mapBits","getInput","padStart","OutputIcon","fillOpacity","PowerWidget","PowerIcon","SplitterWidget","SplitterIcon","SEGMENTS","horizontal","vertical","segments","a","f","g","dp","getPositionForSegment","SsdIcon","Switch","SwitchValue","SwitchWidget","SwitchIcon","XnorWidget","XnorIcon","behavior","MULTIPLE_INPUT_BEHAVIOR","parseInt","notExclusiveOrAt","join","XorWidget","XorIcon","Input","Output","Clock","Led","Ssd","Buzzer","And","Nand","Or","Nor","exclusiveOrAt","Xnor","Buffer","Not","Splitter","Joiner","Power","Ground","Mux","Demux","groupedComponents","Container","ComponentSelectButton","handleClick","data-for","data-tip","data-place","HelpButton","HelpButtonMenu","HelpButtonMenuItem","DiagramStateButtons","handleClickSave","handleClickLoad","handleClickKeyboardShortcuts","handleClickRedoTour","handleClickAbout","helpButtonRef","helpMenuRef","useState","isHelpMenuOpen","setHelpMenuOpen","handleToggleHelpMenu","handleClickAway","ArrowLeft","Chevron","Close","Copy","rx","ry","Cut","x1","y1","x2","y2","Delete","Duplicate","Paste","Pause","Play","Redo","Settings","Stop","Undo","ZoomIn","ZoomOut","SimulationControlButtons","handleClickStart","handleClickPause","handleClickStop","Overlay","Window","Modal","Header","Title","h1","Subtitle","h2","Content","IconButton","error","field","componentType","innerRef","htmlFor","option","ComponentConfigurationInput","form","errors","engineStub","getPortCoords","getWidth","getHeight","getTooltip","ErrorWidget","DraggableComponent","handleClose","draggable","onDragStart","setDragImage","currentTarget","setData","Tooltip","hide","DragArea","FormScroll","Footer","Hint","SubmitButton","getInitialValues","configuration","ComponentConfiguration","editMode","handleBack","handleSubmit","firstInputRef","focus","rebuild","initialValues","onSubmit","isValid","autoComplete","getFormSubmitLabel","ComponentEdit","isOpen","callback","useCallback","closeOnEsc","window","edit","HorizontalSeparator","hr","ComponentsGrid","ComponentButton","ComponentTitle","ComponentIcon","ComponentGroup","handleComponentSelect","setOpen","SearchBar","Scroll","ComponentSearch","groups","filteredGroups","setFilteredGroups","searchText","setSearchText","autoFocus","placeholder","onChange","like","RegExp","newFilteredGroups","match","handleSearchChange","onKeyDown","handleKeyDown","ComponentSelect","selectedComponent","setSelectedComponent","Key","ContextMenuIconContainer","ContextMenuShortcutContainer","ComponentContextMenu","configureComponent","DiagramContextMenu","ContextMenus","Version","Divider","HelpAbout","paddingTop","marginTop","overflowY","display","flexDirection","alignItems","src","process","alt","version","margin","textAlign","href","namespace","repo","TableContainer","Table","table","TableColumn","td","HelpKeyboardShortcuts","BACKGROUND_COLOR","warning","info","success","open","Message","progress","keyframes","ProgressBar","paused","timeout","TRANSITION_DURATION","Snackbar","message","split","string","DIMENSIONS","layers","isSvg","transformed","labels","clock","parentNode","and","not","pulse","Pulse","Beacon","forwardRef","imageStyle","alignSelf","borderRadius","boxShadow","marginBottom","Tour","recenterTourCircuit","currentStep","run","recenterCircuit","action","setTourRunning","loadCircuit","clearCircuit","EVENTS","STEP_AFTER","ACTIONS","NEXT","PREV","setState","TOUR_END","CLOSE","steps","title","content","placement","showProgress","disableOverlayClose","locale","skip","spotlightPadding","contextMenu","wire","simulation","lineHeight","showSkipButton","stepIndex","continuous","scrollToFirstStep","styles","tooltip","tooltipContent","fontSize","buttonBack","buttonNext","background","buttonSkip","border","back","close","beaconComponent","innerWidth","innerHeight","App","isComponentSelectOpen","isComponentEditOpen","isHelpKeyboardOpen","isHelpAboutOpen","shortcutHandler","isStopped","showAddComponent","selectedNodes","showEditComponent","isRunning","isCircuitEmpty","loadHandler","lastSaved","isTourAvailable","confirm","removeItem","shouldWarnUnload","currentCircuit","lastSavedCircuit","unloadHandler","returnValue","autoSave","synchronizeSimulation","getDiff","componentDiff","renderSimulation","console","log","alert","forceUpdate","hideAddComponent","componentEdit","hideEditComponent","isTourRunning","showHelpTour","showHelpKeyboard","hideHelpKeyboard","showHelpAbout","hideHelpAbout","snackbar","clearTimeout","timeoutID","hideSnackbar","res","setTimeout","handleLoadTourCircuit","circuitBeforeTour","tourCircuit","handleCenterTourCircuitOffset","handleUnloadTourCircuit","autoSaveInterval","getState","globalEventOff","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36d9585c.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"SimulationWorker.acd14983af5ba5608049.js\");\n};","module.exports = __webpack_public_path__ + \"static/media/bifurcation.e3ec32b9.gif\";","module.exports = __webpack_public_path__ + \"static/media/context-menu.94343183.gif\";","module.exports = __webpack_public_path__ + \"static/media/simulation.2d0f910c.gif\";","module.exports = __webpack_public_path__ + \"static/media/wire.e7e521da.gif\";","import { Point } from '@projectstorm/geometry';\n\n/**\n * Returns a position, but snapped to the grid.\n */\nexport const snap = (position, gridSize = 15) => {\n  if (position instanceof Point) {\n    return new Point(\n      Math.round(position.x / gridSize) * gridSize,\n      Math.round(position.y / gridSize) * gridSize,\n    );\n  }\n\n  return Math.round(position / gridSize) * gridSize;\n};\n\n/**\n * Checks if two points are on the same position.\n */\nexport const samePosition = (p1, p2) =>\n  p1 &&\n  p2 &&\n  Math.round(p1.x) === Math.round(p2.x) &&\n  Math.round(p1.y) === Math.round(p2.y);\n\n/**\n * Checks if all given points share the same X position.\n */\nexport const sameX = (...points) =>\n  points.map(p => Math.round(p.x)).every((p, i, arr) => p === arr[0]);\n\n/**\n * Checks if all given points share the same Y position.\n */\nexport const sameY = (...points) =>\n  points.map(p => Math.round(p.y)).every((p, i, arr) => p === arr[0]);\n\n/**\n * Checks if all given points share positions on any axis.\n */\nexport const sameAxis = (...points) =>\n  sameX(...points) || sameY(...points);\n\n/**\n * Checks if two points are nearby each other, given a tolerance.\n */\nexport const nearby = (p1, p2, tolerance) =>\n  Math.abs(p1.x - p2.x) <= tolerance &&\n  Math.abs(p1.y - p2.y) <= tolerance;\n\n/**\n * Finds the closest position to a link from a given point.\n */\nexport const closestPointToLink = (P, link) => {\n  const distance = (A, B) => Math.hypot(A.x - B.x, A.y - B.y);\n\n  const closestPointOnSegment = (Q, segment) => {\n    const { A, B } = segment;\n\n    const v = new Point(B.x - A.x, B.y - A.y);\n    const u = new Point(A.x - Q.x, A.y - Q.y);\n\n    const vu = v.x * u.x + v.y * u.y;\n    const vv = v.x ** 2 + v.y ** 2;\n\n    const t = -vu / vv;\n\n    // Closest point lies between A and B\n    if (t >= 0 && t <= 1) {\n      const closest = new Point(\n        (1 - t) * A.x + t * B.x,\n        (1 - t) * A.y + t * B.y,\n      );\n      return {\n        point: closest,\n        distance: distance(Q, closest),\n      };\n    }\n\n    // Closest point is either A or B\n    const distanceToA = distance(Q, A);\n    const distanceToB = distance(Q, B);\n\n    return distanceToA <= distanceToB\n      ? { point: A, distance: distanceToA }\n      : { point: B, distance: distanceToB };\n  };\n\n  if (!link.hasMiddlePoint()) {\n    return closestPointOnSegment(P, {\n      A: link.getFirstPosition(),\n      B: link.getLastPosition(),\n    }).point;\n  }\n\n  const firstSegment = closestPointOnSegment(P, {\n    A: link.getFirstPosition(),\n    B: link.getMiddlePosition(),\n  });\n\n  const lastSegment = closestPointOnSegment(P, {\n    A: link.getMiddlePosition(),\n    B: link.getLastPosition(),\n  });\n\n  if (firstSegment.distance <= lastSegment.distance) {\n    return firstSegment.point;\n  }\n  return lastSegment.point;\n};\n\n/**\n * Determines is a point is over a given segment.\n */\nconst isPointOverSegment = (point, segment) => {\n  const { A, B } = segment;\n\n  if (sameX(A, point, B)) {\n    const max = Math.max(A.y, B.y);\n    const min = Math.min(A.y, B.y);\n\n    return min <= point.y && point.y <= max;\n  }\n\n  if (sameY(A, point, B)) {\n    const max = Math.max(A.x, B.x);\n    const min = Math.min(A.x, B.x);\n\n    return min <= point.x && point.x <= max;\n  }\n\n  return false;\n};\n\n/**\n * Determines if a point is over a given link's first segment.\n */\nexport const isPointOverFirstLinkSegment = (point, link) =>\n  isPointOverSegment(point, {\n    A: link.getFirstPosition(),\n    B: link.getSecondPosition(),\n  });\n\n/**\n * Determines if a point is over a given link's second segment.\n */\nexport const isPointOverSecondLinkSegment = (point, link) => {\n  if (!link.hasMiddlePoint()) return false;\n\n  return isPointOverSegment(point, {\n    A: link.getSecondPosition(),\n    B: link.getLastPosition(),\n  });\n};\n\n/**\n * Determines if a point is over a given link.\n */\nexport const isPointOverLink = (point, link) =>\n  isPointOverFirstLinkSegment(point, link) ||\n  isPointOverSecondLinkSegment(point, link);\n\n/**\n * Searches for any link that the given link might be landing on.\n */\nexport const getLandingLink = (link, engine) => {\n  const point = link.getLastPoint().getPosition();\n\n  return Object.values(\n    engine\n      .getModel()\n      .getLinkLayers()[0]\n      .getLinks(),\n  ).find(target => {\n    if (target.getID() === link.getID()) return false;\n    return isPointOverLink(point, target);\n  });\n};\n\n/**\n * Generates the error message displayed to the user for incompatible\n * display widths.\n */\nexport const getIncompatibleWidthsErrorMessage = (\n  source,\n  target,\n) => `Incompatible bit widths!\n\\nSource: ${source.getBits()} bit${source.getBits() > 1 ? 's' : ''}\n\\nTarget: ${target.getBits()} bit${target.getBits() > 1 ? 's' : ''}`;\n","/* eslint-disable no-restricted-globals */\nexport const MIN_VALUE = 0;\nexport const MAX_VALUE = {\n  1: 0b1,\n  2: 0b11,\n  4: 0b1111,\n  8: 0b1111_1111,\n  16: 0b1111_1111_1111_1111,\n};\n\nexport const adjustValueToBits = (value, dataBits = 1) => {\n  const allBitsSet = 0b1111_1111_1111_1111_1111_1111_1111_1111;\n  const mask = allBitsSet >>> (32 - dataBits);\n\n  return value & mask;\n};\n\nexport const isValueValid = (value, dataBits = 1) =>\n  value === null ||\n  (value >= MIN_VALUE && value <= MAX_VALUE[dataBits]);\n\nexport const isInputValid = input =>\n  input.every(item => isValueValid(item.value, item.bits));\n\nexport const getCleanDiff = () => ({\n  components: {},\n  links: {},\n});\n\nexport const getComponent = id => {\n  if (!self.circuit) return null;\n\n  return (\n    self.circuit.components.find(component => component.id === id) ||\n    null\n  );\n};\n\n/**\n * Find all meshes that are affected by an emitted change.\n */\nexport const getAffectedMeshes = emitted =>\n  self.circuit.meshes.filter(mesh =>\n    mesh.inputs.some(\n      meshInput =>\n        emitted.from.id === meshInput.componentId &&\n        Object.keys(emitted.value).includes(meshInput.name),\n    ),\n  );\n\n/**\n * Finds all components that are connected on a given mesh's output.\n */\nexport const getMeshOutputComponents = mesh =>\n  [\n    ...new Set(\n      mesh.outputs.map(meshOutput => meshOutput.componentId),\n    ),\n  ].map(componentId => getComponent(componentId));\n\n/**\n * Determines the mesh input value.\n */\nexport const getMeshInputValue = mesh => {\n  const allInputValues = mesh.inputs\n    .map(portInfo => {\n      const component = getComponent(portInfo.componentId);\n\n      /**\n       * From the mesh's perspective, a component's output port is an\n       * input.\n       */\n      const port = component.getOutputPort(portInfo.name);\n\n      return port ? port.value : null;\n    })\n    .filter(value => value !== null);\n\n  // A mesh input is coherent if all of its inputs has the same value\n  const isCoherent = allInputValues.every(\n    (value, i, values) => value === values[0],\n  );\n\n  return isCoherent ? allInputValues[0] : 'error';\n};\n\n/**\n * Initialize all links and ports with the value 0.\n */\nexport const initializeDiffAndValues = () => {\n  self.circuit.components.forEach(component => {\n    component.setInputValues(\n      Object.fromEntries(\n        component.ports.input.map(port => [port.id, 0]),\n      ),\n    );\n    component.setOutputValues(\n      Object.fromEntries(\n        component.ports.output.map(port => [port.id, 0]),\n      ),\n    );\n  });\n\n  const diffLinks = self.circuit.meshes\n    .map(mesh => mesh.links)\n    .flat()\n    .reduce((obj, link) => ({ ...obj, [link]: 0 }), {});\n\n  const diffComponents = Object.fromEntries(\n    self.circuit.components.map(component => [\n      component.id,\n      {\n        output: Object.fromEntries(\n          [\n            ...component.ports.input,\n            ...component.ports.output,\n          ].map(port => [port.name, 0]),\n        ),\n        properties: component.getProperties(),\n      },\n    ]),\n  );\n\n  postMessage({\n    type: 'diff',\n    payload: { links: diffLinks, components: diffComponents },\n  });\n};\n\nexport const appendComponentDiff = (component, output) => {\n  if (!self.diff.components[component.id]) {\n    self.diff.components[component.id] = {\n      output: {},\n      properties: {},\n    };\n  }\n  self.diff.components[component.id] = {\n    ...self.diff.components[component.id],\n    output,\n    properties: component.getProperties(),\n  };\n};\n","import { Point } from '@projectstorm/geometry';\nimport {\n  PointModel,\n  LabelModel,\n  LinkModel as RDLinkModel,\n} from '@projectstorm/react-diagrams';\nimport { DefaultLabelModel } from '@projectstorm/react-diagrams-defaults';\n\nimport { sameAxis } from '../Diagram/states/common';\nimport { isValueValid, MAX_VALUE } from '../Simulation/utils';\n\nexport default class LinkModel extends RDLinkModel {\n  constructor(options) {\n    super({\n      type: 'link',\n      ...options,\n    });\n\n    this.bifurcations = [];\n    this.bifurcationSource = null;\n    this.bifurcationTarget = null;\n\n    this.value = null;\n    this.bits = null;\n  }\n\n  addLabel(label) {\n    if (label instanceof LabelModel) {\n      return super.addLabel(label);\n    }\n\n    const newLabel = new DefaultLabelModel();\n    newLabel.setLabel(label);\n    return super.addLabel(newLabel);\n  }\n\n  setBifurcationSource(link) {\n    this.bifurcationSource = link;\n  }\n\n  getBifurcationSource() {\n    return this.bifurcationSource;\n  }\n\n  setBifurcationTarget(link) {\n    this.bifurcationTarget = link;\n  }\n\n  getBifurcationTarget() {\n    return this.bifurcationTarget;\n  }\n\n  isBifurcation() {\n    return !!(\n      this.getBifurcationSource() || this.getBifurcationTarget()\n    );\n  }\n\n  addBifurcation(link) {\n    if (\n      this.bifurcations.find(\n        bifurcation => bifurcation.getID() === link.getID(),\n      )\n    ) {\n      return;\n    }\n\n    this.bifurcations.push(link);\n  }\n\n  removeBifurcation(link) {\n    this.bifurcations = this.bifurcations.filter(\n      b => b.getID() !== link.getID(),\n    );\n  }\n\n  getBifurcations() {\n    return this.bifurcations;\n  }\n\n  getAllBifurcations() {\n    const result = [...this.bifurcations];\n    this.bifurcations.forEach(bifurcation =>\n      result.push(bifurcation.getAllBifurcations()),\n    );\n    return result.flat(Infinity);\n  }\n\n  getSelectionEntities() {\n    return [...super.getSelectionEntities(), ...this.bifurcations];\n  }\n\n  setSelected(selected) {\n    super.setSelected(selected);\n    this.bifurcations.forEach(b => b.setSelected(selected));\n\n    if (this.getSourcePort()) {\n      this.getSourcePort().setSelected(selected);\n    }\n    if (this.getTargetPort()) {\n      this.getTargetPort().setSelected(selected);\n    }\n  }\n\n  remove() {\n    this.bifurcations.forEach(bifurcation => bifurcation.remove());\n\n    if (this.bifurcationSource) {\n      this.bifurcationSource.removeBifurcation(this);\n    }\n\n    if (this.bifurcationTarget) {\n      this.bifurcationTarget.removeBifurcation(this);\n    }\n\n    super.remove();\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      bifurcations: this.bifurcations.map(b => b.getID()),\n      bifurcationSource: this.bifurcationSource\n        ? this.bifurcationSource.getID()\n        : null,\n      bifurcationTarget: this.bifurcationTarget\n        ? this.bifurcationTarget.getID()\n        : null,\n      value: this.value,\n      bits: this.bits,\n    };\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n\n    const {\n      getModel,\n      registerModel,\n      data: {\n        bifurcationSource,\n        bifurcationTarget,\n        bifurcations,\n        bits,\n      },\n    } = event;\n\n    registerModel(this);\n\n    requestAnimationFrame(() => {\n      this.bits = bits;\n\n      this.points = event.data.points.map(\n        point =>\n          new PointModel({\n            link: this,\n            position: new Point(point.x, point.y),\n          }),\n      );\n\n      bifurcations.forEach(b =>\n        getModel(b).then(bifurcation =>\n          this.addBifurcation(bifurcation),\n        ),\n      );\n\n      if (bifurcationSource) {\n        getModel(bifurcationSource).then(source =>\n          this.setBifurcationSource(source),\n        );\n      }\n\n      if (bifurcationTarget) {\n        getModel(bifurcationTarget).then(target =>\n          this.setBifurcationTarget(target),\n        );\n      }\n\n      event.engine.repaintCanvas();\n    });\n  }\n\n  addPoint(pointModel, index = 1) {\n    super.addPoint(pointModel, index);\n\n    return pointModel;\n  }\n\n  getMiddlePoint() {\n    if (!this.hasMiddlePoint()) return null;\n\n    return this.getPoints()[1];\n  }\n\n  getSecondPoint() {\n    return this.getPoints()[1];\n  }\n\n  getSecondLastPoint() {\n    const points = this.getPoints();\n    return points[points.length - 2];\n  }\n\n  getFirstPosition() {\n    return this.getFirstPoint().getPosition();\n  }\n\n  getSecondPosition() {\n    return this.getSecondPoint().getPosition();\n  }\n\n  getMiddlePosition() {\n    if (!this.hasMiddlePoint()) return null;\n\n    return this.getMiddlePoint().getPosition();\n  }\n\n  getSecondLastPosition() {\n    return this.getSecondLastPoint().getPosition();\n  }\n\n  getLastPosition() {\n    return this.getLastPoint().getPosition();\n  }\n\n  hasMiddlePoint() {\n    return this.getPoints().length === 3;\n  }\n\n  isStraight() {\n    if (!this.hasMiddlePoint()) return true;\n\n    const first = this.getFirstPosition();\n    const middle = this.getMiddlePosition();\n    const last = this.getLastPosition();\n\n    if (sameAxis(first, middle, last)) return true;\n\n    return false;\n  }\n\n  getBits() {\n    return this.bits;\n  }\n\n  setBits(bits) {\n    if (![1, 2, 4, 8, 16].includes(bits))\n      throw new Error(\n        '[logossim] Number of bits should be one of: 1, 2, 4, 8 or 16',\n      );\n\n    this.bits = bits;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  getColor() {\n    if (this.isSelected()) return 'var(--link-selected)';\n\n    if (!isValueValid(this.value, this.bits))\n      return 'var(--value-error)';\n    if (this.value === null)\n      return `var(--link-${this.bits || 1}-bit-color)`;\n\n    return `var(--value-${Math.round(\n      (this.value / MAX_VALUE[this.bits]) * 10,\n    )})`;\n  }\n\n  getLineWidth() {\n    return `var(--link-${this.bits || 1}-bit-width)`;\n  }\n\n  getPointRadius() {\n    return `var(--link-${this.bits || 1}-bit-join-radius)`;\n  }\n}\n","import { PortModel as RDPortModel } from '@projectstorm/react-diagrams';\n\nimport LinkModel from '../Link/LinkModel';\n\nexport default class PortModel extends RDPortModel {\n  constructor(options = {}) {\n    super({\n      type: 'Port',\n      maximumLinks: 1,\n      ...options,\n    });\n\n    this.value = null;\n    this.input = null;\n    this.bits = null;\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      input: this.input,\n      value: this.value,\n      bits: this.bits,\n    };\n  }\n\n  deserialize(event, engine) {\n    super.deserialize(event, engine);\n    this.value = event.data.value;\n    this.input = event.data.input;\n    this.bits = event.data.bits;\n  }\n\n  setAsInput() {\n    this.input = true;\n  }\n\n  setAsOutput() {\n    this.input = false;\n  }\n\n  isInput() {\n    return this.input === true;\n  }\n\n  isOutput() {\n    return this.input === false;\n  }\n\n  getBits() {\n    return this.bits;\n  }\n\n  setBits(bits) {\n    if (![1, 2, 4, 8, 16].includes(bits))\n      throw new Error(\n        '[logossim] Number of bits should be one of: 1, 2, 4, 8 or 16',\n      );\n\n    this.bits = bits;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  isNewLinkAllowed() {\n    return (\n      Object.keys(this.getLinks()).length < this.getMaximumLinks()\n    );\n  }\n\n  canLinkToPort(port) {\n    return port.isNewLinkAllowed() && this.getID() !== port.getID();\n  }\n\n  createLinkModel() {\n    if (this.isNewLinkAllowed()) {\n      const link = new LinkModel();\n      link.setBits(this.bits);\n      return link;\n    }\n    return null;\n  }\n\n  getMainLink() {\n    const links = Object.values(this.getLinks());\n    return links.length > 0 ? links[0] : null;\n  }\n\n  getColor() {\n    const link = this.getMainLink();\n    if (link) return link.getColor();\n\n    return 'var(--port-unconnected)';\n  }\n}\n","export default class AudioEngine {\n  constructor() {\n    this.context = new AudioContext();\n    this.destination = this.context.destination;\n    this.audios = {};\n  }\n\n  create({ id, frequency = 1000, waveform = 'sine' }) {\n    const gainNode = this.context.createGain();\n    gainNode.gain.value = 0.5;\n\n    const oscillator = this.context.createOscillator();\n    oscillator.type = waveform;\n    oscillator.frequency.value = frequency;\n    oscillator.connect(gainNode);\n    oscillator.start();\n\n    this.audios[id] = { gainNode, oscillator };\n  }\n\n  play({ id }) {\n    try {\n      this.getGainNode(id).connect(this.destination);\n    } catch (e) {\n      // Suppress\n    }\n  }\n\n  pause({ id }) {\n    try {\n      this.getGainNode(id).disconnect(this.destination);\n    } catch (e) {\n      // Suppress\n    }\n  }\n\n  setFrequency({ id, frequency }) {\n    this.getOscillator(id).frequency.value = frequency;\n  }\n\n  setWaveform({ id, waveform }) {\n    this.getOscillator(id).type = waveform;\n  }\n\n  handlePayload(payload) {\n    switch (payload.command) {\n      case 'create':\n        this.create(payload);\n        break;\n      case 'play':\n        this.play(payload);\n        break;\n      case 'pause':\n        this.pause(payload);\n        break;\n      case 'setFrequency':\n        this.setFrequency(payload);\n        break;\n      case 'setWaveform':\n        this.setWaveform(payload);\n        break;\n      default:\n        break;\n    }\n  }\n\n  getOscillator(id) {\n    return this.getAudio(id).oscillator;\n  }\n\n  getGainNode(id) {\n    return this.getAudio(id).gainNode;\n  }\n\n  getAudio(id) {\n    const audio = this.audios[id];\n\n    if (!audio)\n      throw new Error(\n        `[logossim] Audio with id ${id} was not found.`,\n      );\n\n    return audio;\n  }\n\n  cleanUp() {\n    Object.values(this.audios).forEach(audio =>\n      audio.oscillator.stop(),\n    );\n    this.audios = [];\n  }\n}\n","/**\n * In order to execute the simulation workload on a Web Worker, we\n * need to serialize some component properties and methods to send\n * them to the worker.\n */\n\n/* ---------------------------------------------------------------- */\n\n/**\n * Receives a component instance and returns the name of all custom\n * properties.\n */\nconst getComponentPropertyNames = instance =>\n  Object.keys(instance).filter(\n    key =>\n      ![\n        'listeners',\n        'options',\n        'position',\n        'ports',\n        'width',\n        'height',\n        'configurations',\n        'parent',\n      ].includes(key),\n  );\n\n/**\n * Receives a component class and returns the name of all custom\n * methods.\n */\nconst getModelMethodNames = Class =>\n  Object.getOwnPropertyNames(Class.prototype).filter(\n    methodName => !['constructor'].includes(methodName),\n  );\n\nconst serializeModels = components =>\n  components.map(component => {\n    const { type, Model } = component;\n\n    return {\n      type,\n      methods: getModelMethodNames(Model).reduce(\n        (obj, name) => ({\n          ...obj,\n          [name]: Model.prototype[name].toString(),\n        }),\n        {},\n      ),\n    };\n  });\n\nconst serializePorts = ports =>\n  Object.values(ports).map(port => ({\n    id: port.getID(),\n    name: port.getName(),\n    input: port.isInput(),\n    bits: port.getBits(),\n  }));\n\n/**\n * Prepares a list of component instances to transfer, including\n * configuration and instance properties.\n */\nconst serializeComponents = components =>\n  components.map(component => ({\n    id: component.getID(),\n    type: component.getType(),\n    configurations: component.configurations,\n    ports: serializePorts(component.ports),\n    properties: getComponentPropertyNames(component).reduce(\n      (obj, key) => ({ ...obj, [key]: component[key] }),\n      {},\n    ),\n  }));\n\nconst getPortInfo = port =>\n  port\n    ? {\n        componentId: port.getParent().getID(),\n        name: port.getName(),\n        input: port.isInput(),\n      }\n    : null;\n\nconst getLinkId = link => (link ? link.getID() : null);\n\nconst serializeLinks = links =>\n  links.map(link => ({\n    id: link.getID(),\n    source: getPortInfo(link.getSourcePort()),\n    target: getPortInfo(link.getTargetPort()),\n    bifurcations: link\n      .getBifurcations()\n      .map(bifurcation => bifurcation.getID()),\n    bifurcation: {\n      source: getLinkId(link.getBifurcationSource()),\n      target: getLinkId(link.getBifurcationTarget()),\n    },\n    isBifurcation: link.isBifurcation(),\n    bits: link.getBits(),\n  }));\n\n/**\n * Prepares the whole diagram to be transferred.\n */\nconst serialize = (diagram, models) => ({\n  models: serializeModels(models),\n  links: serializeLinks(\n    Object.values(diagram.getActiveLinkLayer().getModels()),\n  ),\n  components: serializeComponents(\n    Object.values(diagram.getActiveNodeLayer().getModels()),\n  ),\n});\n\nexport default serialize;\n","import AudioEngine from './AudioEngine';\nimport serialize from './serialize';\nimport SimulationWorker from './simulation.worker';\nimport { getCleanDiff } from './utils';\n\nconst worker = new SimulationWorker();\n\n/**\n * SimulationEngine encapsulates SimulationWorker to act as an\n * interface to the application. It handles messaging with the worker,\n * keeping track of the `diff` being generated so the application can\n * use it to update itself.\n */\nexport default class SimulationEngine {\n  constructor(components) {\n    this.components = components;\n\n    this.worker = worker;\n    this.worker.addEventListener('message', this.onSimulationMessage);\n\n    this.audioEngine = new AudioEngine();\n\n    this.state = 'stopped';\n    this.clearDiff();\n  }\n\n  onSimulationMessage = ({ data: { type, payload } }) => {\n    if (type === 'diff') {\n      this.appendDiff(payload);\n    }\n\n    if (type === 'audio') {\n      this.audioEngine.handlePayload(payload);\n    }\n\n    if (type === 'clear') {\n      this.audioEngine.cleanUp();\n    }\n  };\n\n  start(diagram) {\n    this.worker.postMessage({\n      command: 'start',\n      diagram:\n        this.state === 'stopped'\n          ? serialize(diagram, this.components)\n          : undefined,\n    });\n    this.state = 'started';\n  }\n\n  pause() {\n    this.worker.postMessage({ command: 'pause' });\n    this.state = 'paused';\n  }\n\n  async stop() {\n    return new Promise(resolve => {\n      const waitForEnd = ({ data: { type } }) => {\n        if (type === 'clear') {\n          this.worker.removeEventListener('message', waitForEnd);\n          this.state = 'stopped';\n          resolve();\n        }\n      };\n      this.worker.addEventListener('message', waitForEnd);\n\n      this.worker.postMessage({ command: 'stop' });\n    });\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  isRunning() {\n    return this.state === 'started';\n  }\n\n  isPaused() {\n    return this.state === 'paused';\n  }\n\n  isStopped() {\n    return this.state === 'stopped';\n  }\n\n  getDiff() {\n    return this.diff;\n  }\n\n  clearDiff() {\n    this.diff = getCleanDiff();\n  }\n\n  appendDiff(diff) {\n    this.diff = {\n      components: { ...this.diff.components, ...diff.components },\n      links: { ...this.diff.links, ...diff.links },\n    };\n  }\n}\n\n/**\n * Emit is exported as a separate function so it can be used on\n * `BaseModel`.\n */\nexport const emit = (from, value) =>\n  worker.postMessage({\n    command: 'emit',\n    emitted: { from, value },\n  });\n","import { Point } from '@projectstorm/geometry';\nimport { NodeModel } from '@projectstorm/react-diagrams';\n\nimport PortModel from './Port/PortModel';\nimport { emit } from './Simulation/SimulationEngine';\n\nconst getPort = port => {\n  if (port instanceof PortModel) return port;\n  return new PortModel({ name: port });\n};\n\nexport default class BaseModel extends NodeModel {\n  constructor(type, configurations) {\n    super({ type });\n\n    this.initialize(configurations);\n\n    this.configurations = configurations;\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      configurations: this.configurations,\n    };\n  }\n\n  addInputPort(arg, bits = 1) {\n    const port = getPort(arg);\n    port.setAsInput();\n    if (typeof arg === 'string') port.setBits(bits);\n    super.addPort(port);\n  }\n\n  addOutputPort(arg, bits = 1) {\n    const port = getPort(arg);\n    port.setAsOutput();\n    if (typeof arg === 'string') port.setBits(bits);\n    super.addPort(port);\n  }\n\n  addPort(arg, bits = 1) {\n    const port = getPort(arg);\n\n    if (port.isInput()) {\n      this.addInputPort(port, bits);\n      return;\n    }\n\n    if (port.isOutput()) {\n      this.addOutputPort(port, bits);\n      return;\n    }\n\n    throw new Error(\n      '[logossim] Use either `addInputPort` or `addOutputPort`',\n    );\n  }\n\n  removePort(arg) {\n    const port = getPort(arg);\n    super.removePort(port);\n  }\n\n  getInputPorts() {\n    return Object.fromEntries(\n      Object.entries(this.getPorts()).filter(([, port]) =>\n        port.isInput(),\n      ),\n    );\n  }\n\n  getOutputPorts() {\n    return Object.fromEntries(\n      Object.entries(this.getPorts()).filter(\n        ([, port]) => !port.isInput(),\n      ),\n    );\n  }\n\n  getAllLinks() {\n    return Object.values(this.getPorts())\n      .map(port => port.getMainLink())\n      .filter(link => !!link)\n      .reduce(\n        (arr, link) => [...arr, link, ...link.getAllBifurcations()],\n        [],\n      );\n  }\n\n  clone(...args) {\n    const clone = super.clone(...args);\n    clone.setPosition(new Point(this.getX() + 15, this.getY() + 15));\n    return clone;\n  }\n\n  initialize() {}\n\n  onSimulationStart() {}\n\n  onSimulationPause() {}\n\n  onSimulationStop() {}\n\n  step() {}\n\n  emit(value) {\n    emit(this.getID(), value);\n  }\n}\n","import React from 'react';\nimport { MenuProvider } from 'react-contexify';\n\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\n\nexport default class Component extends AbstractReactFactory {\n  constructor({\n    type,\n    name,\n    description,\n    group,\n    configurations = [],\n    model,\n    widget,\n    icon,\n  }) {\n    super(type);\n    this.name = name;\n    this.description = description;\n    this.group = group;\n    this.configurations = configurations;\n    this.Model = model;\n    this.Widget = widget;\n    this.Icon = icon;\n  }\n\n  generateReactWidget(event) {\n    const { Widget } = this;\n    const { model } = event;\n\n    return (\n      <MenuProvider id=\"component\" storeRef={false} data={model}>\n        <Widget engine={this.engine} model={model} />\n      </MenuProvider>\n    );\n  }\n\n  generateModel(event) {\n    const { Model } = this;\n    const { type, configurations } = event.initialConfig;\n\n    return new Model(type, configurations);\n  }\n}\n","import styled from 'styled-components';\n\nconst DroppableLayer = styled.div.attrs(({ disabled, ...props }) => ({\n  ...props,\n  onDragOver: event => event.preventDefault(),\n  onDrop: event => {\n    if (disabled) return;\n\n    const component = JSON.parse(\n      event.dataTransfer.getData('component'),\n    );\n\n    props.handleComponentDrop(event, component);\n  },\n}))`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default DroppableLayer;\n","import React from 'react';\nimport { MenuProvider } from 'react-contexify';\n\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\n\nimport styled from 'styled-components';\n\nimport DroppableLayer from './DroppableLayer';\n\nconst FullscreenCanvas = styled(CanvasWidget)`\n  height: 100%;\n  width: 100%;\n`;\n\nconst Diagram = ({ engine }) => (\n  <MenuProvider id=\"diagram\" storeRef={false} data={{ test: 1 }}>\n    <DroppableLayer\n      handleComponentDrop={(...args) =>\n        engine.handleComponentDrop(...args)\n      }\n      disabled={engine.isLocked()}\n    >\n      <FullscreenCanvas engine={engine.getEngine()} />\n    </DroppableLayer>\n  </MenuProvider>\n);\n\nexport default Diagram;\n","import React, { Component } from 'react';\n\nimport { samePosition } from '../Diagram/states/common';\n\nexport default class LinkWidget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refPaths = [];\n  }\n\n  componentDidUpdate() {\n    this.updateRenderedPaths();\n  }\n\n  componentDidMount() {\n    this.updateRenderedPaths();\n  }\n\n  componentWillUnmount() {\n    this.clearRenderedPaths();\n  }\n\n  updateRenderedPaths() {\n    const { link } = this.props;\n\n    link.setRenderedPaths(\n      this.refPaths.map(ref => {\n        return ref.current;\n      }),\n    );\n  }\n\n  clearRenderedPaths() {\n    const { link } = this.props;\n\n    link.setRenderedPaths([]);\n  }\n\n  generatePathPoints() {\n    const { link } = this.props;\n\n    const points = link.getPoints();\n\n    return points\n      .map((point, i) => ({ from: points[i], to: points[i + 1] }))\n      .filter(tuple => tuple.to);\n  }\n\n  generateLinePath({ from, to }) {\n    return `M${from.getX()},${from.getY()} L${to.getX()},${to.getY()}`;\n  }\n\n  renderSegment(path, key) {\n    const { link, factory, options = {} } = this.props;\n\n    const { selected } = options;\n\n    const ref = React.createRef();\n    this.refPaths.push(ref);\n\n    return React.cloneElement(\n      factory.generateLinkSegment(link, selected, path),\n      { key, ref },\n    );\n  }\n\n  renderPoint(position, loose = false) {\n    const { link } = this.props;\n    const color = link.getColor();\n\n    return (\n      <circle\n        r={loose ? 6 : link.getPointRadius()}\n        fill={loose ? 'var(--background)' : color}\n        stroke={loose ? color : 'none'}\n        strokeWidth={3}\n        cx={position.x}\n        cy={position.y}\n      />\n    );\n  }\n\n  renderBifurcationSourcePoint() {\n    const { link } = this.props;\n\n    const bifurcationSource = link.getBifurcationSource();\n    if (!bifurcationSource) return null;\n\n    const bifurcationOrigin = link.getFirstPoint().getPosition();\n    const lastSourcePoint = bifurcationSource\n      .getLastPoint()\n      .getPosition();\n\n    if (samePosition(bifurcationOrigin, lastSourcePoint)) {\n      return null;\n    }\n\n    return this.renderPoint(bifurcationOrigin);\n  }\n\n  renderBifurcationTargetPoint() {\n    const { link } = this.props;\n\n    const bifurcationTarget = link.getBifurcationTarget();\n    if (!bifurcationTarget) return null;\n\n    const bifurcationTargetPosition = link\n      .getLastPoint()\n      .getPosition();\n    const lastSourcePoint = bifurcationTarget\n      .getLastPoint()\n      .getPosition();\n\n    if (samePosition(bifurcationTargetPosition, lastSourcePoint)) {\n      return null;\n    }\n\n    return this.renderPoint(bifurcationTargetPosition);\n  }\n\n  renderLooseLinkPoint() {\n    const { link } = this.props;\n\n    if (link.getTargetPort()) return null;\n    if (link.getBifurcationTarget()) return null;\n\n    const bifurcations = link.getBifurcations();\n    const lastSourcePoint = link.getLastPoint().getPosition();\n\n    const isContinued = bifurcations.some(\n      bifurcation =>\n        samePosition(\n          bifurcation.getFirstPosition(),\n          lastSourcePoint,\n        ) ||\n        samePosition(bifurcation.getLastPosition(), lastSourcePoint),\n    );\n\n    if (isContinued) return null;\n\n    return this.renderPoint(lastSourcePoint, true);\n  }\n\n  render() {\n    const { link } = this.props;\n\n    this.refPaths = [];\n\n    return (\n      <>\n        <g data-default-link-test={link.getOptions().testName}>\n          {this.generatePathPoints().map((tuple, index) =>\n            this.renderSegment(this.generateLinePath(tuple), index),\n          )}\n        </g>\n        {this.renderBifurcationSourcePoint()}\n        {this.renderBifurcationTargetPoint()}\n        {this.renderLooseLinkPoint()}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { DefaultLinkFactory } from '@projectstorm/react-diagrams-defaults';\n\nimport styled from 'styled-components';\n\nimport LinkModel from './LinkModel';\nimport LinkWidget from './LinkWidget';\n\nconst Path = styled.path`\n  pointer-events: all;\n  stroke-linecap: round;\n`;\n\nexport default class LinkFactory extends DefaultLinkFactory {\n  constructor() {\n    super('link');\n  }\n\n  generateModel() {\n    return new LinkModel();\n  }\n\n  generateReactWidget(event) {\n    return (\n      <LinkWidget\n        diagramEngine={this.engine}\n        link={event.model}\n        factory={this}\n      />\n    );\n  }\n\n  generateLinkSegment(model, selected, path) {\n    return (\n      <>\n        <Path\n          stroke={model.getColor()}\n          strokeWidth={model.getLineWidth()}\n          d={path}\n        />\n        {/* This path is to facilitate link selection */}\n        <Path stroke=\"none\" strokeWidth={20} d={path} />\n      </>\n    );\n  }\n}\n","import { AbstractModelFactory } from '@projectstorm/react-canvas-core';\n\nimport PortModel from './PortModel';\n\nexport default class PortFactory extends AbstractModelFactory {\n  constructor() {\n    super('Port');\n  }\n\n  generateModel() {\n    return new PortModel();\n  }\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\n\n/**\n * Handles clipboard actions.\n */\nexport default class ClipboardAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n\n          const { code } = event;\n          if (code === 'KeyX') this.handleCut();\n          if (code === 'KeyC') this.handleCopy();\n          if (code === 'KeyV') this.handlePaste();\n        }\n      },\n    });\n  }\n\n  matchesInput = ({ ctrlKey, code }) =>\n    ctrlKey &&\n    (code === 'KeyX' || code === 'KeyC' || code === 'KeyV');\n\n  getSelectedComponents = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked());\n\n  /** Cut */\n  handleCut = () => {\n    const selected = this.getSelectedComponents();\n    const copies = selected.map(entity => entity.clone().serialize());\n\n    this.engine.fireEvent(\n      {\n        nodes: selected,\n        links: selected.reduce(\n          (arr, node) => [...arr, ...node.getAllLinks()],\n          [],\n        ),\n      },\n      'entitiesRemoved',\n    );\n    selected.forEach(node => node.remove());\n    this.engine.repaintCanvas();\n\n    localStorage.setItem('clipboard', JSON.stringify(copies));\n  };\n\n  /** Copy */\n  handleCopy = () => {\n    const copies = this.getSelectedComponents().map(entity =>\n      entity.clone().serialize(),\n    );\n\n    localStorage.setItem('clipboard', JSON.stringify(copies));\n  };\n\n  /** Paste */\n  handlePaste = () => {\n    const model = this.engine.getModel();\n\n    const clipboard = JSON.parse(localStorage.getItem('clipboard'));\n    if (!clipboard) return;\n\n    model.clearSelection();\n\n    const models = clipboard.map(serialized => {\n      const modelInstance = model\n        .getActiveNodeLayer()\n        .getChildModelFactoryBank(this.engine)\n        .getFactory(serialized.type)\n        .generateModel({ initialConfig: serialized });\n\n      modelInstance.deserialize({\n        engine: this.engine,\n        data: serialized,\n        registerModel: () => {},\n      });\n\n      return modelInstance;\n    });\n\n    models.forEach(modelInstance => {\n      model.addNode(modelInstance);\n      modelInstance.setSelected(true);\n    });\n\n    localStorage.setItem(\n      'clipboard',\n      JSON.stringify(\n        models.map(modelInstance =>\n          modelInstance.clone().serialize(),\n        ),\n      ),\n    );\n\n    this.engine.fireEvent({ nodes: models }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\nimport LinkModel from '../../Link/LinkModel';\n\n/**\n * Handles delete actions.\n */\nexport default class DeleteAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput = event => event.code === 'Delete';\n\n  handleAction = () => {\n    const entities = this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => !model.isLocked());\n\n    this.fireEvent(entities);\n\n    entities.forEach(model => model.remove());\n\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = entities => {\n    // All selected nodes\n    const nodes = entities.filter(\n      model => model instanceof BaseModel,\n    );\n\n    // All selected links\n    const links = entities.filter(\n      model => model instanceof LinkModel,\n    );\n\n    // All links from selected nodes\n    const nodesLinks = nodes.reduce(\n      (arr, node) => [...arr, ...node.getAllLinks()],\n      [],\n    );\n\n    this.engine.fireEvent(\n      { nodes, links: [...nodesLinks, ...links] },\n      'entitiesRemoved',\n    );\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\n\n/**\n * Handle duplication (clone) actions.\n */\nexport default class DuplicateAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput = event => event.ctrlKey && event.code === 'KeyD';\n\n  handleAction = () => {\n    const model = this.engine.getModel();\n\n    const clones = model\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked())\n      .map(entity => entity.clone());\n\n    model.clearSelection();\n\n    clones.forEach(clone => {\n      model.addNode(clone);\n      clone.setSelected(true);\n    });\n\n    this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\n/**\n * Handles undo/redo actions.\n */\nexport default class UndoRedoAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n\n          const { ctrlKey, shiftKey, code } = event;\n          if (ctrlKey && !shiftKey && code === 'KeyZ')\n            this.handleUndo();\n          else this.handleRedo();\n        }\n      },\n    });\n  }\n\n  matchesInput = ({ ctrlKey, shiftKey, code }) =>\n    (ctrlKey && (code === 'KeyZ' || code === 'KeyY')) ||\n    (ctrlKey && shiftKey && code === 'KeyZ');\n\n  /** Undo */\n  handleUndo = () => {\n    this.engine.commands.undo();\n    this.engine.repaintCanvas();\n  };\n\n  /** Redo */\n  handleRedo = () => {\n    this.engine.commands.redo();\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nconst ZOOM_LEVELS = [15, 25, 50, 75, 100, 150, 200, 300];\n\n/**\n * Handles zoom in/out actions.\n */\nexport default class ZoomAction extends Action {\n  constructor() {\n    super({\n      type: InputType.MOUSE_WHEEL,\n      fire: ({ event }) => {\n        event.stopPropagation();\n\n        const model = this.engine.getModel();\n\n        // We can block layer rendering because we are only targeting the transforms\n        model.getLayers().forEach(layer => layer.allowRepaint(false));\n\n        const zoomDirection =\n          Math.sign(event.deltaY) > 0 ? 'in' : 'out';\n\n        const currentZoomLevelIndex = ZOOM_LEVELS.indexOf(\n          ZOOM_LEVELS.includes(model.getZoomLevel())\n            ? model.getZoomLevel()\n            : 100,\n        );\n\n        let nextZoomLevelIndex;\n        if (zoomDirection === 'in') {\n          nextZoomLevelIndex = Math.min(\n            currentZoomLevelIndex + 1,\n            ZOOM_LEVELS.length - 1,\n          );\n        } else {\n          nextZoomLevelIndex = Math.max(currentZoomLevelIndex - 1, 0);\n        }\n\n        const oldZoomFactor = model.getZoomLevel() / 100;\n        model.setZoomLevel(ZOOM_LEVELS[nextZoomLevelIndex]);\n        const zoomFactor = model.getZoomLevel() / 100;\n\n        const boundingRect = this.engine\n          .getCanvas()\n          .getBoundingClientRect();\n        const clientWidth = boundingRect.width;\n        const clientHeight = boundingRect.height;\n\n        // Compute difference between rect before and after scroll\n        const widthDiff =\n          clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n        const heightDiff =\n          clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\n        // Compute mouse coords relative to canvas\n        const clientX = event.clientX - boundingRect.left;\n        const clientY = event.clientY - boundingRect.top;\n\n        // Compute width and height increment factor\n        const xFactor =\n          (clientX - model.getOffsetX()) /\n          oldZoomFactor /\n          clientWidth;\n        const yFactor =\n          (clientY - model.getOffsetY()) /\n          oldZoomFactor /\n          clientHeight;\n\n        model.setOffset(\n          model.getOffsetX() - widthDiff * xFactor,\n          model.getOffsetY() - heightDiff * yFactor,\n        );\n        this.engine.repaintCanvas();\n\n        // Re-enable rendering\n        model.getLayers().forEach(layer => layer.allowRepaint(true));\n      },\n    });\n  }\n}\n","import { PointModel } from '@projectstorm/react-diagrams';\n\nconst commandHandlers = ({ engine, editComponentConfiguration }) => {\n  const adjustLink = (link, nodes = []) => {\n    const nodeList = [\n      ...Object.values(\n        engine\n          .getModel()\n          .getActiveNodeLayer()\n          .getModels(),\n      ),\n      ...nodes,\n    ];\n\n    /**\n     * Port instance could have changed in consequence of component\n     * configuration edit.\n     */\n    let sourcePort = link.getSourcePort();\n    if (sourcePort) {\n      const node = nodeList.find(\n        n =>\n          n.getID() ===\n          link\n            .getSourcePort()\n            .getParent()\n            .getID(),\n      );\n\n      sourcePort = node.getPort(sourcePort.getName());\n\n      link.setSourcePort(sourcePort);\n      sourcePort.addLink(link);\n    }\n\n    let targetPort = link.getTargetPort();\n    if (targetPort) {\n      const node = nodeList.find(\n        n =>\n          n.getID() ===\n          link\n            .getTargetPort()\n            .getParent()\n            .getID(),\n      );\n\n      targetPort = node.getPort(targetPort.getName());\n\n      link.setTargetPort(targetPort);\n      targetPort.addLink(link);\n    }\n\n    if (link.getBifurcationSource())\n      link.getBifurcationSource().addBifurcation(link);\n\n    if (link.getBifurcationTarget())\n      link.getBifurcationTarget().addBifurcation(link);\n\n    return link;\n  };\n\n  return {\n    /**\n     * Componend added handler. Occurs when a component is added or\n     * pasted.\n     */\n    componentsAdded: ({ nodes }) => {\n      engine.commands.add({\n        execute: () => {\n          nodes.forEach(node => engine.getModel().addNode(node));\n        },\n        undo: () => {\n          nodes.forEach(node => node.remove());\n        },\n      });\n    },\n\n    /**\n     * Component configuration edit handler.\n     */\n    componentEdited: ({ node, configurations, links }) => {\n      engine.commands.add({\n        execute: () => {\n          editComponentConfiguration(node, configurations.after);\n        },\n        undo: () => {\n          editComponentConfiguration(node, configurations.before);\n\n          links.before.forEach(link =>\n            engine.getModel().addLink(adjustLink(link)),\n          );\n        },\n      });\n    },\n\n    /**\n     * Link added handler. Occurs on new links or bifurcations.\n     */\n    linkAdded: ({ link }) => {\n      engine.commands.add({\n        execute: () => {\n          engine.getModel().addLink(adjustLink(link));\n        },\n        undo: () => {\n          link.remove();\n        },\n      });\n    },\n\n    /**\n     * Link changed handler. Occurs when a link is extended.\n     */\n    linkChanged: ({ before, after }) => {\n      const handleLinkChanged = (from, to) => {\n        const link = engine.getModel().getLink(from.id);\n\n        // Update link points\n        link.setPoints(\n          from.points.map(position => {\n            const point = new PointModel({ link });\n            point.setPosition(position);\n            return point;\n          }),\n        );\n\n        // Updates bifurcation target\n        if (from.bifurcationTarget) {\n          const target = engine\n            .getModel()\n            .getLink(from.bifurcationTarget);\n          link.setBifurcationTarget(target);\n          target.addBifurcation(link);\n        } else if (to.bifurcationTarget) {\n          const oldTarget = engine\n            .getModel()\n            .getLink(to.bifurcationTarget);\n          link.setBifurcationTarget(null);\n          oldTarget.removeBifurcation(link);\n        }\n      };\n\n      engine.commands.add({\n        execute: () => {\n          handleLinkChanged(after, before);\n        },\n        undo: () => {\n          handleLinkChanged(before, after);\n        },\n      });\n    },\n\n    /**\n     * Components and links removal handler.\n     */\n    entitiesRemoved: ({ nodes, links }) => {\n      engine.commands.add({\n        execute: () => {\n          // Removes all nodes\n          nodes.forEach(node => node.remove());\n\n          // Removes all links\n          links.forEach(link => link.remove());\n        },\n        undo: () => {\n          /**\n           * Adds all links in the correct order. Bifurcations should be\n           * added before, otherwise links on the diagram are incorretly\n           * rendered.\n           */\n          links\n            .map(link => adjustLink(link, nodes))\n            .sort((l1, l2) => {\n              if (\n                l1.getBifurcationSource() === l2 ||\n                l1.getBifurcationTarget() === l2\n              )\n                return 1;\n\n              if (\n                l2.getBifurcationSource() === l1 ||\n                l2.getBifurcationTarget() === l1\n              )\n                return -1;\n\n              return 0;\n            })\n            .forEach(link => engine.getModel().addLink(link));\n\n          // Adds all nodes\n          nodes.forEach(node => engine.getModel().addNode(node));\n        },\n      });\n    },\n\n    /**\n     * Components and links move handler.\n     */\n    entitiesMoved: ({ nodes, links }) => {\n      const handleEntitiesMoved = state => {\n        // Updates all moved nodes position\n        nodes[state].forEach(({ id, position }) => {\n          const node = engine.getModel().getNode(id);\n          node.setPosition(position.x, position.y);\n        });\n\n        // Updates all moved links points\n        links[state].forEach(({ id, points }) => {\n          const link = engine.getModel().getLink(id);\n          link.setPoints(\n            points.map(position => {\n              const point = new PointModel({ link });\n              point.setPosition(position);\n              return point;\n            }),\n          );\n        });\n      };\n\n      engine.commands.add({\n        execute: () => {\n          handleEntitiesMoved('after');\n        },\n        undo: () => {\n          handleEntitiesMoved('before');\n        },\n      });\n    },\n  };\n};\n\nexport default commandHandlers;\n","export default class Command {\n  constructor(execute, undo) {\n    this.execute = execute;\n    this.undo = undo;\n  }\n\n  execute(engine) {\n    this.execute(engine);\n  }\n\n  undo(engine) {\n    this.undo(engine);\n  }\n}\n","import Command from './Command';\n\n/**\n * This class manages the undo/redo stack.\n */\nexport default class CommandManager {\n  constructor() {\n    this.clear();\n  }\n\n  clear() {\n    this.stack = [];\n    this.index = 0;\n  }\n\n  add({ execute, undo }) {\n    const command = new Command(execute, undo);\n    this.stack.length = this.index;\n    this.stack.push(command);\n    this.index += 1;\n  }\n\n  undo() {\n    if (this.index > 0) {\n      this.index -= 1;\n      const command = this.stack[this.index];\n      command.undo();\n    }\n  }\n\n  redo() {\n    if (this.index < this.stack.length) {\n      const command = this.stack[this.index];\n      command.execute();\n      this.index += 1;\n    }\n  }\n}\n","import { Point } from '@projectstorm/geometry';\n\nimport { snap, samePosition } from './common';\n\nconst getRelativePoint = (point, model) => {\n  const zoomLevelPercentage = model.getZoomLevel() / 100;\n  const engineOffsetX = model.getOffsetX() / zoomLevelPercentage;\n  const engineOffsetY = model.getOffsetY() / zoomLevelPercentage;\n\n  return new Point(point.x - engineOffsetX, point.y - engineOffsetY);\n};\n\nconst nextLinkPosition = (\n  event,\n  model,\n  initialRelative,\n  sourcePosition,\n) => {\n  const point = getRelativePoint(sourcePosition, model);\n\n  const zoomLevelPercentage = model.getZoomLevel() / 100;\n  const initialXRelative = initialRelative.x / zoomLevelPercentage;\n  const initialYRelative = initialRelative.y / zoomLevelPercentage;\n\n  const linkNextX =\n    point.x +\n    (initialXRelative - sourcePosition.x) +\n    event.virtualDisplacementX;\n  const linkNextY =\n    point.y +\n    (initialYRelative - sourcePosition.y) +\n    event.virtualDisplacementY;\n\n  return snap(\n    new Point(linkNextX, linkNextY),\n    model.options.gridSize,\n  );\n};\n\n/**\n * Handles mouse move on link or bifurcation creation, creating and\n * moving link points according to user input.\n *\n * This implementation mimics logisim link creation behavior.\n */\nexport default function handleLinkDrag(event, link) {\n  const first = link.getFirstPosition();\n  const last = link.getLastPosition();\n\n  const next = nextLinkPosition(\n    event,\n    this.engine.getModel(),\n    { x: this.initialXRelative, y: this.initialYRelative },\n    first,\n  );\n\n  if (!this.hasStartedMoving && samePosition(first, last)) {\n    /**\n     * For some reason, inputs are only valid after the first and last\n     * position are equals once. Before that, the last position is\n     * (0, 0).\n     */\n    this.hasStartedMoving = true;\n  }\n\n  if (this.hasStartedMoving) {\n    if (!link.hasMiddlePoint()) {\n      if (last.x !== next.x) {\n        if (!this.moveDirection) {\n          this.moveDirection = 'horizontal';\n        }\n\n        if (this.moveDirection === 'vertical') {\n          link.addPoint(link.generatePoint(last.x, next.y), 1);\n        }\n      } else if (last.y !== next.y) {\n        if (!this.moveDirection) {\n          this.moveDirection = 'vertical';\n        }\n\n        if (this.moveDirection === 'horizontal') {\n          link.addPoint(link.generatePoint(next.x, last.y), 1);\n        }\n      }\n    } else {\n      const middle = link.getMiddlePosition();\n      if (samePosition(middle, last)) {\n        link.removePoint(link.getMiddlePoint());\n      } else if (samePosition(first, middle)) {\n        link.removePoint(link.getMiddlePoint());\n        this.moveDirection =\n          this.moveDirection === 'horizontal'\n            ? 'vertical'\n            : 'horizontal';\n      } else if (this.moveDirection === 'horizontal') {\n        if (last.x !== next.x) {\n          link.getMiddlePoint().setPosition(next.x, first.y);\n        }\n      } else if (this.moveDirection === 'vertical') {\n        if (last.y !== next.y) {\n          link.getMiddlePoint().setPosition(first.x, next.y);\n        }\n      }\n    }\n  }\n\n  /**\n   * Sometimes, user input may be fast enough to skip the creation of\n   * a middle point. If this happens, we add it here.\n   */\n  if (\n    !link.hasMiddlePoint() &&\n    first.x !== next.x &&\n    first.y !== next.y\n  ) {\n    if (samePosition(first, last)) {\n      link.addPoint(link.generatePoint(next.x, first.y), 1);\n    } else if (this.moveDirection === 'horizontal') {\n      link.addPoint(link.generatePoint(next.x, first.y), 1);\n    } else {\n      link.addPoint(link.generatePoint(first.x, next.y), 1);\n    }\n  }\n\n  link.getLastPoint().setPosition(next.x, next.y);\n\n  this.engine.repaintCanvas();\n}\n","import { Point } from '@projectstorm/geometry';\nimport {\n  AbstractDisplacementState,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\nimport {\n  NodeModel,\n  PortModel,\n} from '@projectstorm/react-diagrams-core';\n\nimport {\n  snap,\n  samePosition,\n  getLandingLink,\n  isPointOverLink,\n  sameX,\n  sameAxis,\n  closestPointToLink,\n  getIncompatibleWidthsErrorMessage,\n} from './common';\nimport handleLinkDrag from './handleLinkDrag';\n\n/**\n * This State is responsible for handling bifurcation events.\n *\n * A bifurcation is just like a normal link, but instead of having a\n * source port, it has a source link (its `bifurcationSource`).\n *\n * There are three ways the user can create bifurcations:\n *\n * 1. By dragging an existing link into another existing link\n *    (link-to-link bifurcation)\n * 2. By dragging an existing link to any other point on the canvas,\n *    except on top of nodes\n *\n * If the drag start and end points are near each other, this action\n * will behave as a link selection.\n */\nexport default class BifurcateLinkState extends AbstractDisplacementState {\n  constructor(showSnackbar) {\n    super({ name: 'bifurcate-link' });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          this.moveDirection = undefined;\n          this.hasStartedMoving = false;\n\n          this.source = this.engine.getMouseElement(event.event);\n          this.sourceBefore = this.getLinkPoints(this.source);\n          this.sourceEdited = false;\n\n          const position = this.snapPointToSourceLink(\n            this.engine.getRelativeMousePoint(event.event),\n            this.source,\n          );\n\n          if (this.source.isLocked()) {\n            this.eject();\n            return;\n          }\n\n          this.bifurcation = this.engine\n            .getLinkFactories()\n            .getFactory(this.source.getType())\n            .generateModel();\n          this.bifurcation.setBits(this.source.getBits());\n\n          if (!this.bifurcation) {\n            this.eject();\n            return;\n          }\n\n          this.bifurcation.setBifurcationSource(this.source);\n          this.bifurcation.getFirstPoint().setPosition(position);\n          this.bifurcation.getLastPoint().setPosition(position);\n\n          this.bifurcation.setSelected(true);\n          this.engine.getModel().clearSelection();\n\n          this.source.setSelected(false);\n          this.source.addBifurcation(this.bifurcation);\n          this.engine.getModel().addLink(this.bifurcation);\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: event => {\n          // Link selection\n          if (this.isNearbySourcePosition()) {\n            this.cleanUp();\n            this.engine.getModel().clearSelection();\n            this.source.setSelected(true);\n            this.engine.repaintCanvas();\n            return;\n          }\n\n          const model = this.engine.getMouseElement(event.event);\n\n          // Disallows creation under nodes\n          if (model instanceof NodeModel) {\n            this.cleanUp();\n            this.engine.repaintCanvas();\n            return;\n          }\n\n          // Bifurcation connected to port\n          if (\n            model instanceof PortModel &&\n            model.isNewLinkAllowed()\n          ) {\n            // Disallows connecting ports with different bit numbers\n            if (this.source.getBits() !== model.getBits()) {\n              this.cleanUp();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(this.source, model),\n              );\n              return;\n            }\n\n            this.bifurcation.setTargetPort(model);\n\n            model.reportPosition();\n            this.adjustBifurcationOverlayingSource(this.bifurcation);\n            this.engine.repaintCanvas();\n            this.fireEvent();\n            return;\n          }\n\n          // Bifurcation landing on another existing link\n          const landing = getLandingLink(\n            this.bifurcation,\n            this.engine,\n          );\n          if (landing) {\n            // Disallows connecting links with different bit numbers\n            if (landing.getBits() !== this.bifurcation.getBits()) {\n              this.cleanUp();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(\n                  this.bifurcation,\n                  landing,\n                ),\n              );\n              return;\n            }\n\n            this.bifurcation.setBifurcationTarget(landing);\n            landing.addBifurcation(this.bifurcation);\n            landing.setSelected(true);\n          }\n\n          this.mergeWithBifurcation(\n            this.bifurcation.getBifurcationSource(),\n          );\n          this.adjustBifurcationOverlayingSource(this.bifurcation);\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = () => {\n    if (this.sourceEdited) {\n      this.engine.fireEvent(\n        {\n          before: this.sourceBefore,\n          after: this.getLinkPoints(this.source),\n        },\n        'linkChanged',\n      );\n    } else {\n      this.engine.fireEvent({ link: this.bifurcation }, 'linkAdded');\n    }\n  };\n\n  getLinkPoints(link) {\n    return {\n      id: link.getID(),\n      points: link.getPoints().map(point => point.getPosition()),\n      bifurcationTarget: link.getBifurcationTarget()\n        ? link.getBifurcationTarget().getID()\n        : null,\n    };\n  }\n\n  cleanUp() {\n    this.source.removeBifurcation(this.bifurcation);\n    this.bifurcation.remove();\n  }\n\n  /**\n   * Snaps a point to a point which is over the source link.\n   */\n  snapPointToSourceLink(position, source) {\n    const { gridSize } = this.engine.getModel().getOptions();\n    const sourcePoints = source.getPoints();\n\n    const closestCorner = this.getClosestCornerToPosition(\n      sourcePoints,\n      position,\n    );\n\n    if (closestCorner.distance < gridSize - 1) {\n      return new Point(\n        closestCorner.position.x,\n        closestCorner.position.y,\n      );\n    }\n\n    const closestPath = this.getClosestPathToPosition(\n      sourcePoints,\n      position,\n    );\n\n    const snappedPosition = snap(position, gridSize);\n\n    return new Point(\n      closestPath.axis === 'x'\n        ? closestPath.position\n        : snappedPosition.x,\n      closestPath.axis === 'y'\n        ? closestPath.position\n        : snappedPosition.y,\n    );\n  }\n\n  getClosestCornerToPosition(points, position) {\n    return points\n      .map(sourcePoint => ({\n        distance: Math.hypot(\n          position.x - sourcePoint.position.x,\n          position.y - sourcePoint.position.y,\n        ),\n        ...sourcePoint,\n      }))\n      .reduce((closest, point) =>\n        point.distance < closest.distance ? point : closest,\n      );\n  }\n\n  getPathPoints(points) {\n    return points\n      .map((point, i) => ({ from: points[i], to: points[i + 1] }))\n      .filter(tuple => tuple.to);\n  }\n\n  getPathDirections(points) {\n    return this.getPathPoints(points).map(pathPosition =>\n      sameX(pathPosition.from.position, pathPosition.to.position)\n        ? {\n            axis: 'x',\n            position: pathPosition.from.position.x,\n          }\n        : {\n            axis: 'y',\n            position: pathPosition.from.position.y,\n          },\n    );\n  }\n\n  getClosestPathToPosition(points, position) {\n    return this.getPathDirections(points)\n      .map(path => ({\n        distance: Math.abs(position[path.axis] - path.position),\n        ...path,\n      }))\n      .reduce((closest, path) =>\n        path.distance < closest.distance ? path : closest,\n      );\n  }\n\n  isNearbySourcePosition() {\n    return samePosition(\n      this.bifurcation.getFirstPosition(),\n      this.bifurcation.getLastPosition(),\n    );\n  }\n\n  /**\n   * Removes the bifurcation points which are causing the bifurcation\n   * to overlay its source link. Removes the whole bifurcation, in\n   * case it is completely overlayed by its source link.\n   */\n  adjustBifurcationOverlayingSource() {\n    const source = this.bifurcation.getBifurcationSource();\n\n    if (\n      samePosition(\n        this.bifurcation.getFirstPosition(),\n        source.getLastPosition(),\n      )\n    ) {\n      if (\n        isPointOverLink(this.bifurcation.getSecondPosition(), source)\n      ) {\n        this.bifurcation.removePoint(\n          this.bifurcation.getFirstPoint(),\n        );\n      }\n      return;\n    }\n\n    if (\n      isPointOverLink(this.bifurcation.getFirstPosition(), source) &&\n      isPointOverLink(this.bifurcation.getSecondPosition(), source)\n    ) {\n      if (!this.bifurcation.hasMiddlePoint()) {\n        this.bifurcation.remove();\n        source.removeBifurcation(this.bifurcation);\n        return;\n      }\n\n      this.bifurcation.removePoint(this.bifurcation.getFirstPoint());\n\n      if (\n        samePosition(\n          this.bifurcation.getFirstPosition(),\n          source.getMiddlePosition(),\n        )\n      ) {\n        if (\n          isPointOverLink(this.bifurcation.getLastPosition(), source)\n        ) {\n          this.bifurcation.remove();\n          source.removeBifurcation(this.bifurcation);\n          return;\n        }\n\n        this.bifurcation\n          .getFirstPoint()\n          .setPosition(source.getLastPosition());\n\n        this.mergeWithBifurcation(source);\n        return;\n      }\n    }\n\n    if (source.hasMiddlePoint()) {\n      if (\n        sameAxis(\n          this.bifurcation.getFirstPosition(),\n          source.getMiddlePosition(),\n          this.bifurcation.getSecondPosition(),\n        )\n      ) {\n        this.bifurcation\n          .getFirstPoint()\n          .setPosition(source.getMiddlePosition());\n      }\n    }\n  }\n\n  /**\n   * Merges a link with its bifurcations, when possible.\n   */\n  mergeWithBifurcation(link) {\n    const source = {\n      first: link.getFirstPosition(),\n      middle: link.getMiddlePosition(),\n      last: link.getLastPosition(),\n      secondLast: link.getSecondLastPosition(),\n    };\n\n    link.getBifurcations().forEach(b => {\n      if (isPointOverLink(link.getLastPosition(), b)) {\n        b.getFirstPoint().setPosition(link.getLastPosition());\n      }\n    });\n\n    const elegibleBifurcations = link.getBifurcations().filter(b => {\n      if (!samePosition(b.getFirstPosition(), source.last))\n        return false;\n\n      if (!link.hasMiddlePoint() && !b.hasMiddlePoint()) return true;\n\n      if (link.hasMiddlePoint() && b.hasMiddlePoint()) {\n        if (samePosition(source.middle, b.getMiddlePosition())) {\n          return true;\n        }\n        return false;\n      }\n\n      if (\n        sameAxis(\n          source.last,\n          source.secondLast,\n          b.getSecondPosition(),\n        )\n      )\n        return true;\n\n      return false;\n    });\n\n    const bifurcationToMerge = elegibleBifurcations[0];\n\n    if (!bifurcationToMerge) return;\n\n    const newMiddle = bifurcationToMerge.getSecondLastPosition();\n    const newLast = bifurcationToMerge.getLastPosition();\n\n    if (!link.hasMiddlePoint()) {\n      link.addPoint(link.generatePoint(newMiddle.x, newMiddle.y), 1);\n    }\n\n    link.getLastPoint().setPosition(newLast.x, newLast.y);\n\n    if (link.isStraight() && link.hasMiddlePoint()) {\n      link.removePoint(link.getMiddlePoint());\n    }\n\n    link.removeBifurcation(bifurcationToMerge);\n    const bifurcationTarget = bifurcationToMerge.getBifurcationTarget();\n    if (bifurcationTarget) {\n      link.setBifurcationTarget(bifurcationTarget);\n      bifurcationTarget.addBifurcation(link);\n    }\n    this.sourceEdited = true;\n    bifurcationToMerge.remove();\n\n    if (\n      samePosition(link.getFirstPosition(), link.getLastPosition())\n    ) {\n      link.remove();\n    } else {\n      link.setSelected(true);\n    }\n\n    this.adjustBifurcationPoints(link);\n  }\n\n  /**\n   * Adjusts points for bifurcations on which its first point is not\n   * over its source link.\n   */\n  adjustBifurcationPoints(link) {\n    const { gridSize } = this.engine.getModel().getOptions();\n\n    link\n      .getBifurcations()\n      .filter(b => !isPointOverLink(b.getFirstPosition(), link))\n      .forEach(b => {\n        const newSource = snap(\n          closestPointToLink(b.getFirstPosition(), link),\n          gridSize,\n        );\n\n        b.getFirstPoint().setPosition(newSource.x, newSource.y);\n\n        if (sameAxis(b.getFirstPosition(), b.getLastPosition()))\n          return;\n\n        // Adjust middle point aswell\n        if (b.hasMiddlePoint()) {\n          b.removePoint(b.getMiddlePoint());\n        }\n\n        if (\n          sameX(link.getFirstPosition(), link.getSecondPosition())\n        ) {\n          b.addPoint(\n            b.generatePoint(\n              b.getLastPosition().x,\n              b.getFirstPosition().y,\n            ),\n            1,\n          );\n        } else {\n          b.addPoint(\n            b.generatePoint(\n              b.getFirstPosition().x,\n              b.getLastPosition().y,\n            ),\n            1,\n          );\n        }\n      });\n  }\n\n  /**\n   * Updates bifurcation's points upon mouse move.\n   */\n  fireMouseMoved(event) {\n    handleLinkDrag.call(this, event, this.bifurcation);\n  }\n}\n","import {\n  State,\n  AbstractDisplacementState,\n} from '@projectstorm/react-canvas-core';\n\nexport default class DragCanvasState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'drag-canvas',\n    });\n  }\n\n  async activated(prev) {\n    super.activated(prev);\n    this.engine.getModel().clearSelection();\n    await this.engine.repaintCanvas(true);\n\n    // We can block layer rendering because we are only targeting the transforms\n    this.engine\n      .getModel()\n      .getLayers()\n      .forEach(layer => layer.allowRepaint(false));\n\n    this.initialCanvasX = this.engine.getModel().getOffsetX();\n    this.initialCanvasY = this.engine.getModel().getOffsetY();\n  }\n\n  deactivated(next: State) {\n    super.deactivated(next);\n\n    this.engine\n      .getModel()\n      .getLayers()\n      .forEach(layer => layer.allowRepaint(true));\n  }\n\n  fireMouseMoved(event) {\n    // Allow moving only with left clicks\n    if (event.event.nativeEvent.which !== 1) return;\n\n    this.engine\n      .getModel()\n      .setOffset(\n        this.initialCanvasX + event.displacementX,\n        this.initialCanvasY + event.displacementY,\n      );\n    this.engine.repaintCanvas();\n  }\n}\n","import {\n  AbstractDisplacementState,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\nimport {\n  NodeModel,\n  PortModel,\n} from '@projectstorm/react-diagrams-core';\n\nimport {\n  nearby,\n  getLandingLink,\n  getIncompatibleWidthsErrorMessage,\n} from './common';\nimport handleLinkDrag from './handleLinkDrag';\n\n/**\n * This State is responsible for handling link creation events.\n */\nexport default class DragNewLinkState extends AbstractDisplacementState {\n  constructor(showSnackbar) {\n    super({ name: 'drag-new-link' });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          this.moveDirection = undefined;\n          this.hasStartedMoving = false;\n\n          this.port = this.engine.getMouseElement(event.event);\n\n          if (\n            !(this.port instanceof PortModel) ||\n            this.port.isLocked()\n          ) {\n            this.eject();\n            return;\n          }\n\n          this.link = this.port.createLinkModel();\n\n          if (!this.link) {\n            this.eject();\n            return;\n          }\n\n          this.link.setSelected(true);\n          this.link.setSourcePort(this.port);\n          this.engine.getModel().clearSelection();\n          this.engine.getModel().addLink(this.link);\n          this.port.reportPosition();\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: event => {\n          const model = this.engine.getMouseElement(event.event);\n\n          // Disallows creation under nodes\n          if (\n            model instanceof NodeModel ||\n            this.isNearbySourcePort(event.event)\n          ) {\n            this.link.remove();\n            this.engine.repaintCanvas();\n          }\n\n          // Link connecting to port\n          if (\n            model instanceof PortModel &&\n            this.port.canLinkToPort(model)\n          ) {\n            // Disallows connecting ports with different bit numbers\n            if (this.port.getBits() !== model.getBits()) {\n              this.link.remove();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(this.port, model),\n              );\n              return;\n            }\n\n            this.link.setTargetPort(model);\n            model.reportPosition();\n            this.engine.repaintCanvas();\n            this.fireEvent();\n            return;\n          }\n\n          // Link landing on another link\n          const landing = getLandingLink(this.link, this.engine);\n          if (landing) {\n            // Disallows connecting links with different bit numbers\n            if (landing.getBits() !== this.link.getBits()) {\n              this.link.remove();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(this.link, landing),\n              );\n              return;\n            }\n\n            const reverse = this.engine\n              .getFactoryForLink(landing)\n              .generateModel();\n            reverse.setPoints(this.link.getPoints().reverse());\n            reverse.setTargetPort(this.link.getSourcePort());\n            reverse.setBifurcationSource(landing);\n            reverse.setBits(landing.getBits());\n\n            landing.addBifurcation(reverse);\n            landing.setSelected(true);\n\n            this.link.remove();\n            this.engine.getModel().addLink(reverse);\n            this.link = reverse;\n          }\n\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = () => {\n    this.engine.fireEvent({ link: this.link }, 'linkAdded');\n  };\n\n  isNearbySourcePort(event) {\n    const point = this.engine.getRelativeMousePoint(event);\n\n    const sourcePort = this.link.getSourcePort();\n    const sourcePortSize = sourcePort.width;\n    const sourcePortPosition = sourcePort.getPosition();\n\n    return nearby(point, sourcePortPosition, sourcePortSize);\n  }\n\n  /**\n   * Updates link's points upon mouse move.\n   */\n  fireMouseMoved(event) {\n    handleLinkDrag.call(this, event, this.link);\n  }\n}\n","import { Point } from '@projectstorm/geometry';\nimport {\n  Action,\n  InputType,\n  BasePositionModel,\n  AbstractDisplacementState,\n} from '@projectstorm/react-canvas-core';\nimport { NodeModel } from '@projectstorm/react-diagrams-core';\n\nimport BaseModel from '../../BaseModel';\nimport {\n  snap,\n  samePosition,\n  sameX,\n  sameY,\n  closestPointToLink,\n} from './common';\n\n/**\n * This State handles node moving.\n *\n * When nodes are moved, all of its links (and all bifurcations from\n * or to this link) need to be rearranged.\n */\nexport default class MoveItemsState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'move-items',\n    });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          if (this.engine.getModel().isLocked()) {\n            this.eject();\n            return;\n          }\n\n          this.lastDisplacement = new Point(0, 0);\n\n          this.element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          if (!this.element) {\n            this.eject();\n            return;\n          }\n\n          if (!this.element.isSelected()) {\n            this.engine.getModel().clearSelection();\n          }\n\n          this.linkDirections = this.getLinkDirections(this.element);\n\n          this.element.setSelected(true);\n          this.engine.repaintCanvas();\n\n          this.nodesBefore = this.getNodesPositions();\n          this.linksBefore = this.getLinksPoints();\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: () => {\n          if (\n            this.lastDisplacement.x === 0 &&\n            this.lastDisplacement.y === 0\n          ) {\n            return;\n          }\n\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  getNodesPositions = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => model instanceof BaseModel)\n      .map(node => ({\n        id: node.getID(),\n        position: node.getPosition(),\n      }));\n\n  getLinksPoints = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => model instanceof BaseModel)\n      .map(node => node.getAllLinks())\n      .flat()\n      .map(link => ({\n        id: link.getID(),\n        points: link.getPoints().map(point => point.getPosition()),\n      }));\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent() {\n    this.engine.fireEvent(\n      {\n        nodes: {\n          before: this.nodesBefore,\n          after: this.getNodesPositions(),\n        },\n        links: {\n          before: this.linksBefore,\n          after: this.getLinksPoints(),\n        },\n      },\n      'entitiesMoved',\n    );\n  }\n\n  activated(previous) {\n    super.activated(previous);\n    this.initialPositions = {};\n  }\n\n  /**\n   * Gets all links from a given node, including all its bifurcations.\n   */\n  getLinksFromNode(node) {\n    if (!(node instanceof NodeModel)) return [];\n\n    return Object.values(node.getPorts())\n      .map(p => Object.entries(p.getLinks()))\n      .filter(entry => entry.length > 0)\n      .flat()\n      .map(([id, link]) => [\n        [id, link],\n        ...this.getBifurcatedLinks(link),\n      ])\n      .flat();\n  }\n\n  getBifurcatedLinks(link) {\n    return link\n      .getBifurcations()\n      .map(b => [[b.getID(), b], ...this.getBifurcatedLinks(b)])\n      .flat();\n  }\n\n  getLinkDirections(node) {\n    return this.getLinksFromNode(node).reduce(\n      (acc, [id, link]) => ({\n        ...acc,\n        [id]: this.getLinkDirection(link),\n      }),\n      {},\n    );\n  }\n\n  getLinkDirection(link) {\n    if (!link.hasMiddlePoint()) {\n      return null;\n    }\n\n    const first = link.getFirstPosition();\n    const middle = link.getMiddlePosition();\n\n    if (sameX(first, middle)) return 'vertical';\n    if (sameY(first, middle)) return 'horizontal';\n\n    return null;\n  }\n\n  fireMouseMoved(event) {\n    // Allow moving only with left clicks\n    if (event.event.nativeEvent.which !== 1) return;\n\n    const currentDisplacement = snap(\n      new Point(\n        event.virtualDisplacementX,\n        event.virtualDisplacementY,\n      ),\n      this.engine.getModel().getOptions().gridSize,\n    );\n\n    // Avoids rearranging everything before moving at least one grid\n    if (samePosition(currentDisplacement, this.lastDisplacement)) {\n      return;\n    }\n    this.lastDisplacement = currentDisplacement;\n\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .forEach(entity => {\n        if (entity instanceof BasePositionModel) {\n          this.moveEntity(entity, event);\n\n          if (entity instanceof NodeModel) {\n            this.adjustNodeLinks(entity);\n          }\n        }\n      });\n\n    this.engine.repaintCanvas();\n  }\n\n  moveEntity(entity, event) {\n    if (entity.isLocked()) {\n      return;\n    }\n\n    if (!this.initialPositions[entity.getID()]) {\n      this.initialPositions[entity.getID()] = {\n        point: entity.getPosition(),\n        item: entity,\n      };\n    }\n\n    const initial = this.initialPositions[entity.getID()].point;\n    const model = this.engine.getModel();\n\n    entity.setPosition(\n      model.getGridPosition(initial.x + event.virtualDisplacementX),\n      model.getGridPosition(initial.y + event.virtualDisplacementY),\n    );\n  }\n\n  adjustNodeLinks(node) {\n    Object.values(node.getPorts()).forEach(port =>\n      Object.values(port.getLinks()).forEach(this.adjustLinkPoints),\n    );\n  }\n\n  adjustLinkPoints = link => {\n    const first = link.getFirstPosition();\n    const last = link.getLastPosition();\n\n    if (\n      !link.hasMiddlePoint() &&\n      first.x !== last.x &&\n      first.y !== last.y\n    ) {\n      link.addPoint(link.generatePoint(first.x, last.y), 1);\n    } else if (link.hasMiddlePoint()) {\n      const linkDirection = this.linkDirections[link.getID()];\n\n      if (linkDirection === 'horizontal') {\n        link.getMiddlePoint().setPosition(last.x, first.y);\n      } else {\n        link.getMiddlePoint().setPosition(first.x, last.y);\n      }\n\n      const middle = link.getMiddlePosition();\n\n      if (samePosition(first, middle) || samePosition(middle, last)) {\n        link.removePoint(link.getMiddlePoint());\n      }\n    }\n\n    // Adjusts origin/target position from bifurcations of this link\n    this.adjustLinkBifurcations(link);\n  };\n\n  adjustLinkBifurcations(link) {\n    const bifurcations = link.getBifurcations();\n\n    bifurcations.forEach(bifurcation => {\n      this.adjustFirstAndLastPoints(bifurcation);\n\n      // Adjusts the points of this bifurcation (recursion)\n      this.adjustLinkPoints(bifurcation);\n    });\n  }\n\n  /**\n   * Assures that the first position on a bifurcation is still over\n   * the source link, and that the last position is still over the\n   * target link.\n   */\n  adjustFirstAndLastPoints(bifurcation) {\n    const { gridSize } = this.engine.getModel().getOptions();\n\n    const first = bifurcation.getFirstPoint();\n    const closestToFirst = snap(\n      closestPointToLink(\n        first.getPosition(),\n        bifurcation.getBifurcationSource(),\n      ),\n      gridSize,\n    );\n    first.setPosition(closestToFirst.x, closestToFirst.y);\n\n    if (bifurcation.getBifurcationTarget()) {\n      const last = bifurcation.getLastPoint();\n      const closestToLast = snap(\n        closestPointToLink(\n          last.getPosition(),\n          bifurcation.getBifurcationTarget(),\n        ),\n        gridSize,\n      );\n      last.setPosition(closestToLast.x, closestToLast.y);\n    }\n  }\n}\n","import { Rectangle } from '@projectstorm/geometry';\nimport {\n  AbstractDisplacementState,\n  SelectionLayerModel,\n} from '@projectstorm/react-canvas-core';\nimport {\n  LinkModel,\n  PointModel,\n} from '@projectstorm/react-diagrams-core';\n\n/**\n * This State handles selection box events.\n *\n * Link (and link points) selection is currently disabled.\n */\nexport default class SelectionBoxState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'selection-box',\n    });\n  }\n\n  activated(previous) {\n    super.activated(previous);\n    this.layer = new SelectionLayerModel();\n    this.engine.getModel().addLayer(this.layer);\n  }\n\n  deactivated(next) {\n    super.deactivated(next);\n    this.layer.remove();\n    this.engine.repaintCanvas();\n  }\n\n  getBoxDimensions(event) {\n    const rel = this.engine.getRelativePoint(\n      event.event.clientX,\n      event.event.clientY,\n    );\n\n    return {\n      left:\n        rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\n      top:\n        rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\n      width: Math.abs(rel.x - this.initialXRelative),\n      height: Math.abs(rel.y - this.initialYRelative),\n      right:\n        rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\n      bottom:\n        rel.y < this.initialYRelative ? this.initialYRelative : rel.y,\n    };\n  }\n\n  fireMouseMoved(event) {\n    this.layer.setBox(this.getBoxDimensions(event));\n\n    const relative = this.engine.getRelativeMousePoint({\n      clientX: this.initialX,\n      clientY: this.initialY,\n    });\n    if (event.virtualDisplacementX < 0) {\n      relative.x -= Math.abs(event.virtualDisplacementX);\n    }\n    if (event.virtualDisplacementY < 0) {\n      relative.y -= Math.abs(event.virtualDisplacementY);\n    }\n    const rect = new Rectangle(\n      relative,\n      Math.abs(event.virtualDisplacementX),\n      Math.abs(event.virtualDisplacementY),\n    );\n\n    if (!this.engine.getModel().isLocked()) {\n      this.engine\n        .getModel()\n        .getSelectionEntities()\n        .forEach(model => {\n          if (model.getBoundingBox) {\n            if (!this.allowSelection(model)) return;\n\n            const bounds = model.getBoundingBox();\n            if (\n              rect.containsPoint(bounds.getTopLeft()) &&\n              rect.containsPoint(bounds.getBottomRight())\n            ) {\n              model.setSelected(true);\n            } else {\n              model.setSelected(false);\n            }\n          }\n        });\n    }\n\n    this.engine.repaintCanvas();\n  }\n\n  allowSelection(model) {\n    return (\n      !(model instanceof LinkModel) && !(model instanceof PointModel)\n    );\n  }\n}\n","import {\n  State,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\n\nimport SelectionBoxState from './SelectionBoxState';\n\n/**\n * This State handles nodes selection.\n */\nexport default class SelectingState extends State {\n  constructor() {\n    super({\n      name: 'selecting',\n    });\n    this.keys = ['shift'];\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          const element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          // Go into a selection box on the canvas state\n          if (!element) {\n            this.transitionWithEvent(new SelectionBoxState(), event);\n          } else {\n            element.setSelected(true);\n            this.engine.repaintCanvas();\n          }\n        },\n      }),\n    );\n  }\n}\n","import {\n  State,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\nimport {\n  PortModel,\n  LinkModel,\n} from '@projectstorm/react-diagrams-core';\n\nimport BifurcateLinkState from './BifurcateLinkState';\nimport DragCanvasState from './DragCanvasState';\nimport DragNewLinkState from './DragNewLinkState';\nimport MoveItemsState from './MoveItemsState';\nimport SelectingState from './SelectingState';\n\n/**\n * This class defines custom handlers (called states) to respond to\n * clicking events on certain elements.\n */\nexport default class States extends State {\n  constructor(showSnackbar) {\n    super({\n      name: 'diagram-states',\n    });\n\n    this.childStates = [new SelectingState()];\n    this.dragCanvas = new DragCanvasState();\n    this.dragNewLink = new DragNewLinkState(showSnackbar);\n    this.bifurcateLink = new BifurcateLinkState(showSnackbar);\n    this.dragItems = new MoveItemsState();\n\n    // Determine what was clicked on\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          const element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          // The canvas was clicked on, transition to the dragging canvas state\n          if (!element) {\n            this.transitionWithEvent(this.dragCanvas, event);\n          }\n          // Initiate dragging a new link\n          else if (element instanceof PortModel) {\n            this.transitionWithEvent(this.dragNewLink, event);\n          }\n          // Create a bifurcation\n          else if (element instanceof LinkModel) {\n            this.transitionWithEvent(this.bifurcateLink, event);\n          }\n          // Move items\n          else {\n            this.transitionWithEvent(this.dragItems, event);\n          }\n        },\n      }),\n    );\n  }\n}\n","import { Point } from '@projectstorm/geometry';\nimport createEngine, {\n  DiagramModel,\n} from '@projectstorm/react-diagrams';\n\nimport BaseModel from '../BaseModel';\nimport LinkFactory from '../Link/LinkFactory';\nimport PortFactory from '../Port/PortFactory';\nimport ClipboardAction from './actions/ClipboardAction';\nimport DeleteAction from './actions/DeleteAction';\nimport DuplicateAction from './actions/DuplicateAction';\nimport UndoRedoAction from './actions/UndoRedoAction';\nimport ZoomAction from './actions/ZoomAction';\nimport commandHandlers from './Command/commandHandlers';\nimport CommandManager from './Command/CommandManager';\nimport States from './states/States';\n\nexport default class DiagramEngine {\n  constructor(components, areShortcutsAllowed, showSnackbar) {\n    this.components = components;\n    this.areShortcutsAllowed = areShortcutsAllowed;\n    this.showSnackbar = showSnackbar;\n    this.locked = false;\n\n    this.initializeEngine();\n    this.initializeModel();\n  }\n\n  getEngine = () => this.engine;\n\n  getModel = () => this.engine.getModel();\n\n  /**\n   * Initialization methods\n   */\n  initializeEngine = () => {\n    this.engine = createEngine({\n      registerDefaultDeleteItemsAction: false,\n      registerDefaultZoomCanvasAction: false,\n    });\n\n    this.engine.commands = new CommandManager();\n    this.engine.registerListener(commandHandlers(this));\n\n    this.engine\n      .getStateMachine()\n      .pushState(new States(this.showSnackbar));\n\n    const actions = [\n      DuplicateAction,\n      ClipboardAction,\n      DeleteAction,\n      UndoRedoAction,\n      ZoomAction,\n    ];\n    actions.forEach(Action =>\n      this.engine\n        .getActionEventBus()\n        .registerAction(new Action(this.areShortcutsAllowed)),\n    );\n\n    this.engine.getPortFactories().registerFactory(new PortFactory());\n    this.engine.getLinkFactories().registerFactory(new LinkFactory());\n\n    this.registerComponents();\n  };\n\n  initializeModel = () => {\n    this.model = new DiagramModel();\n\n    this.model.setGridSize(15);\n    this.model.setLocked(false);\n    this.model.registerListener({\n      eventDidFire: event => {\n        const type = event.function;\n        if (type === 'offsetUpdated') this.adjustGridOffset(event);\n        if (type === 'zoomUpdated') this.adjustGridZoom(event);\n      },\n    });\n    this.realignGrid();\n\n    this.engine.setModel(this.model);\n  };\n\n  registerComponents = () => {\n    this.components.forEach(component => {\n      this.engine.getNodeFactories().registerFactory(component);\n    });\n  };\n\n  /**\n   * Serializing & deserializing methods\n   */\n  serialize = () => this.model.serialize();\n\n  load = circuit => {\n    this.engine.commands.clear();\n    this.model.deserializeModel(circuit, this.engine);\n    this.realignGrid();\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * Diagram locking methods\n   */\n  setLocked = locked => {\n    this.model.setLocked(locked);\n    this.locked = locked;\n  };\n\n  isLocked = () => this.locked;\n\n  /**\n   * Diagram painting methods\n   */\n  repaint = () => this.engine.repaintCanvas();\n\n  realignGrid = () => {\n    this.adjustGridOffset({\n      offsetX: this.model.getOffsetX(),\n      offsetY: this.model.getOffsetY(),\n    });\n\n    this.adjustGridZoom({\n      zoom: this.model.getZoomLevel(),\n    });\n  };\n\n  adjustGridOffset = ({ offsetX, offsetY }) => {\n    document.body.style.setProperty('--offset-x', `${offsetX}px`);\n    document.body.style.setProperty('--offset-y', `${offsetY}px`);\n  };\n\n  adjustGridZoom = ({ zoom }) => {\n    const { gridSize } = this.model.getOptions();\n    document.body.style.setProperty(\n      '--grid-size',\n      `${(gridSize * zoom) / 100}px`,\n    );\n  };\n\n  /**\n   * Component creation and configuration methods\n   */\n  handleComponentDrop = (event, component) => {\n    const { Model } = this.components.find(\n      c => c.type === component.type,\n    );\n\n    const getSnappedRelativeMousePoint = () => {\n      const { x, y } = this.engine.getRelativeMousePoint(event);\n      return new Point(\n        Math.round(x / 15) * 15,\n        Math.round(y / 15) * 15,\n      );\n    };\n\n    const point = event\n      ? getSnappedRelativeMousePoint(event)\n      : new Point(0, 0);\n\n    const node = new Model(component.type, component.configurations);\n    this.model.addNode(node);\n    node.setPosition(point);\n\n    this.engine.fireEvent({ nodes: [node] }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n\n  handleComponentEdit = (node, configurations) => {\n    const configurationsBefore = node.configurations;\n    const linksBefore = node.getAllLinks();\n\n    this.editComponentConfiguration(node, configurations);\n\n    this.engine.fireEvent(\n      {\n        node,\n        configurations: {\n          before: configurationsBefore,\n          after: node.configurations,\n        },\n        links: {\n          before: linksBefore,\n          after: node.getAllLinks(),\n        },\n      },\n      'componentEdited',\n    );\n\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * When the component configuration is changed, we reinitialize the\n   * given component with the given configurations.\n   *\n   * For simplicity's sake, if this configuration edit creates or\n   * removes a port, we delete all its links. Also, if the number of\n   * bits of a port is changed, its main link is deleted.\n   */\n  editComponentConfiguration = (node, configurations) => {\n    const portsBefore = node.getPorts();\n\n    // Resets configurations and ports for the node and reinitialize\n    node.configurations = configurations; // eslint-disable-line no-param-reassign\n    node.ports = {}; // eslint-disable-line no-param-reassign\n    node.initialize(configurations);\n\n    const hasNewPort = Object.values(node.getPorts()).some(\n      newPort => !portsBefore[newPort.getName()],\n    );\n    const hasRemovedPort = Object.values(portsBefore).some(\n      oldPort => !node.getPort(oldPort.getName()),\n    );\n\n    if (hasNewPort || hasRemovedPort) {\n      /**\n       * If there was any port added or removed, we need to remove all\n       * links connected to the edited component.\n       */\n      Object.values(portsBefore).forEach(port =>\n        Object.values(port.getLinks()).forEach(link => link.remove()),\n      );\n      return;\n    }\n\n    /**\n     * If no port was neither added or removed, we need to map old\n     * port links to new ports\n     */\n    Object.values(portsBefore).forEach(portBefore => {\n      const newPort = node.getPort(portBefore.getName());\n      /**\n       * If the number of bits for this port has changed, delete its\n       * main link, to avoid inconsistencies.\n       */\n      if (portBefore.getBits() !== newPort.getBits()) {\n        if (portBefore.getMainLink())\n          portBefore.getMainLink().remove();\n        return;\n      }\n\n      const link = Object.values(portBefore.getLinks())[0];\n      if (!link) return;\n      newPort.addLink(link);\n      if (portBefore === link.getSourcePort())\n        link.setSourcePort(newPort);\n      if (portBefore === link.getTargetPort())\n        link.setTargetPort(newPort);\n      portBefore.remove();\n    });\n  };\n\n  clearSelection = () =>\n    this.getEngine()\n      .getModel()\n      .clearSelection();\n\n  getSelectedNodes = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel);\n\n  fireAction = event =>\n    this.engine.getActionEventBus().fireAction({\n      event: {\n        ...event,\n        key: '',\n        preventDefault: () => {},\n        stopPropagation: () => {},\n      },\n    });\n\n  duplicateSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyD' });\n\n  cutSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyX' });\n\n  copySelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyC' });\n\n  pasteSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyV' });\n\n  deleteSelected = () =>\n    this.fireAction({ type: 'keydown', code: 'Delete' });\n\n  undo = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyZ' });\n\n  redo = () =>\n    this.fireAction({\n      type: 'keydown',\n      ctrlKey: true,\n      shiftKey: true,\n      code: 'KeyZ',\n    });\n\n  zoomIn = ({ event }) =>\n    this.fireAction({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      type: 'wheel',\n      deltaY: +1,\n    });\n\n  zoomOut = ({ event }) =>\n    this.fireAction({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      type: 'wheel',\n      deltaY: -1,\n    });\n\n  /**\n   * Simulation methods\n   */\n  synchronizeLink = (id, value) =>\n    this.getEngine()\n      .getModel()\n      .getLink(id)\n      .setValue(value);\n\n  synchronizeComponent = (id, diff) => {\n    const component = this.getEngine()\n      .getModel()\n      .getNode(id);\n\n    // Sets output port values\n    Object.entries(diff.output).forEach(([name, value]) =>\n      component.getPort(name).setValue(value),\n    );\n\n    // Sets custom properties\n    Object.entries(diff.properties).forEach(([name, value]) => {\n      component[name] = value;\n    });\n  };\n\n  clearAllValues = () => {\n    this.clearLinkValues();\n    this.clearPortValues();\n  };\n\n  clearLinkValues = () =>\n    this.getEngine()\n      .getModel()\n      .getLinks()\n      .forEach(link => link.setValue(null));\n\n  clearPortValues = () =>\n    this.getEngine()\n      .getModel()\n      .getNodes()\n      .forEach(node =>\n        Object.values(node.getPorts()).forEach(port =>\n          port.setValue(null),\n        ),\n      );\n}\n","import React from 'react';\n\nimport { PortWidget } from '@projectstorm/react-diagrams';\n\nimport styled from 'styled-components';\n\nconst Circle = styled.div`\n  width: 10px;\n  height: 10px;\n  border: var(--port-width) solid\n    ${props =>\n      props.link\n        ? 'var(--port-connected-border)'\n        : 'var(--port-unconnected-border)'};\n  border-radius: 100%;\n  background: ${props => props.port.getColor()};\n\n  &:hover {\n    background: var(--port-hover);\n  }\n`;\n\nexport default class Port extends PortWidget {\n  report() {\n    if (this.props.port) super.report();\n  }\n\n  componentDidUpdate() {\n    if (this.props.port) super.componentDidUpdate();\n  }\n\n  render() {\n    const { name, model, port, className = '' } = this.props;\n\n    if (!port) return null;\n\n    return (\n      <Circle\n        className={`port ${className}`}\n        data-name={name}\n        data-nodeid={model.getID()}\n        port={port}\n        link={port.getMainLink()}\n      />\n    );\n  }\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst MAX_PORTS = 5;\n\n/**\n * Given a number of ports, returns an array with the port positions\n * symmetrically distributed.\n */\nexport const distributePorts = numPorts => {\n  if (numPorts === 2) return [1, 5];\n  if (numPorts === 3) return [1, 3, 5];\n  if (numPorts === 4) return [1, 2, 4, 5];\n\n  const isNumberOfPortsEven = numPorts % 2 === 0;\n  const closestEven = numPorts - (isNumberOfPortsEven ? 0 : 1);\n\n  let startAt = 0;\n  let length = MAX_PORTS;\n  if (numPorts > MAX_PORTS) {\n    startAt = Math.floor((MAX_PORTS - closestEven) / 2);\n    length = closestEven + 1;\n  }\n\n  const result = [...Array(length).keys()].map(i => i + startAt + 1);\n  if (isNumberOfPortsEven) {\n    result.splice(numPorts / 2, 1);\n  }\n  return result;\n};\n\nconst PortExtensionBar = styled.div`\n  position: absolute;\n  left: ${props => props.offsetX}px;\n  height: ${props => props.size}px;\n  width: 2px;\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  ${props => `${props.place}: 88px;`}\n`;\n\nexport const PortExtension = ({\n  selected,\n  portPositions,\n  offsetX = 1,\n}) => {\n  const lastPortPosition = portPositions[portPositions.length - 1];\n  if (lastPortPosition <= MAX_PORTS) return null;\n\n  const size = (lastPortPosition - MAX_PORTS) * 15;\n\n  return (\n    <>\n      <PortExtensionBar\n        selected={selected}\n        size={size}\n        place=\"top\"\n        offsetX={offsetX}\n      />\n      <PortExtensionBar\n        selected={selected}\n        size={size}\n        place=\"bottom\"\n        offsetX={offsetX}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90 }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        transform=\"scale(0.26458333)\"\n        d=\"M 2 2 L 2 45 A 42.999999 42.999999 0 0 0 2 45.271484 L 2 88 L 45 88 A 42.999999 42.999999 0 0 0 88 45 A 42.999999 42.999999 0 0 0 45 2 L 44.728516 2 L 2 2 z \"\n      />\n    </g>\n  </svg>\n);\n\nconst AndWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.isSelected()}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n      />\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          model={model}\n          port={port}\n          engine={engine}\n          position={portPositions[i]}\n        />\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default AndWidget;\n","import React from 'react';\n\nimport { Shape } from './AndWidget';\n\nconst AndIcon = () => <Shape size={30} />;\n\nexport default AndIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './AndIcon';\nimport model from './AndModel';\nimport widget from './AndWidget';\n\nexport default new Component({\n  type: 'And',\n  name: 'And',\n  description: 'Logic \"and\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class AndModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, DATA_BITS);\n    }\n    this.addOutputPort('out', DATA_BITS);\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input).reduce((acc, curr) => acc & curr),\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'out') return 'right: -5px;';\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30 }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n    </g>\n  </svg>\n);\n\nconst BufferWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort\n        name=\"in\"\n        model={model}\n        port={model.getPort('in')}\n        engine={engine}\n      />\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default BufferWidget;\n","import React from 'react';\n\nimport { Shape } from './BufferWidget';\n\nconst BufferIcon = () => <Shape size={30} />;\n\nexport default BufferIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './BufferIcon';\nimport model from './BufferModel';\nimport widget from './BufferWidget';\n\nexport default new Component({\n  type: 'Buffer',\n  name: 'Buffer',\n  description: 'Simple buffer',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class BufferModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    this.addInputPort('in', DATA_BITS);\n    this.addOutputPort('out', DATA_BITS);\n  }\n\n  step(input) {\n    return { out: input.in };\n  }\n}\n","import React, { useEffect, useRef } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n\n  transition: 100ms linear;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  outline: none;\n\n  border: 2px solid rgba(0, 0, 0, 0.3);\n  background: linear-gradient(\n    225deg,\n    rgba(238, 0, 0, 1) 0%,\n    rgba(125, 20, 20, 1) 100%\n  );\n\n  :active {\n    border: 2px solid rgba(255, 255, 255, 0.5);\n    background: linear-gradient(\n      225deg,\n      rgba(125, 20, 20, 1) 0%,\n      rgba(238, 0, 0, 1) 100%\n    );\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  right: -7px;\n`;\n\nconst ButtonWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const buttonRef = useRef();\n\n  const handleReleaseAway = event => {\n    if (\n      buttonRef.current &&\n      !buttonRef.current.contains(event.target)\n    ) {\n      model.onRelease();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mouseup', handleReleaseAway);\n    return () =>\n      document.removeEventListener('mouseup', handleReleaseAway);\n  });\n\n  return (\n    <Shape selected={selected}>\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Button\n        ref={buttonRef}\n        onMouseDown={() => model.onClick()}\n        onMouseUp={() => model.onRelease()}\n      />\n    </Shape>\n  );\n};\n\nexport default ButtonWidget;\n","import React from 'react';\n\nimport { Shape, Button } from './ButtonWidget';\n\nconst ButtonIcon = () => (\n  <Shape>\n    <Button as=\"div\" />\n  </Shape>\n);\n\nexport default ButtonIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ButtonIcon';\nimport model from './ButtonModel';\nimport widget from './ButtonWidget';\n\nexport default new Component({\n  type: 'Button',\n  name: 'Button',\n  description: 'Simple button',\n  group: 'Input & output',\n  configurations: [],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ButtonModel extends BaseModel {\n  initialize() {\n    this.addOutputPort('out');\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n\n  onClick() {\n    this.emit({ out: 1 });\n  }\n\n  onRelease() {\n    this.emit({ out: 0 });\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: -7px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nconst Body = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    `rgba(62, 62, 62, ${props.selected ? 0.5 : 1})`};\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px black;\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 15px;\n`;\n\nconst Hole = styled.div`\n  width: 8px;\n  height: 8px;\n\n  background: black;\n  border-radius: 4px;\n`;\n\nexport const Shape = ({ selected, isActive, children }) => (\n  <Body selected={selected} isActive={isActive}>\n    <Hole />\n    {children}\n  </Body>\n);\n\nexport const BuzerWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Shape selected={selected} isActive={model.isActive()}>\n      <PositionedPort\n        name=\"in\"\n        model={model}\n        port={model.getPort('in')}\n        engine={engine}\n      />\n    </Shape>\n  );\n};\n\nexport default BuzerWidget;\n","import React from 'react';\n\nimport { Shape } from './BuzzerWidget';\n\nconst BuzzerIcon = () => <Shape color=\"#00ff00\" />;\n\nexport default BuzzerIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './BuzzerIcon';\nimport model from './BuzzerModel';\nimport widget from './BuzzerWidget';\n\nexport default new Component({\n  type: 'Buzzer',\n  name: 'Buzzer',\n  description: 'Outputs sound at a give frequency',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'FREQUENCY_HZ',\n      type: 'number',\n      default: 300,\n      label: 'Sound frequency (in Hertz)',\n      min: 0,\n      max: 20000,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum frequency is ${this.min} Hz`;\n        if (value > this.max)\n          return `Maximum frequency is ${this.max} Hz`;\n        return null;\n      },\n    },\n    {\n      name: 'WAVEFORM',\n      type: 'select',\n      default: 'sine',\n      label: 'Waveform',\n      options: [\n        {\n          label: 'Sine',\n          value: 'sine',\n        },\n        {\n          label: 'Square',\n          value: 'square',\n        },\n        {\n          label: 'Sawtooth',\n          value: 'sawtooth',\n        },\n        {\n          label: 'Triangle',\n          value: 'triangle',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class BuzzerModel extends BaseModel {\n  initialize(configurations) {\n    this.frequencyHz = Number(configurations.FREQUENCY_HZ);\n    this.waveform = configurations.WAVEFORM;\n\n    this.addInputPort('in');\n  }\n\n  onSimulationStart() {\n    this.audio = this.createAudio(this.frequencyHz, this.waveform);\n  }\n\n  onSimulationPause() {\n    this.audio.pause();\n  }\n\n  step(input) {\n    if (input.in) {\n      this.audio.play();\n    } else {\n      this.audio.pause();\n    }\n  }\n\n  isActive() {\n    const input = this.getPort('in').getValue() || 0;\n\n    if (input === 0) return false;\n    return true;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  right: -7px;\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n\n  transition: 100ms linear;\n`;\n\nexport const Decoration = ({\n  output,\n  color,\n  periodMs,\n  animateTransition,\n}) => (\n  <svg\n    width={30}\n    height={30}\n    viewBox=\"0 0 7.9374997 7.9375003\"\n    strokeWidth=\"1\"\n  >\n    <path\n      stroke={color}\n      strokeWidth={0.75}\n      fill=\"none\"\n      style={{\n        transform: output === 0 ? 'rotateX(180deg)' : 'none',\n        transformOrigin: 'center',\n        transition: animateTransition\n          ? `calc(${periodMs}ms / 2 * 0.4) ease-in-out`\n          : 'none',\n      }}\n      d=\"M 1.8683545,4.4337648 V 6.14192 H 4.0062447 V 1.79558 h 2.0629007 v 1.7578226\"\n    />\n  </svg>\n);\n\nconst ClockWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n    periodMs,\n  } = model;\n\n  const out = model.getPort('out');\n\n  return (\n    <Shape selected={selected}>\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={out}\n        engine={engine}\n      />\n      <Decoration\n        output={out.getValue()}\n        color={out.getColor()}\n        periodMs={periodMs}\n        animateTransition={periodMs >= 500}\n      />\n    </Shape>\n  );\n};\n\nexport default ClockWidget;\n","import React from 'react';\n\nimport { Shape, Decoration } from './ClockWidget';\n\nconst ClockIcon = () => (\n  <Shape>\n    <Decoration color=\"var(--port-unconnected)\" />\n  </Shape>\n);\n\nexport default ClockIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ClockIcon';\nimport model from './ClockModel';\nimport widget from './ClockWidget';\n\nexport default new Component({\n  type: 'Clock',\n  name: 'Clock',\n  description: 'Generates a clock signal',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'FREQUENCY_HZ',\n      type: 'number',\n      default: 1,\n      label: 'Frequency (in Hz)',\n      step: 0.25,\n      min: 0.25,\n      max: 1000,\n      validate(value) {\n        if (value < this.min)\n          return `Frequency should be greater than ${this.min} Hz`;\n        if (value > this.max)\n          return `Frequency should be lesser than ${this.max} Hz`;\n        if (value % this.step !== 0)\n          return `Frequency should be divisible by ${this.step} Hz`;\n        return null;\n      },\n    },\n    {\n      name: 'HIGH_DURATION',\n      type: 'number',\n      default: 1,\n      label: 'High duration (in cycles)',\n      min: 1,\n      validate(value) {\n        if (value < this.min)\n          return `High duration should be greater than ${this.min}`;\n        return null;\n      },\n    },\n    {\n      name: 'LOW_DURATION',\n      type: 'number',\n      default: 1,\n      label: 'Low duration (in cycles)',\n      min: 1,\n      validate(value) {\n        if (value < this.min)\n          return `Low duration should be greater than ${this.min}`;\n        return null;\n      },\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ClockModel extends BaseModel {\n  initialize(configurations) {\n    this.addOutputPort('out');\n\n    this.configurations = configurations;\n\n    this.output = 0;\n    this.emitInterval = null;\n    this.periodMs = 1000 / this.configurations.FREQUENCY_HZ;\n    this.highCount = 0;\n    this.lowCount = 0;\n  }\n\n  onSimulationStart() {\n    this.emit({ out: this.output });\n\n    this.emitInterval = setInterval(() => {\n      this.output = this.getNextOutput();\n      this.emit({ out: this.output });\n    }, this.periodMs / 2);\n  }\n\n  getNextOutput() {\n    const { HIGH_DURATION, LOW_DURATION } = this.configurations;\n\n    if (this.output === 1) {\n      this.highCount += 1;\n\n      if (this.highCount === HIGH_DURATION) {\n        this.highCount = 0;\n        return 0;\n      }\n\n      return 1;\n    }\n\n    this.lowCount += 1;\n\n    if (this.lowCount === LOW_DURATION) {\n      this.lowCount = 0;\n      return 1;\n    }\n\n    return 0;\n  }\n\n  onSimulationPause() {\n    clearInterval(this.emitInterval);\n  }\n\n  onSimulationStop() {\n    clearInterval(this.emitInterval);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'selection') return 'left: 10px;';\n    return 'right: -5px;';\n  }};\n  ${props => {\n    if (props.name === 'selection') return 'bottom: -5px;';\n    return `top: ${(props.position || 0) - 5}px;`;\n  }};\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => (props.outputNumber + 2) * 15}px;\n`;\n\nexport const Shape = ({ selected, outputNumber, icon }) => {\n  const height = (outputNumber + 2) * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={icon ? 30 : height}\n      width={icon ? 15 : 30}\n      fill={\n        selected ? 'var(--body-selected)' : 'var(--body-unselected)'\n      }\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"round\"\n      strokeWidth=\"2\"\n    >\n      <path d={`M0,15 L0,${height - 15} L30,${height} L30,0 Z`} />\n      <path d={`M15,${height - 7.5} L15,${height}`} />\n    </svg>\n  );\n};\n\nconst DemuxWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const outputPorts = Object.values(model.getOutputPorts());\n  const { outputNumber } = model;\n\n  return (\n    <Wrapper outputNumber={outputNumber}>\n      <PositionedPort\n        name=\"in\"\n        model={model}\n        port={model.getPort('in')}\n        engine={engine}\n        position={((outputNumber + 2) * 15) / 2}\n      />\n      <PositionedPort\n        name=\"selection\"\n        model={model}\n        port={model.getPort('selection')}\n        engine={engine}\n      />\n      {outputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          model={model}\n          port={port}\n          engine={engine}\n          position={(i + 1) * 15}\n        />\n      ))}\n      <Shape selected={selected} outputNumber={outputNumber} />\n    </Wrapper>\n  );\n};\n\nexport default DemuxWidget;\n","import React from 'react';\n\nimport { Shape } from './DemuxWidget';\n\nconst DemuxIcon = () => <Shape dataBits={1} outputNumber={2} icon />;\n\nexport default DemuxIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './DemuxIcon';\nimport model from './DemuxModel';\nimport widget from './DemuxWidget';\n\nexport default new Component({\n  type: 'Demux',\n  name: 'Demux',\n  description: 'Demultiplexer',\n  group: 'Plexers',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bits',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'OUTPUT_NUMBER',\n      type: 'select',\n      default: '2',\n      label: 'Number of outputs',\n      options: [\n        {\n          label: '2',\n          value: '2',\n        },\n        {\n          label: '4',\n          value: '4',\n        },\n        {\n          label: '16',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class DemuxModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n    this.outputNumber = Number(configurations.OUTPUT_NUMBER);\n\n    this.addInputPort('in', DATA_BITS);\n    this.addInputPort('selection', Math.log2(this.outputNumber));\n\n    for (let i = 0; i < this.outputNumber; i += 1) {\n      this.addOutputPort(`out${i}`, DATA_BITS);\n    }\n  }\n\n  step(input) {\n    return {\n      ...Object.fromEntries(\n        [...new Array(this.outputNumber)].map((_, i) => [\n          `out${i}`,\n          0,\n        ]),\n      ),\n      [`out${input.selection}`]: input.in,\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: 50%;\n  top: -5px;\n  transform: translateX(-50%);\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n`;\n\nexport const Shape = ({ selected, dataBits = 1 }) => {\n  return (\n    <svg\n      viewBox=\"0 0 30 30\"\n      width=\"30\"\n      height=\"30\"\n      fill=\"none\"\n      stroke={selected ? 'var(--value-5)' : 'var(--value-0)'}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <polyline\n        points=\"15 0 15 15\"\n        strokeWidth={`var(--link-${dataBits}-bit-width)`}\n        strokeLinecap=\"butt\"\n      />\n      <polyline points=\"7 15 23 15\" />\n      <polyline points=\"7 15 2 25\" />\n      <polyline points=\"15 15 9 25\" />\n      <polyline points=\"23 15 17 25\" />\n    </svg>\n  );\n};\n\nconst GroundWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper>\n      <Shape selected={selected} dataBits={model.dataBits} />\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n    </Wrapper>\n  );\n};\n\nexport default GroundWidget;\n","import React from 'react';\n\nimport { Shape } from './GroundWidget';\n\nconst GroundIcon = () => <Shape />;\n\nexport default GroundIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './GroundIcon';\nimport model from './GroundModel';\nimport widget from './GroundWidget';\n\nexport default new Component({\n  type: 'Ground',\n  name: 'Ground',\n  description: 'Ground (GND) component',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class GroundModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.addOutputPort('out', this.dataBits);\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst SHAPE_SIZES = {\n  1: { width: 30, height: 30 },\n  2: { width: 60, height: 30 },\n  4: { width: 120, height: 30 },\n  8: { width: 120, height: 60 },\n  16: { width: 240, height: 60 },\n};\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  right: -7px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => SHAPE_SIZES[props.dataBits].width}px;\n  height: ${props => SHAPE_SIZES[props.dataBits].height}px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 20px;\n`;\n\nexport const PinContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  flex-wrap: wrap-reverse;\n  justify-content: space-evenly;\n  align-items: center;\n\n  max-width: 215px;\n`;\n\nexport const Pin = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 20px;\n  height: 20px;\n  margin: 2px;\n\n  background: ${props =>\n    props.value === 1 ? 'var(--value-on)' : 'var(--value-off)'};\n  border: 2px solid\n    ${props =>\n      props.value === 1 ? 'var(--value-off)' : 'var(--value-on)'};\n  border-radius: 100%;\n\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\n  font-family: monospace;\n\n  transition: 100ms linear;\n`;\n\nconst InputWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n    configurations: { DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n\n  return (\n    <Shape selected={selected} dataBits={dataBits}>\n      <PinContainer>\n        {[...new Array(dataBits)].map((_, index) => {\n          const value = model.getBitAt(index);\n\n          return (\n            <Pin\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              onClick={() => model.onClick(index)}\n              value={value}\n            >\n              {value}\n            </Pin>\n          );\n        })}\n      </PinContainer>\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n    </Shape>\n  );\n};\n\nexport default InputWidget;\n","import React from 'react';\n\nimport { Shape, Pin } from './InputWidget';\n\nconst InputIcon = () => (\n  <Shape dataBits={1}>\n    <Pin as=\"div\" value={0} />\n  </Shape>\n);\n\nexport default InputIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './InputIcon';\nimport model from './InputModel';\nimport widget from './InputWidget';\n\nexport default new Component({\n  type: 'Input',\n  name: 'Input pin',\n  description: 'Simple input pin',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class InputModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    this.addOutputPort('out', DATA_BITS);\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n\n  onClick(index) {\n    const mask = 0b1 << index;\n\n    this.emit({ out: this.getOutput() ^ mask });\n  }\n\n  getOutput() {\n    return this.getPort('out').getValue() || 0;\n  }\n\n  getBitAt(index) {\n    const mask = 0b1 << index;\n    const result = this.getOutput() & mask;\n\n    return result > 0 ? 1 : 0;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return `right: -5px; top: -5px`;\n    return `left: -5px; bottom: ${props.position - 5}px;`;\n  }}\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => 15 * props.dataBits}px;\n`;\n\nexport const Shape = ({ selected, dataBits }) => {\n  const height = dataBits * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={height}\n      width=\"30\"\n      fill=\"none\"\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"butt\"\n      strokeWidth=\"2\"\n    >\n      <path strokeWidth=\"4\" d={`M30,0 L15,15 L15,${height}`} />\n      {[...new Array(dataBits)]\n        .map((_, index) => index)\n        .map(index => {\n          const bitHeight = height - index * 15;\n\n          return (\n            <path\n              key={index}\n              d={`M15,${bitHeight} L0,${bitHeight}`}\n            />\n          );\n        })}\n    </svg>\n  );\n};\n\nconst JoinerWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n    configurations: { DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n  const inputPorts = Object.values(model.getInputPorts());\n\n  return (\n    <Wrapper dataBits={dataBits}>\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          model={model}\n          port={port}\n          engine={engine}\n          position={i * 15}\n        />\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape selected={selected} dataBits={dataBits} />\n    </Wrapper>\n  );\n};\n\nexport default JoinerWidget;\n","import React from 'react';\n\nimport { Shape } from './JoinerWidget';\n\nconst JoinerIcon = () => <Shape dataBits={2} />;\n\nexport default JoinerIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './JoinerIcon';\nimport model from './JoinerModel';\nimport widget from './JoinerWidget';\n\nexport default new Component({\n  type: 'Joiner',\n  name: 'Joiner',\n  description: 'Joins N 1 bit wires into one N bit wire',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '2',\n      label: 'Output data bits',\n      options: [\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class JoinerModel extends BaseModel {\n  initialize(configurations) {\n    this.bits = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < this.bits; i += 1) {\n      this.addInputPort(`in${i}`);\n    }\n    this.addOutputPort('out', this.bits);\n  }\n\n  step(input) {\n    return {\n      out: [...new Array(this.bits)]\n        .map((_, index) => input[`in${index}`])\n        .reduce((acc, curr, index) => acc + curr * 2 ** index, 0),\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: -7px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    `${props.color}${props.selected ? '80' : 'ff'}`};\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px\n    ${props => props.color};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 15px;\n`;\n\nconst LedWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Shape\n      selected={selected}\n      color={model.getColor()}\n      isActive={model.isActive()}\n    >\n      <PositionedPort\n        name=\"in\"\n        model={model}\n        port={model.getPort('in')}\n        engine={engine}\n      />\n    </Shape>\n  );\n};\n\nexport default LedWidget;\n","import React from 'react';\n\nimport { Shape } from './LedWidget';\n\nconst LedIcon = () => <Shape color=\"#00ff00\" />;\n\nexport default LedIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './LedIcon';\nimport model from './LedModel';\nimport widget from './LedWidget';\n\nexport default new Component({\n  type: 'Led',\n  name: 'LED',\n  description: 'Simple LED component',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'ACTIVE_WHEN',\n      type: 'select',\n      default: 'high',\n      label: 'Active when',\n      options: [\n        {\n          label: 'High',\n          value: 'high',\n        },\n        {\n          label: 'Low',\n          value: 'low',\n        },\n      ],\n    },\n    {\n      name: 'ON_COLOR',\n      type: 'select',\n      default: '#00ff00',\n      label: 'On color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff0000',\n        },\n        {\n          label: 'Green',\n          value: '#00ff00',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff',\n        },\n        {\n          label: 'White',\n          value: '#ffffff',\n        },\n        {\n          label: 'Black',\n          value: '#000000',\n        },\n      ],\n    },\n    {\n      name: 'OFF_COLOR',\n      type: 'select',\n      default: '#000000',\n      label: 'Off color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff0000',\n        },\n        {\n          label: 'Green',\n          value: '#00ff00',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff',\n        },\n        {\n          label: 'White',\n          value: '#ffffff',\n        },\n        {\n          label: 'Black',\n          value: '#000000',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class LedModel extends BaseModel {\n  initialize(configurations) {\n    this.activeWhen = configurations.ACTIVE_WHEN;\n    this.colors = {\n      on: configurations.ON_COLOR,\n      off: configurations.OFF_COLOR,\n    };\n\n    this.addInputPort('in');\n  }\n\n  isActive() {\n    const input = this.getPort('in').getValue() || 0;\n\n    if (this.activeWhen === 'high') {\n      if (input === 0) return false;\n      return true;\n    }\n\n    if (input === 0) return true;\n    return false;\n  }\n\n  getColor() {\n    if (this.isActive()) return this.colors.on;\n    return this.colors.off;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'out') return 'right: -5px;';\n    if (props.name === 'selection') return 'left: 10px;';\n    return 'left: -5px;';\n  }};\n  ${props => {\n    if (props.name === 'selection') return 'bottom: -5px;';\n    return `top: ${(props.position || 0) - 5}px;`;\n  }};\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => (props.inputNumber + 2) * 15}px;\n`;\n\nexport const Shape = ({ selected, inputNumber, icon }) => {\n  const height = (inputNumber + 2) * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={icon ? 30 : height}\n      width={icon ? 15 : 30}\n      fill={\n        selected ? 'var(--body-selected)' : 'var(--body-unselected)'\n      }\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"round\"\n      strokeWidth=\"2\"\n    >\n      <path d={`M0,0 L0,${height} L30,${height - 15} L30,15 Z`} />\n      <path d={`M15,${height - 7.5} L15,${height}`} />\n    </svg>\n  );\n};\n\nconst MuxWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const inputNumber = inputPorts.length;\n\n  return (\n    <Wrapper inputNumber={inputNumber}>\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          model={model}\n          port={port}\n          engine={engine}\n          position={(i + 1) * 15}\n        />\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n        position={((inputNumber + 1) * 15) / 2}\n      />\n      <Shape selected={selected} inputNumber={inputNumber} />\n    </Wrapper>\n  );\n};\n\nexport default MuxWidget;\n","import React from 'react';\n\nimport { Shape } from './MuxWidget';\n\nconst MuxIcon = () => <Shape dataBits={1} inputNumber={2} icon />;\n\nexport default MuxIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './MuxIcon';\nimport model from './MuxModel';\nimport widget from './MuxWidget';\n\nexport default new Component({\n  type: 'Mux',\n  name: 'Mux',\n  description: 'Multiplexer',\n  group: 'Plexers',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bits',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'INPUT_NUMBER',\n      type: 'select',\n      default: '2',\n      label: 'Number of inputs',\n      options: [\n        {\n          label: '2',\n          value: '2',\n        },\n        {\n          label: '4',\n          value: '4',\n        },\n        {\n          label: '16',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class MuxModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n    const INPUT_NUMBER = Number(configurations.INPUT_NUMBER);\n\n    for (let i = 0; i < INPUT_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, DATA_BITS);\n    }\n\n    this.addInputPort('selection', Math.log2(INPUT_NUMBER));\n    this.addOutputPort('out', DATA_BITS);\n  }\n\n  step(input) {\n    return { out: input[`in${input.selection}`] };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 105px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90 }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"0 0 27.781249 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform=\"scale(0.26458333)\">\n      <path d=\"m 2,2 v 43 a 42.999999,42.999999 0 0 0 0,0.271484 V 88 H 45 A 42.999999,42.999999 0 0 0 88,45 42.999999,42.999999 0 0 0 45,2 h -0.271484 z\" />\n      <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n    </g>\n  </svg>\n);\n\nconst NandWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.isSelected()}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n      />\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          model={model}\n          port={port}\n          engine={engine}\n          position={portPositions[i]}\n        />\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default NandWidget;\n","import React from 'react';\n\nimport { Shape } from './NandWidget';\n\nconst NandIcon = () => <Shape size={30} />;\n\nexport default NandIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NandIcon';\nimport model from './NandModel';\nimport widget from './NandWidget';\n\nexport default new Component({\n  type: 'Nand',\n  name: 'Nand',\n  description: 'Logic \"not and\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class NandModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, DATA_BITS);\n    }\n    this.addOutputPort('out', DATA_BITS);\n  }\n\n  step(input) {\n    return {\n      out: ~Object.values(input).reduce((acc, curr) => acc & curr),\n    };\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 105px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"0 0 27.781249 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform=\"scale(0.26458333)\">\n      <path d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 45 C 68.748245,88.000001 88.005576,45.650843 88,45 87.994195,44.322314 68.748245,1.9999989 45,2 h -0.271484 z\" />\n      <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst NorWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            model={model}\n            port={port}\n            engine={engine}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default NorWidget;\n","import React from 'react';\n\nimport { Shape } from './NorWidget';\n\nconst NorIcon = () => <Shape size={30} />;\n\nexport default NorIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NorIcon';\nimport model from './NorModel';\nimport widget from './NorWidget';\n\nexport default new Component({\n  type: 'Nor',\n  name: 'Nor',\n  description: 'Logic \"not or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class NorModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, DATA_BITS);\n    }\n    this.addOutputPort('out', DATA_BITS);\n  }\n\n  step(input) {\n    return {\n      out: ~Object.values(input).reduce((acc, curr) => acc | curr),\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 45px;\n  height: 30px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'out') return 'right: -5px;';\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30 }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"11 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n      <circle r=\"8\" cy=\"22\" cx=\"51\" />\n    </g>\n  </svg>\n);\n\nconst NotWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort\n        name=\"in\"\n        model={model}\n        port={model.getPort('in')}\n        engine={engine}\n      />\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default NotWidget;\n","import React from 'react';\n\nimport { Shape } from './NotWidget';\n\nconst NotIcon = () => <Shape size={30} />;\n\nexport default NotIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NotIcon';\nimport model from './NotModel';\nimport widget from './NotWidget';\n\nexport default new Component({\n  type: 'Not',\n  name: 'Not',\n  description: 'Negation component',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class BufferModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    this.addInputPort('in', DATA_BITS);\n    this.addOutputPort('out', DATA_BITS);\n  }\n\n  step(input) {\n    return {\n      out: ~input.in,\n    };\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 45 C 68.748245,88.000001 88.005576,45.650843 88,45 87.994195,44.322314 68.748245,1.9999989 45,2 h -0.271484 z\"\n        transform=\"scale(0.26458333)\"\n      />\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst OrWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            model={model}\n            port={port}\n            engine={engine}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default OrWidget;\n","import React from 'react';\n\nimport { Shape } from './OrWidget';\n\nconst OrIcon = () => <Shape size={30} />;\n\nexport default OrIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './OrIcon';\nimport model from './OrModel';\nimport widget from './OrWidget';\n\nexport default new Component({\n  type: 'Or',\n  name: 'Or',\n  description: 'Logic \"or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class OrModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, DATA_BITS);\n    }\n    this.addOutputPort('out', DATA_BITS);\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input).reduce((acc, curr) => acc | curr),\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst SHAPE_SIZES = {\n  1: { width: 30, height: 30 },\n  2: { width: 60, height: 30 },\n  4: { width: 120, height: 30 },\n  8: { width: 120, height: 60 },\n  16: { width: 240, height: 60 },\n};\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: -7px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => {\n    if (props.format === 'BITS')\n      return SHAPE_SIZES[props.dataBits].width;\n\n    return SHAPE_SIZES[4].width;\n  }}px;\n  height: ${props => {\n    if (props.format === 'BITS')\n      return SHAPE_SIZES[props.dataBits].height;\n\n    return SHAPE_SIZES[4].height;\n  }}px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 20px;\n`;\n\nexport const PinContainer = styled.span`\n  display: flex;\n  flex-direction: row-reverse;\n  flex-wrap: wrap-reverse;\n  justify-content: space-evenly;\n  align-items: center;\n\n  max-width: 215px;\n`;\n\nexport const Pin = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 20px;\n  height: 20px;\n  margin: 2px;\n\n  background: ${props => {\n    if (props.value === 0) return 'var(--value-off)';\n    if (props.value === 1) return 'var(--value-on)';\n    return 'var(--value-error)';\n  }};\n  border: 2px solid\n    ${props => {\n      if (props.value === 0) return 'var(--value-on)';\n      if (props.value === 1) return 'var(--value-off)';\n      return 'black';\n    }};\n  border-radius: 100%;\n\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\n  font-family: monospace;\n\n  transition: 100ms linear;\n`;\n\nconst ErrorMessage = styled.span`\n  color: var(--value-error);\n  font-weight: bold;\n`;\n\nconst mapBits = model => {\n  const {\n    configurations: { DATA_BITS },\n  } = model;\n  const dataBits = Number(DATA_BITS);\n\n  return [...new Array(dataBits)].map((_, index) => {\n    const value = model.getBitAt(index);\n\n    return (\n      <Pin\n        // eslint-disable-next-line react/no-array-index-key\n        key={index}\n        value={value}\n      >\n        {value === 0 || value === 1 ? value : 'E'}\n      </Pin>\n    );\n  });\n};\n\nconst showAsNumber = (input, format) => {\n  if (input === 'error') return <ErrorMessage>ERROR</ErrorMessage>;\n\n  if (format === 'DECIMAL') return input;\n  if (format === 'HEXADECIMAL')\n    return `0x${input.toString(16).padStart(4, '0')}`;\n  return '';\n};\n\nconst OutputWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n    configurations: { OUTPUT_FORMAT, DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n\n  return (\n    <Shape\n      selected={selected}\n      format={OUTPUT_FORMAT}\n      dataBits={dataBits}\n    >\n      <PinContainer>\n        {OUTPUT_FORMAT === 'BITS'\n          ? mapBits(model)\n          : showAsNumber(model.getInput(), OUTPUT_FORMAT)}\n      </PinContainer>\n      <PositionedPort\n        name=\"in\"\n        model={model}\n        port={model.getPort('in')}\n        engine={engine}\n      />\n    </Shape>\n  );\n};\n\nexport default OutputWidget;\n","import React from 'react';\n\nimport { Shape, Pin } from './OutputWidget';\n\nconst OutputIcon = () => (\n  <Shape dataBits={1} format=\"BITS\">\n    <Pin as=\"div\" value={0} />\n  </Shape>\n);\n\nexport default OutputIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './OutputIcon';\nimport model from './OutputModel';\nimport widget from './OutputWidget';\n\nexport default new Component({\n  type: 'Output',\n  name: 'Output pin',\n  description: 'Simple output pin',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'OUTPUT_FORMAT',\n      type: 'select',\n      default: 'BITS',\n      label: 'Output format',\n      options: [\n        {\n          label: 'Bit by bit',\n          value: 'BITS',\n        },\n        {\n          label: 'Decimal number',\n          value: 'DECIMAL',\n        },\n        {\n          label: 'Hexadecimal number',\n          value: 'HEXADECIMAL',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class OutputModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    this.addInputPort('in', DATA_BITS);\n  }\n\n  getInput() {\n    return this.getPort('in').getValue() || 0;\n  }\n\n  getBitAt(index) {\n    const input = this.getInput();\n\n    if (input === 'error') return input;\n\n    const mask = 0b1 << index;\n    const result = this.getInput() & mask;\n\n    return result > 0 ? 1 : 0;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: 50%;\n  bottom: -5px;\n  transform: translateX(-50%);\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n`;\n\nexport const Shape = ({ selected, dataBits = 1 }) => {\n  return (\n    <svg\n      viewBox=\"0 0 30 30\"\n      width=\"30\"\n      height=\"30\"\n      fill=\"none\"\n      stroke={selected ? 'var(--value-5)' : 'var(--value-10)'}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <polyline\n        points=\"15 15 15 30\"\n        strokeWidth={`var(--link-${dataBits}-bit-width)`}\n        strokeLinecap=\"butt\"\n      />\n      <polyline\n        points=\"7 15 15 0 23 15 7 15\"\n        fill=\"var(--value-2)\"\n        fillOpacity={\n          selected\n            ? 'var(--unselected-opacity)'\n            : 'var(--selected-opacity)'\n        }\n      />\n    </svg>\n  );\n};\n\nconst PowerWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper>\n      <Shape selected={selected} dataBits={model.dataBits} />\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n    </Wrapper>\n  );\n};\n\nexport default PowerWidget;\n","import React from 'react';\n\nimport { Shape } from './PowerWidget';\n\nconst PowerIcon = () => <Shape />;\n\nexport default PowerIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './PowerIcon';\nimport model from './PowerModel';\nimport widget from './PowerWidget';\n\nexport default new Component({\n  type: 'Power',\n  name: 'Power',\n  description: 'Power (VCC) component',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class PowerModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.addOutputPort('out', this.dataBits);\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0b1111_1111_1111_1111 });\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => (props.name === 'in' ? 'left: -5px' : 'right: -5px')};\n  bottom: ${props => (props.position || 0) - 5}px;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => 15 * props.dataBits}px;\n`;\n\nexport const Shape = ({ selected, dataBits }) => {\n  const height = dataBits * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={height}\n      width=\"30\"\n      fill=\"none\"\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"butt\"\n      strokeWidth=\"2\"\n    >\n      <path\n        strokeWidth=\"4\"\n        d={`M0,${height} L15,${height - 15} L15,0`}\n      />\n      {[...new Array(dataBits)]\n        .map((_, index) => index + 1)\n        .map(index => {\n          const bitHeight = height - index * 15;\n\n          return (\n            <path\n              key={index}\n              d={`M15,${bitHeight} L30,${bitHeight}`}\n            />\n          );\n        })}\n    </svg>\n  );\n};\n\nconst SplitterWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n    configurations: { DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n  const outputPorts = Object.values(model.getOutputPorts());\n\n  return (\n    <Wrapper dataBits={dataBits}>\n      <PositionedPort\n        name=\"in\"\n        model={model}\n        port={model.getPort('in')}\n        engine={engine}\n      />\n      {outputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          model={model}\n          port={port}\n          engine={engine}\n          position={(i + 1) * 15}\n        />\n      ))}\n      <Shape selected={selected} dataBits={dataBits} />\n    </Wrapper>\n  );\n};\n\nexport default SplitterWidget;\n","import React from 'react';\n\nimport { Shape } from './SplitterWidget';\n\nconst SplitterIcon = () => <Shape dataBits={2} />;\n\nexport default SplitterIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './SplitterIcon';\nimport model from './SplitterModel';\nimport widget from './SplitterWidget';\n\nexport default new Component({\n  type: 'Splitter',\n  name: 'Splitter',\n  description: 'Split wire with N bits into N 1 bit wires',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '2',\n      label: 'Input data bits',\n      options: [\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class SplitterModel extends BaseModel {\n  initialize(configurations) {\n    this.bits = Number(configurations.DATA_BITS);\n\n    this.addInputPort('in', this.bits);\n    for (let i = 0; i < this.bits; i += 1) {\n      this.addOutputPort(`out${i}`);\n    }\n  }\n\n  getBitAt(input, index) {\n    const mask = 0b1 << index;\n    const result = input & mask;\n\n    return result > 0 ? 1 : 0;\n  }\n\n  step(input) {\n    return Object.fromEntries(\n      [...new Array(this.bits)].map((_, index) => [\n        `out${index}`,\n        this.getBitAt(input.in, index),\n      ]),\n    );\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst SEGMENTS = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'dp'];\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: ${props => props.position.horizontal}px;\n  top: ${props => props.position.vertical}px;\n  transform: translateY(-50%);\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => (props.icon ? 23 : 75)}px;\n  height: ${props => (props.icon ? 36 : 90)}px;\n\n  background: ${props => `#ffffff${props.selected ? '80' : 'ff'}`};\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px\n    ${props => props.color};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 5px;\n`;\n\nexport const Shape = ({ segments, selected, icon }) => (\n  <svg\n    width={icon ? 18 : 50}\n    height={icon ? 36 : 90}\n    viewBox={icon ? '-7 0 60 90' : '0 0 50 90'}\n    fill=\"none\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    {/* A */}\n    <polyline\n      points=\"5 18 11 20 32 20 35 14 9 14\"\n      fill={`${segments.a}${selected ? '80' : 'ff'}`}\n    />\n    {/* B */}\n    <polyline\n      points=\"37 14 41 20 39 42 37 44 33 39 34 20\"\n      fill={`${segments.b}${selected ? '80' : 'ff'}`}\n    />\n    {/* C */}\n    <polyline\n      points=\"37 46 38 47 36 71 31 76 29 69 31 51\"\n      fill={`${segments.c}${selected ? '80' : 'ff'}`}\n    />\n    {/* D */}\n    <polyline\n      points=\"0 72 7 69 27 69 29 76 4 76\"\n      fill={`${segments.d}${selected ? '80' : 'ff'}`}\n    />\n    {/* E */}\n    <polyline\n      points=\"4 46 8 51 7 67 0 70 2 47\"\n      fill={`${segments.e}${selected ? '80' : 'ff'}`}\n    />\n    {/* F */}\n    <polyline\n      points=\"5 20 11 22 10 39 4 44 3 42\"\n      fill={`${segments.f}${selected ? '80' : 'ff'}`}\n    />\n    {/* G */}\n    <polyline\n      points=\"6 45 9 48 31 48 35 45 32 41 11 41\"\n      fill={`${segments.g}${selected ? '80' : 'ff'}`}\n    />\n    {/* DP */}\n    <circle\n      r=\"5\"\n      cx=\"45\"\n      cy=\"71\"\n      fill={`${segments.dp}${selected ? '80' : 'ff'}`}\n    />\n  </svg>\n);\n\nconst LedWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <Shape\n        selected={selected}\n        segments={SEGMENTS.reduce(\n          (prev, segment) => ({\n            ...prev,\n            [segment]: model.getColor(segment),\n          }),\n          {},\n        )}\n      />\n      {SEGMENTS.map(segment => (\n        <PositionedPort\n          key={segment}\n          name={segment}\n          model={model}\n          position={model.getPositionForSegment(segment)}\n          port={model.getPort(segment)}\n          engine={engine}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default LedWidget;\n","import React from 'react';\n\nimport { Wrapper, Shape } from './SsdWidget';\n\nconst SsdIcon = () => (\n  <Wrapper icon>\n    <Shape\n      icon\n      segments={{\n        a: '#ff0000',\n        b: '#ff0000',\n        c: '#ff0000',\n        d: '#ff0000',\n        e: '#ff0000',\n        f: '#ff0000',\n        g: '#ff0000',\n        dp: '#ff0000',\n      }}\n    />\n  </Wrapper>\n);\n\nexport default SsdIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './SsdIcon';\nimport model from './SsdModel';\nimport widget from './SsdWidget';\n\nexport default new Component({\n  type: 'Ssd',\n  name: 'SSD',\n  description: 'Seven segments display',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'ACTIVE_WHEN',\n      type: 'select',\n      default: 'high',\n      label: 'Active when',\n      options: [\n        {\n          label: 'High',\n          value: 'high',\n        },\n        {\n          label: 'Low',\n          value: 'low',\n        },\n      ],\n    },\n    {\n      name: 'ON_COLOR',\n      type: 'select',\n      default: '#ff0000',\n      label: 'On color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff0000',\n        },\n        {\n          label: 'Green',\n          value: '#00ff00',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff',\n        },\n        {\n          label: 'White',\n          value: '#ffffff',\n        },\n        {\n          label: 'Black',\n          value: '#000000',\n        },\n      ],\n    },\n    {\n      name: 'OFF_COLOR',\n      type: 'select',\n      default: '#000000',\n      label: 'Off color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff0000',\n        },\n        {\n          label: 'Green',\n          value: '#00ff00',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff',\n        },\n        {\n          label: 'White',\n          value: '#ffffff',\n        },\n        {\n          label: 'Black',\n          value: '#000000',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class LedModel extends BaseModel {\n  initialize(configurations) {\n    this.activeWhen = configurations.ACTIVE_WHEN;\n    this.colors = {\n      on: configurations.ON_COLOR,\n      off: configurations.OFF_COLOR,\n    };\n\n    this.addInputPort('a');\n    this.addInputPort('b');\n    this.addInputPort('c');\n    this.addInputPort('d');\n    this.addInputPort('e');\n    this.addInputPort('f');\n    this.addInputPort('g');\n    this.addInputPort('dp');\n  }\n\n  isActive(segment) {\n    const input = this.getPort(segment).getValue() || 0;\n\n    if (this.activeWhen === 'high') {\n      if (input === 0) return false;\n      return true;\n    }\n\n    if (input === 0) return true;\n    return false;\n  }\n\n  getPositionForSegment(segment) {\n    const POSITIONS = {\n      a: {\n        vertical: 1,\n        horizontal: 3,\n      },\n      b: {\n        vertical: 1,\n        horizontal: 4,\n      },\n      c: {\n        vertical: 2,\n        horizontal: 3,\n      },\n      d: {\n        vertical: 2,\n        horizontal: 2,\n      },\n      e: {\n        vertical: 2,\n        horizontal: 1,\n      },\n      f: {\n        vertical: 1,\n        horizontal: 2,\n      },\n      g: {\n        vertical: 1,\n        horizontal: 1,\n      },\n      dp: {\n        vertical: 2,\n        horizontal: 4,\n      },\n    };\n\n    const position = POSITIONS[segment];\n\n    return {\n      horizontal: 8 + 15 * (position.horizontal - 1),\n      vertical: position.vertical === 1 ? -2 : 88,\n    };\n  }\n\n  getColor(segment) {\n    if (this.isActive(segment)) return this.colors.on;\n    return this.colors.off;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  right: -7px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 45px;\n  height: 30px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 20px;\n`;\n\nexport const Switch = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 24px;\n  margin: 2px;\n\n  background: #848484;\n  border: 2px solid #313131;\n  border-radius: 15px;\n\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\n  font-family: monospace;\n`;\n\nexport const SwitchValue = styled.div`\n  transform: ${props =>\n    props.value === 1 ? 'translateX(6px)' : 'translateX(-6px)'};\n\n  width: 15px;\n  height: 15px;\n\n  border-radius: 100%;\n  transition: 100ms linear;\n  background: black;\n`;\n\nconst SwitchWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n    configurations: { DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n\n  return (\n    <Shape selected={selected} dataBits={dataBits}>\n      <Switch onClick={() => model.onClick()}>\n        <SwitchValue value={model.getOutput()} />\n      </Switch>\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n    </Shape>\n  );\n};\n\nexport default SwitchWidget;\n","import React from 'react';\n\nimport { Shape, Switch, SwitchValue } from './SwitchWidget';\n\nconst SwitchIcon = () => (\n  <Shape>\n    <Switch as=\"div\">\n      <SwitchValue value={0} />\n    </Switch>\n  </Shape>\n);\n\nexport default SwitchIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './SwitchIcon';\nimport model from './SwitchModel';\nimport widget from './SwitchWidget';\n\nexport default new Component({\n  type: 'Switch',\n  name: 'Switch',\n  description: 'On/off switch',\n  group: 'Input & output',\n  configurations: [],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class SwitchModel extends BaseModel {\n  initialize() {\n    this.addOutputPort('out');\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n\n  onClick(index) {\n    const mask = 0b1 << index;\n\n    this.emit({ out: this.getOutput() ^ mask });\n  }\n\n  getOutput() {\n    return this.getPort('out').getValue() || 0;\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 105px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"0 0 27.781249 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        fill=\"none\"\n        style={{\n          transform:\n            'scale(0.284583, 0.284583) translate(-1px, -3px)',\n        }}\n        d=\"m 11.926664,1.1161165 c 5.50133,9.5176855 9.663162,25.9796645 9.66318,42.6065395 m 0,0 c 1.62e-4,18.330222 -4.950245,36.216284 -11.386335,45.249616\"\n      />\n      <g transform=\"scale(0.26458333)\">\n        <path\n          d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 37.875 c 23.748245,0 43.005576,-42.349157 43,-43 -0.0058,-0.677686 -19.251755,-43 -43,-43 h -0.271484 z\"\n          transform=\"translate(7)\"\n        />\n        <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n      </g>\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst XnorWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            model={model}\n            port={port}\n            engine={engine}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default XnorWidget;\n","import React from 'react';\n\nimport { Shape } from './XnorWidget';\n\nconst XnorIcon = () => <Shape size={30} />;\n\nexport default XnorIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './XnorIcon';\nimport model from './XnorModel';\nimport widget from './XnorWidget';\n\nexport default new Component({\n  type: 'Xnor',\n  name: 'Xnor',\n  description: 'Logic \"not exclusive or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'MULTIPLE_INPUT_BEHAVIOR',\n      type: 'select',\n      default: 'ONE',\n      label: 'Multiple input behavior',\n      options: [\n        {\n          label: 'Detect when only one input is on',\n          value: 'ONE',\n        },\n        {\n          label: 'Detect when an odd number of inputs are on',\n          value: 'ODD',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class XnorModel extends BaseModel {\n  initialize(configurations) {\n    this.behavior = configurations.MULTIPLE_INPUT_BEHAVIOR;\n    this.bits = Number(configurations.DATA_BITS);\n\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, this.bits);\n    }\n    this.addOutputPort('out', this.bits);\n  }\n\n  notExclusiveOrAt(values, index) {\n    const mask = 0b1 << index;\n\n    const sum = values\n      .map(value => ((value & mask) > 0 ? 1 : 0))\n      .reduce((acc, curr) => acc + curr);\n\n    return sum === 1 ? 0 : 1;\n  }\n\n  step(input) {\n    const MAX_VALUE = 0b1111_1111_1111_1111_1111_1111_1111_1111;\n    const mask = MAX_VALUE >>> (32 - this.bits);\n\n    const values = Object.values(input);\n\n    switch (this.behavior) {\n      case 'ONE':\n        return {\n          out: parseInt(\n            [...new Array(this.bits)]\n              .map((_, index) => this.notExclusiveOrAt(values, index))\n              .reverse()\n              .join(''),\n            2,\n          ),\n        };\n      case 'ODD': {\n        const xor = values.reduce((acc, curr) => curr ^ acc);\n        return {\n          out: ~xor & mask,\n        };\n      }\n      default:\n        return {};\n    }\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        fill=\"none\"\n        style={{\n          transform:\n            'scale(0.284583, 0.284583) translate(-1px, -3px)',\n        }}\n        d=\"m 11.926664,1.1161165 c 5.50133,9.5176855 9.663162,25.9796645 9.66318,42.6065395 m 0,0 c 1.62e-4,18.330222 -4.950245,36.216284 -11.386335,45.249616\"\n      />\n      <g transform=\"translate(1.8657598)\">\n        <path\n          d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 37.875 c 23.748245,0 43.005576,-42.349157 43,-43 -0.0058,-0.677686 -19.251755,-43 -43,-43 h -0.271484 z\"\n          transform=\"scale(0.26458333)\"\n        />\n      </g>\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst XorWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            model={model}\n            port={port}\n            engine={engine}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default XorWidget;\n","import React from 'react';\n\nimport { Shape } from './XorWidget';\n\nconst XorIcon = () => <Shape size={30} />;\n\nexport default XorIcon;\n","import And from './And/AndRegister';\nimport Buffer from './Buffer/BufferRegister';\nimport Button from './Button/ButtonRegister';\nimport Buzzer from './Buzzer/BuzzerRegister';\nimport Clock from './Clock/ClockRegister';\nimport Demux from './Demux/DemuxRegister';\nimport Ground from './Ground/GroundRegister';\nimport Input from './Input/InputRegister';\nimport Joiner from './Joiner/JoinerRegister';\nimport Led from './Led/LedRegister';\nimport Mux from './Mux/MuxRegister';\nimport Nand from './Nand/NandRegister';\nimport Nor from './Nor/NorRegister';\nimport Not from './Not/NotRegister';\nimport Or from './Or/OrRegister';\nimport Output from './Output/OutputRegister';\nimport Power from './Power/PowerRegister';\nimport Splitter from './Splitter/SplitterRegister';\nimport Ssd from './Ssd/SsdRegister';\nimport Switch from './Switch/SwitchRegister';\nimport Xnor from './Xnor/XnorRegister';\nimport Xor from './Xor/XorRegister';\n\nconst components = [\n  Input,\n  Output,\n  Button,\n  Switch,\n  Clock,\n  Led,\n  Ssd,\n  Buzzer,\n  And,\n  Nand,\n  Or,\n  Nor,\n  Xor,\n  Xnor,\n  Buffer,\n  Not,\n  Splitter,\n  Joiner,\n  Power,\n  Ground,\n  Mux,\n  Demux,\n];\n\nexport default components;\n\nexport const groupedComponents = components.reduce(\n  (acc, component) => {\n    const group = acc.find(g => g.name === component.group);\n\n    if (group) group.components.push(component);\n    else acc.push({ name: component.group, components: [component] });\n\n    return acc;\n  },\n  [],\n);\n","import { Component } from '@logossim/core';\n\nimport icon from './XorIcon';\nimport model from './XorModel';\nimport widget from './XorWidget';\n\nexport default new Component({\n  type: 'Xor',\n  name: 'Xor',\n  description: 'Logic \"exclusive or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'MULTIPLE_INPUT_BEHAVIOR',\n      type: 'select',\n      default: 'ONE',\n      label: 'Multiple input behavior',\n      options: [\n        {\n          label: 'Detect when only one input is on',\n          value: 'ONE',\n        },\n        {\n          label: 'Detect when an odd number of inputs are on',\n          value: 'ODD',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class XorModel extends BaseModel {\n  initialize(configurations) {\n    this.behavior = configurations.MULTIPLE_INPUT_BEHAVIOR;\n    this.bits = Number(configurations.DATA_BITS);\n\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, this.bits);\n    }\n    this.addOutputPort('out', this.bits);\n  }\n\n  exclusiveOrAt(values, index) {\n    const mask = 0b1 << index;\n\n    const sum = values\n      .map(value => ((value & mask) > 0 ? 1 : 0))\n      .reduce((acc, curr) => acc + curr);\n\n    return sum === 1 ? 1 : 0;\n  }\n\n  step(input) {\n    const values = Object.values(input);\n\n    switch (this.behavior) {\n      case 'ONE':\n        return {\n          out: parseInt(\n            [...new Array(this.bits)]\n              .map((_, index) => this.exclusiveOrAt(values, index))\n              .reverse()\n              .join(''),\n            2,\n          ),\n        };\n      case 'ODD':\n        return {\n          out: values.reduce((acc, curr) => curr ^ acc),\n        };\n      default:\n        return {};\n    }\n  }\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  z-index: 2;\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  border: none;\n  border-radius: 100%;\n\n  background: orange;\n  box-shadow: inset 0 0 10px #ff8d00;\n\n  width: 60px;\n  height: 60px;\n  margin: 16px;\n\n  font-size: 2em;\n  line-height: 1em;\n  color: white;\n\n  transition: 0.5s ease-in-out;\n\n  &:disabled {\n    opacity: 10%;\n    cursor: not-allowed;\n    background: gray;\n    box-shadow: inset 0 0 10px black;\n  }\n`;\n\nconst ComponentSelectButton = ({ handleClick, disabled }) => (\n  <Container id=\"component-select-button\">\n    <Button\n      onClick={handleClick}\n      disabled={disabled}\n      data-for=\"tooltip\"\n      data-tip=\"Add component...\"\n      data-place=\"left\"\n    >\n      +\n    </Button>\n  </Container>\n);\n\nexport default ComponentSelectButton;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  z-index: 2;\n\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  border: none;\n  border-radius: 5px;\n  background: ${props => {\n    switch (props.color) {\n      case 'green':\n        return '#07d26b';\n      case 'orange':\n        return 'orange';\n      default:\n        return 'gray';\n    }\n  }};\n\n  color: white;\n  font-size: 1.2em;\n\n  min-width: 110px;\n  padding: 5px 20px;\n  margin: 5px;\n\n  transition: 0.5s ease-in-out;\n\n  &:disabled {\n    opacity: 10%;\n    cursor: not-allowed;\n    background: gray;\n  }\n`;\n\nconst HelpButton = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  background: rgba(255, 255, 255, 0.6);\n  border-radius: 50%;\n  border: 1px solid #6441a5;\n\n  width: 34px;\n  height: 34px;\n\n  margin: 5px;\n\n  color: #6441a5;\n  font-weight: bold;\n  font-size: 1.3em;\n\n  &:focus,\n  &:hover {\n    background: #6441a5;\n    border: 1px solid rgba(255, 255, 255, 0.6);\n    color: rgba(255, 255, 255, 0.6);\n  }\n`;\n\nconst HelpButtonMenu = styled.div`\n  position: absolute;\n  top: 50px;\n  transform: translateX(calc(17px + -50%));\n\n  display: flex;\n  flex-direction: column;\n\n  background: rgba(255, 255, 255, 0.6);\n  border: 1px solid #6441a5;\n  border-radius: 10px;\n  padding: 3px;\n\n  z-index: 3;\n`;\n\nconst HelpButtonMenuItem = styled.button`\n  font-size: 14px;\n  color: #222;\n  padding: 16px;\n  border: 0;\n  background: transparent;\n  border-bottom: ${props =>\n    props.last ? 'none' : '1px solid #6441a5'};\n\n  &:focus,\n  &:hover {\n    color: #6441a5;\n  }\n`;\n\nconst DiagramStateButtons = ({\n  handleClickSave,\n  handleClickLoad,\n  handleClickKeyboardShortcuts,\n  handleClickRedoTour,\n  handleClickAbout,\n  disabled,\n}) => {\n  const helpButtonRef = useRef();\n  const helpMenuRef = useRef();\n  const [isHelpMenuOpen, setHelpMenuOpen] = useState(false);\n\n  const handleToggleHelpMenu = () => setHelpMenuOpen(!isHelpMenuOpen);\n  const handleClickAway = event => {\n    if (\n      helpMenuRef.current &&\n      !helpMenuRef.current.contains(event.target) &&\n      helpButtonRef.current &&\n      !helpButtonRef.current.contains(event.target)\n    ) {\n      handleToggleHelpMenu();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickAway);\n    return () =>\n      document.removeEventListener('mousedown', handleClickAway);\n  });\n\n  return (\n    <Container>\n      <HelpButton\n        id=\"help-button\"\n        ref={helpButtonRef}\n        onClick={handleToggleHelpMenu}\n      >\n        <span>?</span>\n      </HelpButton>\n      {isHelpMenuOpen && (\n        <HelpButtonMenu ref={helpMenuRef}>\n          <HelpButtonMenuItem\n            onClick={() => {\n              handleClickKeyboardShortcuts();\n              handleToggleHelpMenu();\n            }}\n          >\n            Keyboard shortcuts\n          </HelpButtonMenuItem>\n          <HelpButtonMenuItem\n            onClick={() => {\n              handleClickRedoTour();\n              handleToggleHelpMenu();\n            }}\n          >\n            Redo the tour\n          </HelpButtonMenuItem>\n          <HelpButtonMenuItem\n            onClick={() => {\n              handleClickAbout();\n              handleToggleHelpMenu();\n            }}\n            last\n          >\n            About\n          </HelpButtonMenuItem>\n        </HelpButtonMenu>\n      )}\n\n      <div id=\"save-load-buttons\">\n        <Button\n          color=\"green\"\n          onClick={handleClickSave}\n          disabled={disabled}\n        >\n          Save\n        </Button>\n        <Button\n          color=\"orange\"\n          onClick={handleClickLoad}\n          disabled={disabled}\n        >\n          Load\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default DiagramStateButtons;\n","import React from 'react';\n\nconst ArrowLeft = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"100 100 300 300\"\n  >\n    <polygon points=\"352,128.4 319.7,96 160,256 160,256 160,256 319.7,416 352,383.6 224.7,256 \" />\n  </svg>\n);\n\nexport default ArrowLeft;\n","import React from 'react';\n\nconst Chevron = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 48 48\">\n    <polygon points=\"5,30.9 8.1,34 24,18.1 39.9,34 43,30.9 24,12\" />\n  </svg>\n);\n\nexport default Chevron;\n","import React from 'react';\n\nconst Close = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 60.963 60.842\"\n  >\n    <path d=\"M59.595,52.861L37.094,30.359L59.473,7.98c1.825-1.826,1.825-4.786,0-6.611  c-1.826-1.825-4.785-1.825-6.611,0L30.483,23.748L8.105,1.369c-1.826-1.825-4.785-1.825-6.611,0c-1.826,1.826-1.826,4.786,0,6.611  l22.378,22.379L1.369,52.861c-1.826,1.826-1.826,4.785,0,6.611c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369  l22.502-22.502l22.501,22.502c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369  C61.42,57.647,61.42,54.687,59.595,52.861z\" />\n  </svg>\n);\n\nexport default Close;\n","import React from 'react';\n\nconst Copy = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\n    <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\" />\n  </svg>\n);\n\nexport default Copy;\n","import React from 'react';\n\nconst Cut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"6\" cy=\"6\" r=\"3\" />\n    <circle cx=\"6\" cy=\"18\" r=\"3\" />\n    <line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\" />\n    <line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\" />\n    <line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\" />\n  </svg>\n);\n\nexport default Cut;\n","import React from 'react';\n\nconst Delete = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <polyline points=\"3 6 5 6 21 6\" />\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n  </svg>\n);\n\nexport default Delete;\n","import React from 'react';\n\nconst Duplicate = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={(size * 18) / 24}\n    viewBox=\"0 0 24 18\"\n    fill=\"none\"\n    stroke=\"none\"\n    strokeWidth=\"2\"\n  >\n    <g transform=\"translate(-678.000000, -2727.000000)\">\n      <g transform=\"translate(100.000000, 2626.000000)\">\n        <g transform=\"translate(578.000000, 98.000000)\">\n          <g transform=\"translate(0.000000, 0.000000)\">\n            <polygon points=\"0 0 24 0 24 24 0 24\" />\n            <path\n              d=\"M15,8 C14.45,8 14,8.45 14,9 L14,11 L12,11 C11.45,11 11,11.45 11,12 C11,12.55 11.45,13 12,13 L14,13 L14,15 C14,15.55 14.45,16 15,16 C15.55,16 16,15.55 16,15 L16,13 L18,13 C18.55,13 19,12.55 19,12 C19,11.45 18.55,11 18,11 L16,11 L16,9 C16,8.45 15.55,8 15,8 Z M2,12 C2,9.42 3.4,7.17 5.48,5.96 C5.8,5.77 6.01,5.45 6.01,5.08 C6.01,4.31 5.17,3.83 4.5,4.22 C1.82,5.78 0,8.68 0,12 C0,15.32 1.82,18.22 4.5,19.78 C5.17,20.17 6.01,19.69 6.01,18.92 C6.01,18.55 5.8,18.23 5.48,18.04 C3.4,16.83 2,14.58 2,12 Z M15,3 C10.04,3 6,7.04 6,12 C6,16.96 10.04,21 15,21 C19.96,21 24,16.96 24,12 C24,7.04 19.96,3 15,3 Z M15,19 C11.14,19 8,15.86 8,12 C8,8.14 11.14,5 15,5 C18.86,5 22,8.14 22,12 C22,15.86 18.86,19 15,19 Z\"\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Duplicate;\n","import React from 'react';\n\nconst Paste = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 512.001 512.001\"\n  >\n    <g>\n      <g>\n        <g>\n          <path\n            d=\"M481,371c11.046,0,20-8.954,20-20v-92c0-33.084-26.916-60-60-60h-39v-79c0-44.112-35.888-80-80-80h-47.533\n\t\t\t\tc-7.739-23.749-29.864-40-55.16-40h-25.614c-25.296,0-47.421,16.251-55.16,40H91c-44.112,0-80,35.888-80,80v312\n\t\t\t\tc0,44.112,35.888,80,80,80h88c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H91c-22.056,0-40-17.944-40-40V120\n\t\t\t\tc0-22.056,17.944-40,40-40h2v59c0,11.046,8.954,20,20,20h189c11.046,0,20-8.954,20-20V80c22.056,0,40,17.944,40,40v79h-65.007\n\t\t\t\tC263.914,199,237,225.913,237,258.993v193.015c0,33.08,26.916,59.993,60.01,59.993L441,511.926c33.084,0,60-26.913,60-59.992\n\t\t\t\tc0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20c0,11.024-8.972,19.992-20.01,19.992L297,472c-11.028,0-20-8.969-20-19.993\n\t\t\t\tV258.993c0-11.024,8.969-19.993,19.993-19.993H441c11.028,0,20,8.972,20,20v92C461,362.046,469.955,371,481,371z M282,119H133V80\n\t\t\t\th21c9.177,0,17.177-6.246,19.403-15.149l2.798-11.194C178.211,45.616,185.404,40,193.693,40h25.614\n\t\t\t\tc8.289,0,15.481,5.616,17.492,13.657l2.798,11.194C241.823,73.754,249.823,80,259,80h23V119z\"\n          />\n          <path\n            d=\"M401,279h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,287.954,412.047,279,401,279z\"\n          />\n          <path\n            d=\"M401,349h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,357.954,412.047,349,401,349z\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Paste;\n","import React from 'react';\n\nconst Pause = ({ size = 16, color = '#ffb100' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M395,512a73.14,73.14,0,0,1-73.14-73.14V73.14a73.14,73.14,0,1,1,146.29,0V438.86A73.14,73.14,0,0,1,395,512Z\" />\n    <path d=\"M117,512a73.14,73.14,0,0,1-73.14-73.14V73.14a73.14,73.14,0,1,1,146.29,0V438.86A73.14,73.14,0,0,1,117,512Z\" />\n  </svg>\n);\n\nexport default Pause;\n","import React from 'react';\n\nconst Play = ({ size = 16, color = '#008000' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M60.54,512c-17.06,0-30.43-13.86-30.43-31.56V31.55C30.12,13.86,43.48,0,60.55,0A32.94,32.94,0,0,1,77,4.52L465.7,229c10.13,5.85,16.18,16,16.18,27s-6,21.2-16.18,27L77,507.48A32.92,32.92,0,0,1,60.55,512Z\" />\n  </svg>\n);\n\nexport default Play;\n","import React from 'react';\n\nconst Redo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m431 481c0 11.046-8.954 20-20 20h-66c-11.046 0-20-8.954-20-20s8.954-20 20-20h66c11.046 0 20 8.954 20 20zm63.358-352.994-112.284-111.215c-7.848-7.773-20.511-7.713-28.284.135s-7.712 20.511.135 28.284l106.808 105.79h-285.733c-96.495 0-175 78.505-175 175s78.505 175 175 175h69c11.046 0 20-8.954 20-20s-8.954-20-20-20h-69c-74.439 0-135-60.561-135-135s60.561-135 135-135h284.836l-105.037 105.917c-7.778 7.843-7.725 20.506.118 28.284 3.9 3.868 8.992 5.799 14.083 5.799 5.146 0 10.292-1.975 14.202-5.917l111.225-112.157c11.332-11.332 17.573-26.4 17.573-42.426s-6.241-31.094-17.642-42.494z\" />\n  </svg>\n);\n\nexport default Redo;\n","import React from 'react';\n\nconst Settings = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n  </svg>\n);\n\nexport default Settings;\n","import React from 'react';\n\nconst Stop = ({ size = 16, color = '#c53838' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M 65.249771,0 A 65.248738,65.376306 0 0 0 0.413662,58.057582 h -0.18732 v 1.884685 A 65.248738,65.376306 0 0 0 0,65.377342 65.248738,65.376306 0 0 0 0.226342,70.796781 V 441.18757 A 65.248738,65.376306 0 0 0 0,446.62268 a 65.248738,65.376306 0 0 0 0.226342,5.41161 v 2.88566 H 0.530738 A 65.248738,65.376306 0 0 0 65.249771,512 a 65.248738,65.376306 0 0 0 2.44297,-0.0468 H 444.31507 a 65.248738,65.376306 0 0 0 2.43514,0.0468 65.248738,65.376306 0 0 0 2.44297,-0.0468 h 0.56977 v -0.024 a 65.248738,65.376306 0 0 0 61.70628,-57.00966 h 0.0312 v -0.22662 a 65.248738,65.376306 0 0 0 0.49952,-8.07049 65.248738,65.376306 0 0 0 -0.49952,-8.01579 V 67.011775 a 65.248738,65.376306 0 0 0 0.0234,-1.634433 65.248738,65.376306 0 0 0 -0.0234,-1.681351 v -5.638409 h -0.38247 A 65.248738,65.376306 0 0 0 456.2645,0.77420532 V 0 H 446.40678 446.2741 65.374651 Z\" />\n  </svg>\n);\n\nexport default Stop;\n","import React from 'react';\n\nconst Undo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m 81,481 c 0,11.046 8.954,20 20,20 h 66 c 11.046,0 20,-8.954 20,-20 0,-11.046 -8.954,-20 -20,-20 h -66 c -11.046,0 -20,8.954 -20,20 z M 17.642,128.006 129.926,16.791 c 7.848,-7.773 20.511,-7.713 28.284,0.135 7.773,7.848 7.712,20.511 -0.135,28.284 L 51.267,151 H 337 c 96.495,0 175,78.505 175,175 0,96.495 -78.505,175 -175,175 h -69 c -11.046,0 -20,-8.954 -20,-20 0,-11.046 8.954,-20 20,-20 h 69 c 74.439,0 135,-60.561 135,-135 0,-74.439 -60.561,-135 -135,-135 H 52.164 l 105.037,105.917 c 7.778,7.843 7.725,20.506 -0.118,28.284 -3.9,3.868 -8.992,5.799 -14.083,5.799 -5.146,0 -10.292,-1.975 -14.202,-5.917 L 17.573,212.926 C 6.241,201.594 0,186.526 0,170.5 0,154.474 6.241,139.406 17.642,128.006 Z\" />\n  </svg>\n);\n\nexport default Undo;\n","import React from 'react';\n\nconst ZoomIn = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomIn;\n","import React from 'react';\n\nconst ZoomOut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomOut;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport { Play, Pause, Stop } from '../Icons';\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 16px;\n  left: 50%;\n  transform: translate(-50%, 0);\n\n  background: rgb(224, 224, 224);\n  background: linear-gradient(\n    0deg,\n    rgba(224, 224, 224, 1) 0%,\n    rgba(255, 255, 255, 1) 100%\n  );\n\n  border: 1px solid gray;\n  border-radius: 16px;\n\n  z-index: 2;\n\n  & > button {\n    border-right: 1px solid gray;\n    &:last-child {\n      border-right: none;\n    }\n  }\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  background: none;\n  border: none;\n\n  font-size: 1.2em;\n\n  min-width: 75px;\n  min-height: 60px;\n\n  &:disabled {\n    & > svg {\n      fill: #bfbfbf;\n    }\n  }\n`;\n\nconst SimulationControlButtons = ({\n  state,\n  handleClickStart,\n  handleClickPause,\n  handleClickStop,\n}) => (\n  <Container id=\"simulation-control-buttons\">\n    <Button\n      onClick={handleClickStart}\n      disabled={state === 'started'}\n      data-for=\"tooltip\"\n      data-tip=\"Start simulation\"\n    >\n      <Play />\n    </Button>\n    <Button\n      onClick={handleClickPause}\n      disabled={state === 'paused' || state === 'stopped'}\n      data-for=\"tooltip\"\n      data-tip=\"Pause simulation\"\n    >\n      <Pause />\n    </Button>\n    <Button\n      onClick={handleClickStop}\n      disabled={state === 'stopped'}\n      data-for=\"tooltip\"\n      data-tip=\"Stop simulation\"\n    >\n      <Stop />\n    </Button>\n  </Container>\n);\n\nexport default SimulationControlButtons;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  z-index: 3;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  background: rgba(0, 0, 0, 0.75);\n`;\n\nconst Window = styled.div`\n  width: 60vw;\n  height: 80vh;\n\n  max-width: 600px;\n  max-height: 800px;\n\n  background: white;\n\n  border: 1px solid black;\n  border-radius: 25px;\n\n  padding: 16px;\n\n  z-index: 4;\n`;\n\nconst Modal = ({ children }) => (\n  <Overlay>\n    <Window>{children}</Window>\n  </Overlay>\n);\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: space-between;\n\n  height: 50px;\n`;\n\nexport const Title = styled.h1`\n  flex-grow: 1;\n  font-size: 1.5em;\n\n  margin: 0;\n\n  align-self: center;\n  text-align: center;\n`;\n\nexport const Subtitle = styled.h2`\n  flex-grow: 1;\n  font-size: 1.2em;\n\n  margin: 0;\n\n  align-self: center;\n  text-align: center;\n`;\n\nexport const Content = styled.div`\n  margin-top: 32px;\n`;\n\nexport const IconButton = styled.button`\n  position: absolute;\n\n  flex-shrink: 0;\n\n  border: 1px solid gray;\n  border-radius: 25px;\n  width: 50px;\n  height: 50px;\n\n  ${props => {\n    if (props.left) return 'left: 0;';\n    return 'right: 0;';\n  }}\n\n  background: none;\n\n  :hover {\n    background: rgba(0, 0, 0, 0.05);\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n\n  label {\n    font-size: 0.8em;\n    font-weight: bold;\n    text-transform: uppercase;\n    color: ${props => (props.error ? '#710606' : 'inherit')};\n\n    background: #eee;\n    border: 1px solid ${props => (props.error ? '#c80a0a' : 'gray')};\n    border-radius: 8px;\n\n    position: relative;\n    top: 0.8em;\n\n    width: max-content;\n    margin-left: 15px;\n    padding: 0 8px;\n  }\n\n  select,\n  input {\n    background: white;\n    border: 1px solid ${props => (props.error ? '#c80a0a' : 'gray')};\n    border-radius: 25px;\n\n    font-size: 1.2em;\n\n    padding: 10px 0 5px 16px;\n  }\n`;\n\nconst Input = ({\n  // Formik\n  field,\n  // General\n  name,\n  label,\n  componentType,\n  type,\n  innerRef,\n  // Select\n  options = [],\n  // Number\n  step,\n  min,\n  max,\n}) => {\n  switch (type) {\n    case 'select':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <select id={field.name} ref={innerRef} {...field}>\n            {options.map(option => (\n              <option value={option.value} key={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </>\n      );\n    case 'number':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <input\n            id={field.name}\n            ref={innerRef}\n            {...field}\n            step={step}\n            min={min}\n            max={max}\n            type=\"number\"\n          />\n        </>\n      );\n    case 'text':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <input\n            id={field.name}\n            ref={innerRef}\n            {...field}\n            type=\"text\"\n          />\n        </>\n      );\n    default:\n      throw new Error(\n        `[logossim] Invalid configuration type for ${componentType}: ${type}`,\n      );\n  }\n};\n\nconst ErrorMessage = styled.div`\n  font-size: 0.8em;\n  color: #c80a0a;\n\n  background: white;\n\n  position: relative;\n  bottom: 0.7em;\n\n  width: max-content;\n  padding: 0 8px;\n  margin: -15px auto auto auto;\n  transform: translateY(15px);\n`;\n\nconst ComponentConfigurationInput = props => {\n  const {\n    field: { name },\n    form: { errors },\n  } = props;\n\n  const error = errors[name];\n\n  return (\n    <Container error={error}>\n      <Input {...props} />\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n    </Container>\n  );\n};\n\nexport default ComponentConfigurationInput;\n","import React from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport styled from 'styled-components';\n\nconst engineStub = {\n  registerListener: () => {},\n  getCanvas: () => {},\n  getPortCoords: () => ({\n    getWidth: () => {},\n    getHeight: () => {},\n    getTopLeft: () => {},\n  }),\n  getModel: () => ({ isLocked: () => false }),\n};\n\nconst getTooltip = (error, disabled) => {\n  if (disabled) return '';\n  if (error) return 'Check form errors';\n  return 'Drag me!';\n};\n\nconst ErrorWidget = styled.div`\n  border: 1px dashed var(--value-error);\n  border-radius: 5px;\n  width: 30px;\n  height: 30px;\n`;\n\nconst DraggableComponent = ({\n  component: { type, Widget, Model },\n  configurations,\n  handleClose,\n  error,\n  disabled,\n}) => (\n  <div\n    draggable={!error && !disabled}\n    onDragStart={event => {\n      event.dataTransfer.setDragImage(\n        event.currentTarget.children[0],\n        0,\n        0,\n      );\n\n      event.dataTransfer.setData(\n        'component',\n        JSON.stringify({\n          type,\n          configurations,\n        }),\n      );\n\n      requestAnimationFrame(() => {\n        Tooltip.hide();\n        handleClose();\n      });\n    }}\n    data-for=\"tooltip\"\n    data-tip={getTooltip(error, disabled)}\n    data-place=\"bottom\"\n  >\n    {error ? (\n      <ErrorWidget />\n    ) : (\n      <Widget\n        engine={engineStub}\n        model={new Model(type, configurations)}\n      />\n    )}\n  </div>\n);\n\nexport default DraggableComponent;\n","import React, { useEffect, useRef } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport { Formik, Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nimport { ArrowLeft, Close } from '../Icons';\nimport {\n  Header,\n  Title,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\nimport ComponentConfigurationInput from './ComponentConfigurationInput';\nimport DraggableComponent from './DraggableComponent';\n\nconst DragArea = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 200px;\n  margin-bottom: 32px;\n\n  box-shadow: ${props =>\n    `inset 0 0 20px rgba(${props.error ? 255 : 0}, 0, 0, 0.3)`};\n\n  background-image: ${props => `linear-gradient(\n      to right,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.1) 1px,\n      transparent 1px,\n      transparent 15px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 15px,\n      transparent 16px,\n      transparent 30px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 30px,\n      transparent 31px\n    ),\n    linear-gradient(\n      to bottom,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.1) 1px,\n      transparent 1px,\n      transparent 15px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 15px,\n      transparent 16px,\n      transparent 30px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 30px,\n      transparent 31px\n    )`};\n  background-size: 45px 45px;\n  border-radius: 25px;\n\n  overflow: hidden;\n`;\n\nconst FormScroll = styled.div`\n  height: 375px;\n  overflow-y: auto;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n`;\n\nconst Hint = styled.span`\n  font-size: 0.8em;\n  font-style: italic;\n  align-self: center;\n  text-align: right;\n  margin-right: 10px;\n`;\n\nconst SubmitButton = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'submit',\n}))`\n  border: none;\n  border-radius: 5px;\n  background: #07d26b;\n\n  color: white;\n  font-size: 1.2em;\n\n  width: 100%;\n  padding: 5px 20px;\n  margin: 5px;\n\n  :disabled {\n    background: #d22307;\n    cursor: not-allowed;\n  }\n`;\n\nconst getInitialValues = component =>\n  Object.fromEntries(\n    component.configurations.map(configuration => [\n      configuration.name,\n      configuration.default,\n    ]),\n  );\n\nconst getFormSubmitLabel = (isValid, editMode) => {\n  if (!isValid) return 'Check form errors';\n  if (editMode) return 'Edit component';\n  return 'Add to circuit';\n};\n\nconst ComponentConfiguration = ({\n  editMode,\n  component,\n  handleClose,\n  handleBack,\n  handleSubmit,\n}) => {\n  const firstInputRef = useRef();\n  const buttonRef = useRef();\n\n  useEffect(() => {\n    if (firstInputRef.current) {\n      firstInputRef.current.focus();\n    } else {\n      buttonRef.current.focus();\n    }\n  });\n\n  useEffect(Tooltip.rebuild);\n\n  return (\n    <>\n      <Header>\n        {!editMode && (\n          <IconButton\n            left\n            onClick={handleBack}\n            data-for=\"tooltip\"\n            data-tip=\"Go back...\"\n            data-place=\"right\"\n          >\n            <ArrowLeft />\n          </IconButton>\n        )}\n        <Title>{editMode ? 'Edit' : 'Configure'} component</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content>\n        <Formik\n          initialValues={getInitialValues(component)}\n          onSubmit={values => {\n            handleSubmit(null, {\n              type: component.type,\n              configurations: values,\n            });\n            handleClose();\n          }}\n        >\n          {({ values, isValid }) => (\n            <Form>\n              <DragArea error={!isValid}>\n                <DraggableComponent\n                  component={component}\n                  configurations={values}\n                  handleClose={handleClose}\n                  error={!isValid}\n                  disabled={editMode}\n                />\n              </DragArea>\n\n              <FormScroll autoComplete=\"off\">\n                {component.configurations.map(\n                  (configuration, index) => (\n                    <Field\n                      key={configuration.name}\n                      component={ComponentConfigurationInput}\n                      innerRef={index === 0 ? firstInputRef : null}\n                      {...configuration}\n                      validate={\n                        configuration.validate\n                          ? value =>\n                              configuration.validate(value, values)\n                          : null\n                      }\n                    />\n                  ),\n                )}\n              </FormScroll>\n\n              <Footer>\n                {!editMode && (\n                  <Hint>(hint: you can also drag the component)</Hint>\n                )}\n                <SubmitButton disabled={!isValid} ref={buttonRef}>\n                  {getFormSubmitLabel(isValid, editMode)}\n                </SubmitButton>\n              </Footer>\n            </Form>\n          )}\n        </Formik>\n      </Content>\n    </>\n  );\n};\n\nexport default ComponentConfiguration;\n","import React, { useEffect, useCallback } from 'react';\n\nimport Modal from '../Modal/Modal';\nimport ComponentConfiguration from './ComponentConfiguration';\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst ComponentEdit = ({\n  isOpen,\n  components,\n  component,\n  handleClose,\n  handleComponentEdit,\n}) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  const factory = components.find(\n    c => c.type === component.options.type,\n  );\n\n  const edit = {\n    ...factory,\n    configurations: factory.configurations.map(configuration => ({\n      ...configuration,\n      default: component.configurations[configuration.name],\n    })),\n  };\n\n  return (\n    <Modal>\n      <ComponentConfiguration\n        editMode\n        handleClose={handleClose}\n        handleSubmit={(event, { configurations }) =>\n          handleComponentEdit(component, configurations)\n        }\n        component={edit}\n      />\n    </Modal>\n  );\n};\n\nexport default ComponentEdit;\n","import React, { useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Chevron } from '../Icons';\n\nconst Container = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  font-weight: bold;\n  font-size: 1.3em;\n`;\n\nconst HorizontalSeparator = styled.hr`\n  flex-grow: 1;\n  align-self: center;\n\n  margin: 16px;\n  border-top: 1px solid black;\n`;\n\nconst IconButton = styled.button`\n  background: none;\n  border: none;\n  width: 50px;\n\n  transform: ${props => (props.isOpen ? 'rotate(180deg)' : 'none')};\n`;\n\nconst ComponentsGrid = styled.div`\n  display: ${props => (props.isOpen ? 'grid' : 'none')};\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 8px;\n`;\n\nconst ComponentButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  padding: 8px;\n\n  background: rgba(0, 0, 0, 0.05);\n  border: 1px solid gray;\n  border-radius: 5px;\n\n  :hover {\n    background: rgba(0, 0, 0, 0.1);\n    border-style: dashed;\n  }\n`;\n\nconst ComponentTitle = styled.h2`\n  font-weight: normal;\n  font-size: 1.2em;\n`;\n\nconst ComponentIcon = styled.div`\n  margin-right: 16px;\n`;\n\nconst ComponentGroup = ({\n  name,\n  components,\n  handleComponentSelect,\n}) => {\n  const [isOpen, setOpen] = useState(true);\n\n  return (\n    <Container>\n      <Header onClick={() => setOpen(!isOpen)}>\n        <Title>{name}</Title>\n        <HorizontalSeparator />\n        <IconButton\n          left\n          isOpen={isOpen}\n          onClick={() => setOpen(!isOpen)}\n        >\n          <Chevron />\n        </IconButton>\n      </Header>\n      <ComponentsGrid isOpen={isOpen}>\n        {components.map(component => (\n          <ComponentButton\n            onClick={() => handleComponentSelect(component)}\n            key={component.name}\n            data-for=\"tooltip\"\n            data-tip={component.description}\n          >\n            <ComponentIcon>\n              <component.Icon />\n            </ComponentIcon>\n            <ComponentTitle>{component.name}</ComponentTitle>\n          </ComponentButton>\n        ))}\n      </ComponentsGrid>\n    </Container>\n  );\n};\n\nexport default ComponentGroup;\n","import React, { useState, useEffect } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport styled from 'styled-components';\n\nimport { Close } from '../Icons';\nimport {\n  Header,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\nimport ComponentGroup from './ComponentGroup';\n\nconst SearchBar = styled.input`\n  flex-grow: 1;\n\n  padding: 10px;\n  margin-right: 60px;\n  font-size: 1.5em;\n\n  border-radius: 25px;\n  border: 1px solid gray;\n\n  ::placeholder {\n    font-weight: 300;\n    color: #cfcfcf;\n  }\n`;\n\nconst Scroll = styled.div`\n  padding-right: 16px;\n  max-height: calc(min(800px, 80vh) - 130px);\n  overflow-y: auto;\n`;\n\nconst ComponentSearch = ({\n  groups,\n  handleComponentSelect,\n  handleClose,\n}) => {\n  useEffect(Tooltip.rebuild);\n\n  const [filteredGroups, setFilteredGroups] = useState(groups);\n  const [searchText, setSearchText] = useState('');\n\n  const handleSearchChange = value => {\n    setSearchText(value);\n\n    if (!value) {\n      setFilteredGroups(groups);\n      return;\n    }\n\n    const like = new RegExp(`${value}.*`, 'i');\n\n    const newFilteredGroups = groups\n      .map(group => {\n        const hasAnyMatchingComponent = group.components.some(\n          component => component.name.match(like),\n        );\n\n        if (hasAnyMatchingComponent)\n          return {\n            ...group,\n            components: group.components.filter(component =>\n              component.name.match(like),\n            ),\n          };\n        return null;\n      })\n      .filter(group => group != null);\n\n    setFilteredGroups(newFilteredGroups);\n  };\n\n  const handleKeyDown = key => {\n    if (key === 'Escape') {\n      setSearchText('');\n      setFilteredGroups(groups);\n    }\n\n    if (\n      key === 'Enter' &&\n      searchText &&\n      filteredGroups.length > 0 &&\n      filteredGroups[0].components.length > 0\n    ) {\n      handleComponentSelect(filteredGroups[0].components[0]);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        <SearchBar\n          autoFocus\n          placeholder=\"Search components...\"\n          value={searchText}\n          onChange={({ target: { value } }) =>\n            handleSearchChange(value)\n          }\n          onKeyDown={({ key }) => handleKeyDown(key)}\n        />\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content>\n        <Scroll>\n          {filteredGroups.map(({ name, components }) => (\n            <ComponentGroup\n              name={name}\n              components={components}\n              handleComponentSelect={handleComponentSelect}\n              key={name}\n            />\n          ))}\n        </Scroll>\n      </Content>\n    </>\n  );\n};\n\nexport default ComponentSearch;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport Modal from '../Modal/Modal';\nimport ComponentConfiguration from './ComponentConfiguration';\nimport ComponentSearch from './ComponentSearch';\n\nconst closeOnEsc = (\n  { code },\n  { handleClose, setSelectedComponent },\n) => {\n  if (code !== 'Escape') return;\n  handleClose();\n  setSelectedComponent(null);\n};\n\nconst ComponentSelect = ({\n  isOpen,\n  groups,\n  handleClose,\n  handleComponentDrop,\n}) => {\n  const [selectedComponent, setSelectedComponent] = useState(null);\n  const callback = useCallback(\n    event => closeOnEsc(event, { handleClose, setSelectedComponent }),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      {selectedComponent ? (\n        <ComponentConfiguration\n          handleClose={() => {\n            handleClose();\n            setSelectedComponent(null);\n          }}\n          handleSubmit={handleComponentDrop}\n          handleBack={() => setSelectedComponent(null)}\n          component={selectedComponent}\n        />\n      ) : (\n        <ComponentSearch\n          handleClose={handleClose}\n          handleComponentSelect={setSelectedComponent}\n          groups={groups}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default ComponentSelect;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.span`\n  display: inline-flex;\n  align-items: center;\n\n  height: ${props => props.size}px;\n  padding: 0 ${props => props.size / 4}px;\n  margin: 2px ${props => props.size / 8}px;\n\n  font-size: ${props => props.size / 2}px;\n  font-family: monospace;\n  color: #000000c4;\n\n  background: #ececec;\n  border-radius: 4px;\n  border: 1px solid #ffffff17;\n  box-shadow: inset 0 0 ${props => props.size / 4}px #0000000a;\n`;\n\nconst Key = ({ children, size = 16 }) => (\n  <Container size={size}>{children}</Container>\n);\n\nexport default Key;\n","import styled from 'styled-components';\n\nconst ContextMenuIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n`;\n\nexport default ContextMenuIconContainer;\n","import styled from 'styled-components';\n\nconst ContextMenuShortcutContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n  margin-left: 8px;\n`;\n\nexport default ContextMenuShortcutContainer;\n","import React from 'react';\nimport { Menu, Item, Separator } from 'react-contexify';\n\nimport {\n  Duplicate,\n  Copy,\n  Delete,\n  Paste,\n  Redo,\n  Settings,\n  Undo,\n  Cut,\n  ZoomIn,\n  ZoomOut,\n} from '../Icons';\nimport Key from '../Key/Key';\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\n\nconst ComponentContextMenu = ({\n  duplicateSelected,\n  cutSelected,\n  copySelected,\n  pasteSelected,\n  deleteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n  configureComponent,\n}) => (\n  <Menu id=\"component\">\n    <Item onClick={duplicateSelected}>\n      <ContextMenuIconContainer>\n        <Duplicate />\n      </ContextMenuIconContainer>\n      Duplicate\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>D</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={cutSelected}>\n      <ContextMenuIconContainer>\n        <Cut />\n      </ContextMenuIconContainer>\n      Cut\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>X</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={copySelected}>\n      <ContextMenuIconContainer>\n        <Copy />\n      </ContextMenuIconContainer>\n      Copy\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>C</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={pasteSelected}>\n      <ContextMenuIconContainer>\n        <Paste />\n      </ContextMenuIconContainer>\n      Paste\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>V</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={deleteSelected}>\n      <ContextMenuIconContainer>\n        <Delete />\n      </ContextMenuIconContainer>\n      Delete\n      <ContextMenuShortcutContainer>\n        <Key>Delete</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item onClick={zoomIn}>\n      <ContextMenuIconContainer>\n        <ZoomIn />\n      </ContextMenuIconContainer>\n      Zoom in\n    </Item>\n\n    <Item onClick={zoomOut}>\n      <ContextMenuIconContainer>\n        <ZoomOut />\n      </ContextMenuIconContainer>\n      Zoom out\n    </Item>\n\n    <Separator />\n\n    <Item onClick={undo}>\n      <ContextMenuIconContainer>\n        <Undo />\n      </ContextMenuIconContainer>\n      Undo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={redo}>\n      <ContextMenuIconContainer>\n        <Redo />\n      </ContextMenuIconContainer>\n      Redo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>SHIFT</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item\n      onClick={({ props: component }) =>\n        configureComponent(component)\n      }\n    >\n      <ContextMenuIconContainer>\n        <Settings />\n      </ContextMenuIconContainer>\n      Edit configurations...\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>E</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n  </Menu>\n);\n\nexport default ComponentContextMenu;\n","import React from 'react';\nimport { Menu, Item, Separator } from 'react-contexify';\n\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\nimport Key from '../Key/Key';\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\n\nconst DiagramContextMenu = ({\n  pasteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n}) => (\n  <Menu id=\"diagram\">\n    <Item onClick={pasteSelected}>\n      <ContextMenuIconContainer>\n        <Paste />\n      </ContextMenuIconContainer>\n      Paste\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>V</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item onClick={zoomIn}>\n      <ContextMenuIconContainer>\n        <ZoomIn />\n      </ContextMenuIconContainer>\n      Zoom in\n    </Item>\n    <Item onClick={zoomOut}>\n      <ContextMenuIconContainer>\n        <ZoomOut />\n      </ContextMenuIconContainer>\n      Zoom out\n    </Item>\n\n    <Separator />\n\n    <Item onClick={undo}>\n      <ContextMenuIconContainer>\n        <Undo />\n      </ContextMenuIconContainer>\n      Undo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={redo}>\n      <ContextMenuIconContainer>\n        <Redo />\n      </ContextMenuIconContainer>\n      Redo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>SHIFT</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n  </Menu>\n);\n\nexport default DiagramContextMenu;\n","import React from 'react';\n\nimport ComponentContextMenu from './ComponentContextMenu';\nimport DiagramContextMenu from './DiagramContextMenu';\n\nimport 'react-contexify/dist/ReactContexify.min.css';\n\nconst ContextMenus = ({\n  duplicateSelected,\n  cutSelected,\n  copySelected,\n  pasteSelected,\n  deleteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n  configureComponent,\n}) => (\n  <>\n    <DiagramContextMenu\n      pasteSelected={pasteSelected}\n      undo={undo}\n      redo={redo}\n      zoomIn={zoomIn}\n      zoomOut={zoomOut}\n    />\n    <ComponentContextMenu\n      duplicateSelected={duplicateSelected}\n      cutSelected={cutSelected}\n      copySelected={copySelected}\n      pasteSelected={pasteSelected}\n      deleteSelected={deleteSelected}\n      undo={undo}\n      redo={redo}\n      zoomIn={zoomIn}\n      zoomOut={zoomOut}\n      configureComponent={configureComponent}\n    />\n  </>\n);\n\nexport default ContextMenus;\n","import React, { useEffect, useCallback } from 'react';\nimport GitHubButton from 'react-github-button';\n\nimport styled from 'styled-components';\n\nimport { version } from '../../../package.json';\nimport { Close } from '../Icons';\nimport Modal from '../Modal/Modal';\nimport {\n  Header,\n  Title,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\n\nconst Version = styled.span`\n  font-weight: bold;\n  font-size: 1.1em;\n  margin-top: -32px;\n`;\n\nconst Divider = styled.hr`\n  width: 80%;\n  margin: 24px;\n  border-color: white;\n`;\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst HelpAbout = ({ isOpen, handleClose }) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      <Header>\n        <Title>About</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content\n        style={{\n          paddingTop: 0,\n          marginTop: 16,\n          overflowY: 'auto',\n          height: 'calc(100% - 70px)',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/social.png`}\n            alt=\"logossim's logo\"\n            style={{ width: '75%' }}\n          />\n          <Version>Version {version}</Version>\n        </div>\n\n        <Divider />\n\n        <div style={{ margin: '0 32px' }}>\n          <p style={{ textAlign: 'center' }}>\n            If you want to know more about the project,{' '}\n            <a\n              href=\"https://github.com/renato-bohler/logossim\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              check us out on GitHub!\n            </a>\n          </p>\n          <GitHubButton\n            type=\"stargazers\"\n            namespace=\"renato-bohler\"\n            repo=\"logossim\"\n          />\n          <p style={{ textAlign: 'center' }}>\n            <strong>You can help us</strong> make logossim better! If\n            you know a little bit of web development, you can quite\n            easily develop new components to the application.\n          </p>\n        </div>\n\n        <Divider />\n\n        <div style={{ margin: '0 32px' }}>\n          <p style={{ textAlign: 'center' }}>\n            This is a project built by{' '}\n            <a\n              href=\"https://renato-bohler.github.io/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Renato Böhler\n            </a>{' '}\n            as an undegraduate thesis on Computer Engineering at{' '}\n            <a\n              href=\"http://www.utfpr.edu.br/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              UTFPR\n            </a>\n            .\n          </p>\n        </div>\n      </Content>\n    </Modal>\n  );\n};\n\nexport default HelpAbout;\n","import React, { useEffect, useCallback } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Close } from '../Icons';\nimport Key from '../Key/Key';\nimport Modal from '../Modal/Modal';\nimport {\n  Header,\n  Title,\n  Subtitle,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst TableContainer = styled.div`\n  display: flex;\n`;\n\nconst Table = styled.table`\n  flex: 1;\n  margin: 8px 0;\n`;\n\nconst TableColumn = styled.td`\n  padding: 8px;\n\n  border: 1px solid #5d2eb526;\n  border-radius: 8px;\n`;\n\nconst HelpKeyboardShortcuts = ({ isOpen, handleClose }) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      <Header>\n        <Title>Keyboard shortcuts</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content\n        style={{\n          paddingTop: 16,\n          marginTop: 16,\n          overflowY: 'auto',\n          height: 'calc(100% - 70px)',\n        }}\n      >\n        <span>\n          <strong>Note:</strong> some of the actions may have two\n          shortcuts.\n        </span>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Circuit management\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Save</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>S</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Load</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>L</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SHIFT</Key>\n                  <Key size={32}>S</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Undo</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>Z</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Redo</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SHIFT</Key>\n                  <Key size={32}>Z</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>Y</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Component management\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Edit configurations</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>E</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Duplicate</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>D</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Delete</TableColumn>\n                <TableColumn>\n                  <Key size={32}>Delete</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Copy</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>C</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Paste</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>V</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Cut</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>X</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Simulation control\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Play</TableColumn>\n                <TableColumn>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Pause</TableColumn>\n                <TableColumn>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Stop</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>ESC</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n      </Content>\n    </Modal>\n  );\n};\n\nexport default HelpKeyboardShortcuts;\n","import React from 'react';\n\nimport styled, { keyframes } from 'styled-components';\n\nconst BACKGROUND_COLOR = {\n  error: '#f44336',\n  warning: '#ff9800',\n  info: '#2196f3',\n  success: '#4caf50',\n};\n\nconst TRANSITION_DURATION = 500;\n\nconst Container = styled.div`\n  position: absolute;\n  top: ${props => (props.open ? '5px' : '-200px')};\n  left: 50%;\n  transition: top ${TRANSITION_DURATION}ms;\n  transform: translateX(-50%);\n  overflow: hidden;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  border-radius: 10px;\n  min-width: 300px;\n  min-height: 50px;\n\n  cursor: pointer;\n\n  background: ${props => BACKGROUND_COLOR[props.type]};\n  color: white;\n  font-size: 14px;\n  font-weight: bold;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2),\n    0px 6px 10px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst Message = styled.span`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  width: 100%;\n  align-items: flex-start;\n  margin-top: 5px;\n  padding: 8px 16px;\n`;\n\nconst progress = keyframes`\n  0% {\n    width: 100%;\n  }\n  100% {\n    width: 0;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  background: #ffffff80;\n  height: 5px;\n  border-radius: 5px;\n  align-self: flex-start;\n  width: 100%;\n\n  animation-name: ${progress};\n  animation-play-state: ${props =>\n    props.paused ? 'paused' : 'running'};\n  animation-duration: ${props =>\n    props.timeout - TRANSITION_DURATION / 2}ms;\n  animation-delay: ${TRANSITION_DURATION / 2}ms;\n  animation-timing-function: linear;\n`;\n\nconst Snackbar = ({ open, handleClose, message, type, timeout }) => {\n  return (\n    <Container\n      type={type}\n      timeout={timeout}\n      open={open}\n      onClick={handleClose}\n    >\n      <Message>\n        {message.split(`\\n`).map(string => (\n          <div key={string}>{string}</div>\n        ))}\n      </Message>\n\n      {open && <ProgressBar timeout={timeout} />}\n    </Container>\n  );\n};\n\nexport default Snackbar;\n","export const DIMENSIONS = { width: 180, height: 135 };\n\n/**\n * Example circuit used to make the tour\n */\nexport default {\n  id: 'tour-circuit',\n  locked: false,\n  offsetX: 0,\n  offsetY: 0,\n  zoom: 100,\n  gridSize: 15,\n  layers: [\n    {\n      id: '4d94cbed-1005-4dc6-b0e3-44d71dc14380',\n      type: 'diagram-links',\n      isSvg: true,\n      transformed: true,\n      models: {\n        'clock-out-link': {\n          id: 'clock-out-link',\n          type: 'link',\n          selected: false,\n          source: 'clock',\n          sourcePort: 'clock-port',\n          target: 'and',\n          targetPort: 'and-port-in0',\n          points: [\n            {\n              id: 'bb7c0935-a272-45ea-b47a-f9b79fa7fac3',\n              type: 'point',\n              x: 30,\n              y: 15,\n            },\n            {\n              id: '2f339615-1c6c-450c-9862-06742ed3893f',\n              type: 'point',\n              x: 60,\n              y: 15,\n            },\n          ],\n          labels: [],\n          bifurcations: [],\n          bifurcationSource: null,\n          bifurcationTarget: null,\n          value: null,\n        },\n        'and-out-link': {\n          id: 'and-out-link',\n          type: 'link',\n          selected: false,\n          source: 'and',\n          sourcePort: 'and-port-out',\n          target: null,\n          targetPort: null,\n          points: [\n            {\n              id: 'e4916002-7182-4866-9df7-46473e7de8bc',\n              type: 'point',\n              x: 150,\n              y: 45,\n            },\n            {\n              id: 'd677077d-9750-4831-be02-566294c988b1',\n              type: 'point',\n              x: 180,\n              y: 45,\n            },\n          ],\n          labels: [],\n          bifurcations: [],\n          bifurcationSource: null,\n          bifurcationTarget: null,\n          value: null,\n        },\n        'button-out-link': {\n          id: 'button-out-link',\n          type: 'link',\n          selected: false,\n          source: 'button',\n          sourcePort: 'c241c69b-8e1a-45be-9982-4c96a537584f',\n          target: 'and',\n          targetPort: 'and-port-in1',\n          points: [\n            {\n              id: 'fbd656c6-6a36-4903-94b8-c715db34052d',\n              type: 'point',\n              x: 30,\n              y: 75,\n            },\n            {\n              id: 'f70cce22-3d5d-4257-9916-b602da9a901b',\n              type: 'point',\n              x: 60,\n              y: 75,\n            },\n          ],\n          labels: [],\n          bifurcations: ['not-in-link'],\n          bifurcationSource: null,\n          bifurcationTarget: null,\n          value: null,\n        },\n        'not-out-link': {\n          id: 'not-out-link',\n          type: 'link',\n          selected: false,\n          source: 'not',\n          sourcePort: 'not-port-out',\n          target: null,\n          targetPort: null,\n          points: [\n            {\n              id: 'ba84ed0f-78ed-43c2-93d8-cf907b91b5fd',\n              type: 'point',\n              x: 120,\n              y: 120,\n            },\n            {\n              id: '78a6e161-97c3-4a31-a46c-244469ac75ff',\n              type: 'point',\n              x: 180,\n              y: 120,\n            },\n          ],\n          labels: [],\n          bifurcations: [],\n          bifurcationSource: null,\n          bifurcationTarget: null,\n          value: null,\n        },\n        'not-in-link': {\n          id: 'not-in-link',\n          type: 'link',\n          selected: false,\n          source: null,\n          sourcePort: null,\n          target: 'not',\n          targetPort: '589ba5d7-8c75-4c82-9068-a67c9b023f77',\n          points: [\n            {\n              id: 'fada8e3b-4b46-4a24-a7ec-e3ca3bab77ab',\n              type: 'point',\n              x: 45,\n              y: 75,\n            },\n            {\n              id: 'f31e71e6-5d72-4f17-9af1-c23bfd257980',\n              type: 'point',\n              x: 45,\n              y: 120,\n            },\n            {\n              id: '2e747ee3-1c90-4e95-a40b-f221eb0710b3',\n              type: 'point',\n              x: 75,\n              y: 120,\n            },\n          ],\n          labels: [],\n          bifurcations: [],\n          bifurcationSource: 'button-out-link',\n          bifurcationTarget: null,\n          value: null,\n        },\n      },\n    },\n    {\n      id: '9d30c1dd-e474-45b1-ad88-6b7739678ef3',\n      type: 'diagram-nodes',\n      isSvg: false,\n      transformed: true,\n      models: {\n        clock: {\n          id: 'clock',\n          type: 'Clock',\n          selected: false,\n          x: 0,\n          y: 0,\n          ports: [\n            {\n              id: 'clock-port',\n              type: 'Port',\n              selected: false,\n              x: 25,\n              y: 10,\n              name: 'out',\n              parentNode: 'clock',\n              links: ['clock-out-link'],\n              input: false,\n              value: null,\n            },\n          ],\n          configurations: {\n            FREQUENCY_HZ: 0.5,\n            HIGH_DURATION: 1,\n            LOW_DURATION: 1,\n          },\n        },\n        and: {\n          id: 'and',\n          type: 'And',\n          selected: false,\n          x: 60,\n          y: 0,\n          ports: [\n            {\n              id: 'and-port-in0',\n              type: 'Port',\n              selected: false,\n              x: 55,\n              y: 10,\n              name: 'in0',\n              parentNode: 'and',\n              links: ['clock-out-link'],\n              input: true,\n              value: null,\n            },\n            {\n              id: 'and-port-in1',\n              type: 'Port',\n              selected: false,\n              x: 55,\n              y: 70,\n              name: 'in1',\n              parentNode: 'and',\n              links: ['button-out-link'],\n              input: true,\n              value: null,\n            },\n            {\n              id: 'and-port-out',\n              type: 'Port',\n              selected: false,\n              x: 145,\n              y: 40,\n              name: 'out',\n              parentNode: 'and',\n              links: ['and-out-link'],\n              input: false,\n              value: null,\n            },\n          ],\n          configurations: { INPUT_PORTS_NUMBER: 2 },\n        },\n        button: {\n          id: 'button',\n          type: 'Button',\n          selected: false,\n          x: 0,\n          y: 60,\n          ports: [\n            {\n              id: 'c241c69b-8e1a-45be-9982-4c96a537584f',\n              type: 'Port',\n              selected: false,\n              x: 25,\n              y: 70,\n              name: 'out',\n              parentNode: 'button',\n              links: ['button-out-link'],\n              input: false,\n              value: null,\n            },\n          ],\n          configurations: {},\n        },\n        not: {\n          id: 'not',\n          type: 'Not',\n          selected: false,\n          x: 75,\n          y: 105,\n          ports: [\n            {\n              id: '589ba5d7-8c75-4c82-9068-a67c9b023f77',\n              type: 'Port',\n              selected: false,\n              x: 70,\n              y: 115,\n              name: 'in',\n              parentNode: 'not',\n              links: ['not-in-link'],\n              input: true,\n              value: null,\n            },\n            {\n              id: 'not-port-out',\n              type: 'Port',\n              selected: false,\n              x: 115,\n              y: 115,\n              name: 'out',\n              parentNode: 'not',\n              links: ['not-out-link'],\n              input: false,\n              value: null,\n            },\n          ],\n          configurations: {},\n        },\n      },\n    },\n  ],\n};\n","import React, { Component } from 'react';\nimport GitHubButton from 'react-github-button';\nimport Joyride, { ACTIONS, EVENTS } from 'react-joyride';\n\nimport styled, { keyframes } from 'styled-components';\n\nimport Key from '../Key/Key';\nimport bifurcation from './images/bifurcation.gif';\nimport contextMenu from './images/context-menu.gif';\nimport simulation from './images/simulation.gif';\nimport wire from './images/wire.gif';\nimport { DIMENSIONS } from './tourCircuit';\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n\n  55% {\n    background-color: rgba(42, 8, 69, 0.5);\n    transform: scale(1.2);\n  }\n`;\n\nconst Pulse = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  animation: ${pulse} 1s ease-in-out infinite;\n  background-color: ${props => props.color};\n  border: 1px solid rgba(42, 8, 69, 0.7);\n  border-radius: 50%;\n\n  height: ${props => props.size}px;\n  width: ${props => props.size}px;\n`;\n\nconst Beacon = React.forwardRef((props, ref) => (\n  <Pulse\n    size={30}\n    color=\"rgba(100, 65, 165, 0.3)\"\n    ref={ref}\n    {...props}\n  >\n    <Pulse size={20} color=\"rgba(100, 65, 165, 0.5)\" />\n  </Pulse>\n));\n\nconst imageStyle = {\n  alignSelf: 'center',\n  borderRadius: 25,\n  boxShadow: 'rgba(171, 171, 171, 0.38) 0px 13px 20px 0px',\n  marginBottom: 16,\n};\n\nexport default class Tour extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 0,\n      steps: [\n        {\n          title: 'Welcome!',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <img\n                src={`${process.env.PUBLIC_URL}/social.png`}\n                alt=\"logossim's logo\"\n                style={{\n                  width: 300,\n                  height: 158,\n                  alignSelf: 'center',\n                }}\n              />\n              <p>\n                This is <strong>logossim</strong>: an open source\n                digital logic simulator, built for the web and to be\n                extensible.\n              </p>\n              <p>Would you like to take a quick tour?</p>\n            </div>\n          ),\n          target: 'body',\n          placement: 'center',\n          showProgress: false,\n          disableOverlayClose: false,\n          locale: {\n            skip: 'No, thanks',\n            next: 'Yes, please!',\n          },\n        },\n        {\n          target: '#tour-circuit-area-wrapper',\n          title: 'This is the circuit workstation',\n          content: (\n            <p>\n              Here&apos;s where you are going to draw your circuits\n            </p>\n          ),\n        },\n        {\n          target: '#component-select-button',\n          title: 'Adding components',\n          content: (\n            <span>\n              <p>And you&apos;ll start by adding some components.</p>\n              <p>\n                You can do it by clicking on this button, then\n                you&apos;ll see all available components, so you can\n                create awesome circuits...\n              </p>\n              <p>\n                <strong>Hint:</strong> use the\n                <Key size={24}>CTRL</Key>\n                <Key size={24}>A</Key> shortcut.\n              </p>\n            </span>\n          ),\n          placement: 'top',\n        },\n        {\n          target: '#tour-circuit-wrapper',\n          title: 'Adding components',\n          content: <p>... like this one, for example!</p>,\n          spotlightPadding: 30,\n        },\n        {\n          target: '#tour-circuit-wrapper',\n          title: 'Managing components',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                Notice that you can right click anywhere on the canvas\n                to access some handy commands, like duplicate, undo\n                &amp; redo and component configuration editing.\n              </p>\n              <img\n                src={contextMenu}\n                alt=\"Context menu example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 132,\n                }}\n              />\n            </div>\n          ),\n          spotlightPadding: 30,\n        },\n        {\n          target: '[data-linkid=\"clock-out-link\"]',\n          title: 'Wiring components',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                To wire components together, you can drag a\n                component&apos;s port onto another port.\n              </p>\n              <img\n                src={wire}\n                alt=\"Wiring components example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 178,\n                }}\n              />\n              <p>\n                <strong>Oh! Important note:</strong> you can select a\n                wire by clicking it, and delete it using the Delete\n                key.\n              </p>\n            </div>\n          ),\n          placement: 'top',\n          spotlightPadding: 45,\n        },\n        {\n          target: '[data-linkid=\"not-in-link\"]',\n          title: 'Wiring components',\n          content: (\n            <span\n              style={{ display: 'flex', flexDirection: 'column' }}\n            >\n              <p>\n                You can also drag a new wire from an existing wire.\n              </p>\n              <img\n                src={bifurcation}\n                alt=\"Bifurcating wires example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 160,\n                }}\n              />\n              <p>\n                <strong>Another important note:</strong> you can leave\n                the wire with a loose end and connect it afterwards.\n              </p>\n            </span>\n          ),\n          placement: 'top',\n          spotlightPadding: 45,\n        },\n        {\n          target: '#simulation-control-buttons',\n          title: 'Simulation control',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                After wiring it all together, you just need to run the\n                simulation to test your ideas!\n              </p>\n              <img\n                src={simulation}\n                alt=\"Simulation execution example video\"\n                style={{\n                  ...imageStyle,\n                  width: 254,\n                  height: 194,\n                }}\n              />\n              <p>Useful shortcuts:</p>\n              <ul style={{ margin: 0 }}>\n                <li>\n                  <strong>Play/pause:</strong>\n                  <Key size={24}>SPACE</Key>\n                </li>\n                <li>\n                  <strong>Stop:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>SPACE</Key>\n                </li>\n              </ul>\n            </div>\n          ),\n          placement: 'top',\n        },\n        {\n          target: '#help-button',\n          title: 'Still need help?',\n          content: (\n            <span>\n              <p>\n                In case you need any assistance in the future, come\n                back to this help button. Here you&apos;ll find:\n              </p>\n              <ol style={{ lineHeight: '200%' }}>\n                <li>All keyboard shortcuts</li>\n                <li>More about the project</li>\n                <li>\n                  And this tour, if you feel like doing it another\n                  time\n                </li>\n              </ol>\n            </span>\n          ),\n        },\n        {\n          target: '#save-load-buttons',\n          title: 'By the way...',\n          content: (\n            <span>\n              <p>\n                After you&apos;ve done your amazing circuit,\n                don&apos;t forget that you can save it and reload it\n                later!\n              </p>\n              <p>Useful shortcuts:</p>\n              <ul style={{ margin: 0 }}>\n                <li>\n                  <strong>Save:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>S</Key>\n                </li>\n                <li>\n                  <strong>Load:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>L</Key>\n                </li>\n              </ul>\n            </span>\n          ),\n        },\n        {\n          target: 'body',\n          title: \"And that's all folks!\",\n          content: (\n            <div>\n              <p>\n                If you want to know more about the project,{' '}\n                <a\n                  href=\"https://github.com/renato-bohler/logossim\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  check us out on GitHub!\n                </a>\n              </p>\n              <GitHubButton\n                type=\"stargazers\"\n                namespace=\"renato-bohler\"\n                repo=\"logossim\"\n              />\n              <p>\n                <strong>You can help us</strong> make logossim better!\n                If you know a little bit of web development, you can\n                quite easily develop new components to the\n                application.\n              </p>\n            </div>\n          ),\n          placement: 'center',\n          showProgress: false,\n          showSkipButton: false,\n          disableOverlayClose: false,\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.recenterTourCircuit);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.recenterTourCircuit);\n  }\n\n  recenterTourCircuit = () => {\n    const { currentStep } = this.state;\n    const { run } = this.props;\n\n    if (!run) return;\n    if (currentStep < 3) return;\n\n    const { recenterCircuit } = this.props;\n    recenterCircuit();\n  };\n\n  callback = ({ type, action, index }) => {\n    const { setTourRunning, loadCircuit, clearCircuit } = this.props;\n\n    // Next step\n    if (type === EVENTS.STEP_AFTER) {\n      if (index === 2 && action === ACTIONS.NEXT) loadCircuit();\n      if (index === 3 && action === ACTIONS.PREV) clearCircuit();\n\n      this.setState({\n        currentStep: index + (action === ACTIONS.NEXT ? 1 : -1),\n      });\n    }\n\n    // Dismiss (skipping, closing or ending tour)\n    if (type === EVENTS.TOUR_END || action === ACTIONS.CLOSE) {\n      clearCircuit();\n      localStorage.setItem('tour-done', true);\n      setTourRunning(false);\n      this.setState({ currentStep: 0 });\n    }\n  };\n\n  render() {\n    const { steps, currentStep } = this.state;\n    const { run } = this.props;\n\n    return (\n      <>\n        <Joyride\n          run={run}\n          steps={steps}\n          stepIndex={currentStep}\n          continuous\n          scrollToFirstStep\n          showProgress\n          showSkipButton\n          disableOverlayClose\n          styles={{\n            tooltip: {\n              borderRadius: 10,\n            },\n            tooltipContent: {\n              fontSize: 14,\n              textAlign: 'left',\n            },\n            buttonBack: {\n              color: 'black',\n              fontSize: 12,\n            },\n            buttonNext: {\n              background: '#6441a5',\n              fontSize: 12,\n              borderRadius: 5,\n            },\n            buttonSkip: {\n              color: '#6441a5',\n              fontSize: 12,\n              border: '1px solid #6441a5',\n              borderRadius: 5,\n            },\n          }}\n          locale={{\n            back: 'Back',\n            close: 'Close',\n            last: 'Got it!',\n            next: 'Next',\n            open: 'Open',\n            skip: 'Skip',\n          }}\n          beaconComponent={Beacon}\n          callback={this.callback}\n        />\n        <div\n          style={{\n            display: run ? 'block' : 'none',\n            position: 'absolute',\n            width: window.innerWidth * 0.75,\n            height: window.innerHeight * 0.5,\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n          id=\"tour-circuit-area-wrapper\"\n        />\n        <div\n          style={{\n            display: run ? 'block' : 'none',\n            position: 'absolute',\n            width: DIMENSIONS.width,\n            height: DIMENSIONS.height,\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n          id=\"tour-circuit-wrapper\"\n        />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport components, { groupedComponents } from '@logossim/components';\nimport {\n  SimulationEngine,\n  DiagramEngine,\n  Diagram,\n} from '@logossim/core';\n\nimport {\n  DiagramStateButtons,\n  SimulationControlButtons,\n  ComponentSelectButton,\n  ComponentSelect,\n  ComponentEdit,\n  ContextMenus,\n  HelpKeyboardShortcuts,\n  HelpAbout,\n  Snackbar,\n  Tour,\n} from './ui-components';\nimport tourCircuit, {\n  DIMENSIONS,\n} from './ui-components/Tour/tourCircuit';\n\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isComponentSelectOpen: false,\n      isComponentEditOpen: false,\n      isHelpKeyboardOpen: false,\n      isHelpAboutOpen: false,\n      componentEdit: null,\n      isTourAvailable: false,\n      isTourRunning: !JSON.parse(localStorage.getItem('tour-done')),\n      snackbar: {\n        open: false,\n        message: '',\n        type: 'success',\n        timeout: 0,\n        timeoutID: null,\n      },\n    };\n\n    this.diagram = new DiagramEngine(\n      components,\n      this.areShortcutsAllowed,\n      this.showSnackbar,\n    );\n    this.simulation = new SimulationEngine(components);\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.shortcutHandler);\n    window.addEventListener('load', this.loadHandler);\n    window.addEventListener('beforeunload', this.unloadHandler);\n\n    this.autoSaveInterval = setInterval(this.autoSave, 15000);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.shortcutHandler);\n    window.addEventListener('load', this.loadHandler);\n    window.removeEventListener('beforeunload', this.unloadHandler);\n\n    clearInterval(this.autoSaveInterval);\n  }\n\n  areShortcutsAllowed = () => {\n    const {\n      isComponentSelectOpen,\n      isComponentEditOpen,\n      isHelpKeyboardOpen,\n      isHelpAboutOpen,\n    } = this.state;\n\n    return !(\n      isComponentSelectOpen ||\n      isComponentEditOpen ||\n      isHelpKeyboardOpen ||\n      isHelpAboutOpen\n    );\n  };\n\n  shortcutHandler = event => {\n    const { ctrlKey, shiftKey, code } = event;\n\n    if (!this.areShortcutsAllowed()) return;\n\n    // Add component\n    if (ctrlKey && code === 'KeyA') {\n      event.preventDefault();\n      if (!this.simulation.isStopped()) return;\n\n      this.showAddComponent();\n    }\n\n    // Component configuration\n    if (ctrlKey && code === 'KeyE') {\n      event.preventDefault();\n      if (!this.simulation.isStopped()) return;\n\n      const selectedNodes = this.diagram.getSelectedNodes();\n      if (selectedNodes.length !== 1) return;\n      const node = selectedNodes[0];\n      this.showEditComponent(node);\n    }\n\n    // Play/pause toggle simulation\n    if (!ctrlKey && code === 'Space') {\n      event.preventDefault();\n      if (this.simulation.isRunning()) this.handleClickPause();\n      else this.handleClickStart();\n    }\n\n    // Stop simulation\n    if ((ctrlKey && code === 'Space') || code === 'Escape') {\n      event.preventDefault();\n\n      if (!this.simulation.isStopped()) this.handleClickStop();\n    }\n\n    // Save circuit\n    if (ctrlKey && !shiftKey && code === 'KeyS') {\n      event.preventDefault();\n      this.handleClickSave();\n    }\n\n    // Load circuit\n    if (\n      (ctrlKey && code === 'KeyL') ||\n      (ctrlKey && shiftKey && code === 'KeyS')\n    ) {\n      event.preventDefault();\n      this.handleClickLoad();\n    }\n  };\n\n  isCircuitEmpty = circuit => {\n    if (!circuit) return true;\n\n    return Object.keys(circuit.layers[1].models).length === 0;\n  };\n\n  loadHandler = () => {\n    const lastSaved = JSON.parse(\n      localStorage.getItem('circuit-autosave'),\n    );\n\n    if (this.isCircuitEmpty(lastSaved)) {\n      this.setState({ isTourAvailable: true });\n      return;\n    }\n\n    const reload = window.confirm('Reload last unsaved circuit?');\n    if (reload) {\n      this.diagram.load(lastSaved);\n    } else {\n      this.setState({ isTourAvailable: true });\n      localStorage.removeItem('circuit-autosave');\n    }\n  };\n\n  shouldWarnUnload = (currentCircuit, lastSavedCircuit) => {\n    if (this.isCircuitEmpty(currentCircuit)) return false;\n\n    return (\n      JSON.stringify(lastSavedCircuit.layers) !==\n      JSON.stringify(currentCircuit.layers)\n    );\n  };\n\n  unloadHandler = event => {\n    const lastSaved = JSON.parse(localStorage.getItem('circuit'));\n    const current = this.diagram.serialize();\n\n    if (this.shouldWarnUnload(current, lastSaved)) {\n      if (this.simulation.isStopped()) {\n        localStorage.setItem(\n          'circuit-autosave',\n          JSON.stringify(current),\n        );\n      }\n      // eslint-disable-next-line no-param-reassign\n      event.returnValue =\n        'You have unsaved changes. Sure you want to leave?';\n    }\n  };\n\n  autoSave = () => {\n    const circuit = this.diagram.serialize();\n\n    if (circuit.id === 'tour-circuit') return;\n    if (this.isCircuitEmpty(circuit)) return;\n    if (!this.simulation.isStopped()) return;\n\n    localStorage.setItem('circuit-autosave', JSON.stringify(circuit));\n  };\n\n  synchronizeSimulation = () => {\n    const diff = this.simulation.getDiff();\n\n    // Handles components diff\n    Object.entries(diff.components).forEach(([id, componentDiff]) =>\n      this.diagram.synchronizeComponent(id, componentDiff),\n    );\n\n    // Handles link value diff\n    Object.entries(diff.links).forEach(([id, value]) =>\n      this.diagram.synchronizeLink(id, value),\n    );\n\n    this.simulation.clearDiff();\n    this.diagram.repaint();\n  };\n\n  renderSimulation = () => {\n    if (!this.simulation.isRunning()) return;\n\n    this.synchronizeSimulation();\n\n    requestAnimationFrame(this.renderSimulation);\n  };\n\n  handleClickSave = () => {\n    const serialized = JSON.stringify(this.diagram.serialize());\n    localStorage.setItem('circuit', serialized);\n    console.log(JSON.parse(serialized));\n  };\n\n  handleClickLoad = () => {\n    const circuit = localStorage.getItem('circuit');\n    if (!circuit) {\n      window.alert('No circuit has been saved yet');\n      return;\n    }\n\n    this.diagram.load(JSON.parse(circuit));\n  };\n\n  handleClickStart = () => {\n    const serialized = JSON.stringify(this.diagram.serialize());\n    localStorage.setItem('circuit-autosave', serialized);\n\n    this.diagram.clearSelection();\n    this.diagram.setLocked(true);\n\n    this.simulation.start(this.diagram.getModel());\n    this.renderSimulation();\n    this.forceUpdate();\n  };\n\n  handleClickPause = () => {\n    this.simulation.pause();\n    this.forceUpdate();\n  };\n\n  handleClickStop = async () => {\n    await this.simulation.stop();\n    this.diagram.clearAllValues();\n    this.diagram.setLocked(false);\n    this.forceUpdate();\n    this.simulation.clearDiff();\n  };\n\n  showAddComponent = () =>\n    this.setState({\n      isComponentSelectOpen: true,\n    });\n\n  hideAddComponent = () =>\n    this.setState({\n      isComponentSelectOpen: false,\n    });\n\n  showEditComponent = componentEdit => {\n    this.diagram.clearSelection();\n\n    this.setState({\n      isComponentEditOpen: true,\n      componentEdit,\n    });\n  };\n\n  hideEditComponent = () =>\n    this.setState({\n      isComponentEditOpen: false,\n      componentEdit: null,\n    });\n\n  setTourRunning = isTourRunning => this.setState({ isTourRunning });\n\n  showHelpTour = () => this.setTourRunning(true);\n\n  showHelpKeyboard = () =>\n    this.setState({ isHelpKeyboardOpen: true });\n\n  hideHelpKeyboard = () =>\n    this.setState({ isHelpKeyboardOpen: false });\n\n  showHelpAbout = () => this.setState({ isHelpAboutOpen: true });\n\n  hideHelpAbout = () => this.setState({ isHelpAboutOpen: false });\n\n  showSnackbar = async (message, type = 'error') => {\n    const { snackbar } = this.state;\n    const timeout = 3000 + message.split(' ').length * 50;\n\n    if (snackbar.open) {\n      clearTimeout(snackbar.timeoutID);\n      this.hideSnackbar();\n      await new Promise(res => setTimeout(res, 500));\n    }\n\n    this.setState({\n      snackbar: {\n        open: true,\n        message,\n        type,\n        timeout,\n        timeoutID: setTimeout(this.hideSnackbar, timeout),\n      },\n    });\n  };\n\n  hideSnackbar = () => {\n    const { snackbar } = this.state;\n    clearTimeout(snackbar.timeoutID);\n\n    this.setState(state => ({\n      snackbar: {\n        ...state.snackbar,\n        open: false,\n      },\n    }));\n  };\n\n  handleLoadTourCircuit = () => {\n    this.circuitBeforeTour = this.diagram.serialize();\n    this.diagram.load(tourCircuit);\n    this.handleCenterTourCircuitOffset();\n  };\n\n  handleUnloadTourCircuit = () => {\n    if (!this.circuitBeforeTour) return;\n\n    this.diagram.load(this.circuitBeforeTour);\n    this.circuitBeforeTour = null;\n  };\n\n  handleCenterTourCircuitOffset = () => {\n    this.diagram\n      .getModel()\n      .setOffset(\n        (window.innerWidth - DIMENSIONS.width) / 2,\n        (window.innerHeight - DIMENSIONS.height) / 2,\n      );\n    this.diagram.realignGrid();\n    this.diagram.repaint();\n  };\n\n  render() {\n    const {\n      isComponentSelectOpen,\n      isComponentEditOpen,\n      isHelpKeyboardOpen,\n      isHelpAboutOpen,\n      componentEdit,\n      isTourAvailable,\n      isTourRunning,\n      snackbar,\n    } = this.state;\n\n    return (\n      <>\n        <DiagramStateButtons\n          handleClickSave={this.handleClickSave}\n          handleClickLoad={this.handleClickLoad}\n          handleClickKeyboardShortcuts={this.showHelpKeyboard}\n          handleClickRedoTour={this.showHelpTour}\n          handleClickAbout={this.showHelpAbout}\n          disabled={!this.simulation.isStopped()}\n        />\n        <SimulationControlButtons\n          state={this.simulation.getState()}\n          handleClickStart={this.handleClickStart}\n          handleClickPause={this.handleClickPause}\n          handleClickStop={this.handleClickStop}\n        />\n        <ComponentSelectButton\n          handleClick={this.showAddComponent}\n          disabled={!this.simulation.isStopped()}\n        />\n\n        <ComponentSelect\n          isOpen={isComponentSelectOpen}\n          groups={groupedComponents}\n          handleClose={this.hideAddComponent}\n          handleComponentDrop={this.diagram.handleComponentDrop}\n        />\n        <ComponentEdit\n          isOpen={isComponentEditOpen}\n          components={components}\n          component={componentEdit}\n          handleClose={this.hideEditComponent}\n          handleComponentEdit={this.diagram.handleComponentEdit}\n        />\n\n        <HelpKeyboardShortcuts\n          isOpen={isHelpKeyboardOpen}\n          handleClose={this.hideHelpKeyboard}\n        />\n        <HelpAbout\n          isOpen={isHelpAboutOpen}\n          handleClose={this.hideHelpAbout}\n        />\n        {isTourAvailable && (\n          <Tour\n            run={isTourRunning}\n            setTourRunning={this.setTourRunning}\n            loadCircuit={this.handleLoadTourCircuit}\n            clearCircuit={this.handleUnloadTourCircuit}\n            recenterCircuit={this.handleCenterTourCircuitOffset}\n          />\n        )}\n\n        <Diagram engine={this.diagram} />\n\n        <ContextMenus\n          duplicateSelected={this.diagram.duplicateSelected}\n          cutSelected={this.diagram.cutSelected}\n          copySelected={this.diagram.copySelected}\n          pasteSelected={this.diagram.pasteSelected}\n          deleteSelected={this.diagram.deleteSelected}\n          undo={this.diagram.undo}\n          redo={this.diagram.redo}\n          zoomIn={this.diagram.zoomIn}\n          zoomOut={this.diagram.zoomOut}\n          configureComponent={this.showEditComponent}\n        />\n\n        <Tooltip id=\"tooltip\" globalEventOff=\"click\" />\n        <Snackbar\n          open={snackbar.open}\n          type={snackbar.type}\n          message={snackbar.message}\n          timeout={snackbar.timeout}\n          handleClose={this.hideSnackbar}\n        />\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\n        'Error during service worker registration:',\n        error,\n      );\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null &&\n          contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}